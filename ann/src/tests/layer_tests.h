#ifndef ANN_LAYER_TESTS_H
#define ANN_LAYER_TESTS_H

#include "greatest.h"
#include "test_helper.h"
#include "../layer.h"

TEST layer_should_compute_correctly() {

  Layer layer;
  float weights[10][33] = {
    { -0.11726927012205124, 0.26910296082496643, -0.28151389956474304, -0.34414762258529663, 0.31943950057029724, 0.6410902738571167, 0.29372677206993103, -0.13721154630184174, 0.17735327780246735, 0.47491735219955444, -0.0564783476293087, 0.3050786256790161, -0.20115981996059418, 0.43877145648002625, -0.15115800499916077, -0.06318007409572601, -0.012298732064664364, 0.5987663269042969, -0.39593276381492615, 0.17283038794994354, -0.26263031363487244, -0.3495807647705078, -0.7188059091567993, 0.5433383584022522, 0.11716367304325104, -0.6051232218742371, -0.5325477123260498, -0.3589214086532593, -0.6694472432136536, 0.34253793954849243, -0.10076382756233215, -0.2500336468219757, -0.0761042982339859},
    { -0.027901018038392067, -0.3242035508155823, 0.09695416688919067, -0.010739839635789394, -0.21156913042068481, -0.3304440677165985, 0.6526332497596741, -0.16823239624500275, -0.34710007905960083, -0.13491074740886688, -1.078413963317871, 0.2618148922920227, 0.48635393381118774, -0.16549132764339447, -0.151597261428833, 0.10148560255765915, -0.18016526103019714, -0.38106569647789, -0.14688366651535034, 0.2821461856365204, -0.033405762165784836, 0.13236071169376373, -0.24332359433174133, -0.20907995104789734, 0.0770636796951294, 0.31452590227127075, 0.5208203196525574, -0.1696738302707672, 1.11086106300354, 0.39339393377304077, -0.30123165249824524, -0.3164278566837311, 0.12991434335708618},
    { 0.17479056119918823, -0.22391262650489807, 0.11625409126281738, 0.04485979676246643, -0.328391432762146, -0.14630936086177826, 0.5589890480041504, -0.08927210420370102, 0.2711973786354065, -0.6446494460105896, -0.20896071195602417, -0.29260534048080444, 0.14667777717113495, 0.8534519672393799, -0.35409387946128845, -0.8572527170181274, -0.4981539845466614, 0.5085914731025696, -0.5332378149032593, 0.5649279952049255, 0.3443787693977356, -0.19198821485042572, 0.17404146492481232, 0.1584661602973938, 0.4504755437374115, -1.4007110595703125, 0.469516396522522, -0.12313054502010345, 0.143085315823555, 0.30282843112945557, -0.12365075200796127, -0.15929502248764038, 0.3049258291721344},
    { 0.06624740362167358, -0.29719990491867065, 0.27152490615844727, -0.15938124060630798, -0.2979356050491333, -0.4382767975330353, -0.6779294610023499, -0.03505975753068924, 0.3655368387699127, -0.9026181101799011, 0.18772809207439423, 0.34228387475013733, -0.1562882512807846, 0.33111003041267395, 0.050796400755643845, 0.40464073419570923, 0.828730583190918, 0.5644724369049072, -0.12158521264791489, -0.21650758385658264, -0.12153632193803787, -0.2750478982925415, 0.15900565683841705, -0.7895557880401611, -0.5882168412208557, 0.28077879548072815, 0.329321950674057, 0.23060713708400726, -0.25301674008369446, 0.7229140996932983, -0.04997685179114342, 0.1753091961145401, -0.12005507200956345},
    { -0.13343192636966705, 0.31926101446151733, -0.08941949903964996, -0.11918041110038757, -0.32992520928382874, -0.059321992099285126, -0.46119099855422974, -0.37292787432670593, 0.22009512782096863, 0.8743221759796143, 0.2519824802875519, -0.08220415562391281, 0.22407245635986328, -0.6516492962837219, -0.050196386873722076, -0.34369274973869324, -0.8785738348960876, 0.14586947858333588, 0.12657906115055084, 0.1764066368341446, -0.17663885653018951, -0.2055269032716751, 0.14121204614639282, 0.34312018752098083, -0.6168097853660583, 0.6992099285125732, -0.6329088807106018, 0.13135099411010742, 0.6286793351173401, -1.2614877223968506, 0.26321321725845337, 0.27614039182662964, -0.34842437505722046},
    { -0.10340695083141327, -0.3226277530193329, 0.22501443326473236, 0.33339178562164307, -0.19117607176303864, 0.06525130569934845, 0.006137853022664785, 0.2941921651363373, -0.003928713034838438, 0.058569569140672684, 0.20854853093624115, -0.198034405708313, 0.8116415143013, -0.44978833198547363, -0.17403794825077057, 0.9600557684898376, 0.7964206337928772, -0.143779918551445, -0.570811927318573, -1.2020738124847412, -0.062047217041254044, 0.27147698402404785, 0.5278530716896057, 0.10187160223722458, -0.4449527859687805, 0.37077581882476807, 0.4934329092502594, 0.2066214680671692, -0.13248883187770844, 0.6380106806755066, 0.3607597351074219, 0.2925015985965729, -0.09165501594543457},
    { -0.0390695258975029, 0.17679591476917267, -0.25136393308639526, -0.1491336226463318, 0.23879505693912506, -0.22028721868991852, 0.4069109261035919, 0.24284514784812927, -0.36697012186050415, 0.551008939743042, -0.14545150101184845, 0.21335448324680328, -0.5113385915756226, -1.042212724685669, 0.2789546549320221, 0.08666422963142395, 0.23927900195121765, 0.2747408151626587, 0.15409907698631287, -0.30044934153556824, -0.010029267519712448, -0.027320532128214836, -0.37020862102508545, 0.5860042572021484, -0.21064208447933197, -0.4343935251235962, 0.7050229907035828, -0.1184246763586998, 0.37097594141960144, -0.020601212978363037, 0.2605763375759125, -0.0741378515958786, -0.11938855051994324},
    { -0.16754768788814545, -0.08618278056383133, 0.17754758894443512, 0.25575411319732666, -0.25505444407463074, 1.192771077156067, 0.3196321725845337, 0.0015370786422863603, 0.3223046660423279, 0.03373656049370766, 0.6417747735977173, 0.15446804463863373, -0.05466366931796074, 0.49037182331085205, 0.07764087617397308, 0.24176251888275146, -0.24371474981307983, 0.09129767119884491, -0.5099164247512817, 0.530260443687439, 0.26674801111221313, -0.3314313590526581, -0.44950902462005615, -0.5362195372581482, -0.30277249217033386, 0.06868120282888412, 0.06818702816963196, 0.21283483505249023, 0.12378986179828644, -0.35188522934913635, -0.13924996554851532, -0.3526371121406555, -0.10996046662330627},
    { 0.20770347118377686, 0.14551259577274323, 0.025686539709568024, -0.06118793785572052, -0.09567303210496902, -0.35048708319664, 0.3266758322715759, 0.2589168846607208, -0.09644821286201477, -0.7046379446983337, 0.07271253317594528, -0.35243257880210876, -0.6972428560256958, -0.07394339144229889, -0.26012879610061646, 0.5302395820617676, -0.060869138687849045, -0.6227506995201111, 0.5323407649993896, 0.06059018522500992, -0.2701573669910431, 0.009939674288034439, 0.5112594366073608, 0.16581951081752777, 0.7101390361785889, -0.4292808175086975, -0.007624257355928421, -0.16128350794315338, -0.3775894045829773, -0.02284163609147072, 0.1864803433418274, 0.09149609506130219, -0.026248443871736526},
    { 0.13988804817199707, 0.018275916576385498, -0.14904291927814484, 0.20282520353794098, 0.1989055871963501, -0.36798349022865295, -0.6032097935676575, -0.28059709072113037, 0.2710370421409607, -0.15936601161956787, 0.9183179140090942, -0.34779444336891174, 0.377995103597641, 0.06909991800785065, 0.23024682700634003, 0.35617905855178833, -0.31775593757629395, -0.6548852920532227, -0.08586019277572632, -0.04240400716662407, 0.20813991129398346, -0.22243648767471313, -0.30444595217704773, -0.02455376461148262, -0.31916600465774536, 0.7652125358581543, -1.0121365785598755, -0.08413999527692795, 0.2554449737071991, -0.030788853764533997, 0.2522241473197937, 0.18156316876411438, 0.036328066140413284},
  };
  Layer_ctor(&layer, "hidden", (float *)weights, 10, 32, Activation_ReLU);

  /* Initialise input */
  Input input;
  float inputData[] = {
          0.24169993, 0.12018039, 0.42653189, 0.06890842, 0.58050239,
          0.71397345, 0.33925042, 0.11951883, 0.98345867, 0.26328681,
          0.52939729, 0.58503289, 0.49239995, 0.66351988, 0.75062021,
          0.88575143, 0.90288052, 0.45882647, 0.95202892, 0.82310264,
          0.27441536, 0.65982622, 0.69107739, 0.33175497, 0.30631051,
          0.41104483, 0.13954941, 0.18359717, 0.21558719, 0.27035367,
          0.09722383, 0.74235318
  };
  Input_ctor(&input, inputData, 32);

  /* Perform computation */
  Layer_compute(&layer, &input);

  ASSERT_EQ_FLOAT(0.4391351862532704, layer.output[0]);
  ASSERT_EQ_FLOAT(0.0, layer.output[1]);
  ASSERT_EQ_FLOAT(0.16262125484949963, layer.output[2]);
  ASSERT_EQ_FLOAT(0.0, layer.output[3]);
  ASSERT_EQ_FLOAT(0.0, layer.output[4]);
  ASSERT_EQ_FLOAT(0.9626593574431257, layer.output[5]);
  ASSERT_EQ_FLOAT(0.6800523902111754, layer.output[6]);
  ASSERT_EQ_FLOAT(0.9810106376862915, layer.output[7]);
  ASSERT_EQ_FLOAT(0.0, layer.output[8]);
  ASSERT_EQ_FLOAT(0.0, layer.output[9]);

  Layer_dtor(&layer);

  PASS(); // Must end with a call to PASS or FAIL
}

TEST layer_with_softmax_should_compute_correctly() {

  Layer layer;
  float weights[10][33] = {
          { -0.11726927012205124, 0.26910296082496643, -0.28151389956474304, -0.34414762258529663, 0.31943950057029724, 0.6410902738571167, 0.29372677206993103, -0.13721154630184174, 0.17735327780246735, 0.47491735219955444, -0.0564783476293087, 0.3050786256790161, -0.20115981996059418, 0.43877145648002625, -0.15115800499916077, -0.06318007409572601, -0.012298732064664364, 0.5987663269042969, -0.39593276381492615, 0.17283038794994354, -0.26263031363487244, -0.3495807647705078, -0.7188059091567993, 0.5433383584022522, 0.11716367304325104, -0.6051232218742371, -0.5325477123260498, -0.3589214086532593, -0.6694472432136536, 0.34253793954849243, -0.10076382756233215, -0.2500336468219757, -0.0761042982339859},
          { -0.027901018038392067, -0.3242035508155823, 0.09695416688919067, -0.010739839635789394, -0.21156913042068481, -0.3304440677165985, 0.6526332497596741, -0.16823239624500275, -0.34710007905960083, -0.13491074740886688, -1.078413963317871, 0.2618148922920227, 0.48635393381118774, -0.16549132764339447, -0.151597261428833, 0.10148560255765915, -0.18016526103019714, -0.38106569647789, -0.14688366651535034, 0.2821461856365204, -0.033405762165784836, 0.13236071169376373, -0.24332359433174133, -0.20907995104789734, 0.0770636796951294, 0.31452590227127075, 0.5208203196525574, -0.1696738302707672, 1.11086106300354, 0.39339393377304077, -0.30123165249824524, -0.3164278566837311, 0.12991434335708618},
          { 0.17479056119918823, -0.22391262650489807, 0.11625409126281738, 0.04485979676246643, -0.328391432762146, -0.14630936086177826, 0.5589890480041504, -0.08927210420370102, 0.2711973786354065, -0.6446494460105896, -0.20896071195602417, -0.29260534048080444, 0.14667777717113495, 0.8534519672393799, -0.35409387946128845, -0.8572527170181274, -0.4981539845466614, 0.5085914731025696, -0.5332378149032593, 0.5649279952049255, 0.3443787693977356, -0.19198821485042572, 0.17404146492481232, 0.1584661602973938, 0.4504755437374115, -1.4007110595703125, 0.469516396522522, -0.12313054502010345, 0.143085315823555, 0.30282843112945557, -0.12365075200796127, -0.15929502248764038, 0.3049258291721344},
          { 0.06624740362167358, -0.29719990491867065, 0.27152490615844727, -0.15938124060630798, -0.2979356050491333, -0.4382767975330353, -0.6779294610023499, -0.03505975753068924, 0.3655368387699127, -0.9026181101799011, 0.18772809207439423, 0.34228387475013733, -0.1562882512807846, 0.33111003041267395, 0.050796400755643845, 0.40464073419570923, 0.828730583190918, 0.5644724369049072, -0.12158521264791489, -0.21650758385658264, -0.12153632193803787, -0.2750478982925415, 0.15900565683841705, -0.7895557880401611, -0.5882168412208557, 0.28077879548072815, 0.329321950674057, 0.23060713708400726, -0.25301674008369446, 0.7229140996932983, -0.04997685179114342, 0.1753091961145401, -0.12005507200956345},
          { -0.13343192636966705, 0.31926101446151733, -0.08941949903964996, -0.11918041110038757, -0.32992520928382874, -0.059321992099285126, -0.46119099855422974, -0.37292787432670593, 0.22009512782096863, 0.8743221759796143, 0.2519824802875519, -0.08220415562391281, 0.22407245635986328, -0.6516492962837219, -0.050196386873722076, -0.34369274973869324, -0.8785738348960876, 0.14586947858333588, 0.12657906115055084, 0.1764066368341446, -0.17663885653018951, -0.2055269032716751, 0.14121204614639282, 0.34312018752098083, -0.6168097853660583, 0.6992099285125732, -0.6329088807106018, 0.13135099411010742, 0.6286793351173401, -1.2614877223968506, 0.26321321725845337, 0.27614039182662964, -0.34842437505722046},
          { -0.10340695083141327, -0.3226277530193329, 0.22501443326473236, 0.33339178562164307, -0.19117607176303864, 0.06525130569934845, 0.006137853022664785, 0.2941921651363373, -0.003928713034838438, 0.058569569140672684, 0.20854853093624115, -0.198034405708313, 0.8116415143013, -0.44978833198547363, -0.17403794825077057, 0.9600557684898376, 0.7964206337928772, -0.143779918551445, -0.570811927318573, -1.2020738124847412, -0.062047217041254044, 0.27147698402404785, 0.5278530716896057, 0.10187160223722458, -0.4449527859687805, 0.37077581882476807, 0.4934329092502594, 0.2066214680671692, -0.13248883187770844, 0.6380106806755066, 0.3607597351074219, 0.2925015985965729, -0.09165501594543457},
          { -0.0390695258975029, 0.17679591476917267, -0.25136393308639526, -0.1491336226463318, 0.23879505693912506, -0.22028721868991852, 0.4069109261035919, 0.24284514784812927, -0.36697012186050415, 0.551008939743042, -0.14545150101184845, 0.21335448324680328, -0.5113385915756226, -1.042212724685669, 0.2789546549320221, 0.08666422963142395, 0.23927900195121765, 0.2747408151626587, 0.15409907698631287, -0.30044934153556824, -0.010029267519712448, -0.027320532128214836, -0.37020862102508545, 0.5860042572021484, -0.21064208447933197, -0.4343935251235962, 0.7050229907035828, -0.1184246763586998, 0.37097594141960144, -0.020601212978363037, 0.2605763375759125, -0.0741378515958786, -0.11938855051994324},
          { -0.16754768788814545, -0.08618278056383133, 0.17754758894443512, 0.25575411319732666, -0.25505444407463074, 1.192771077156067, 0.3196321725845337, 0.0015370786422863603, 0.3223046660423279, 0.03373656049370766, 0.6417747735977173, 0.15446804463863373, -0.05466366931796074, 0.49037182331085205, 0.07764087617397308, 0.24176251888275146, -0.24371474981307983, 0.09129767119884491, -0.5099164247512817, 0.530260443687439, 0.26674801111221313, -0.3314313590526581, -0.44950902462005615, -0.5362195372581482, -0.30277249217033386, 0.06868120282888412, 0.06818702816963196, 0.21283483505249023, 0.12378986179828644, -0.35188522934913635, -0.13924996554851532, -0.3526371121406555, -0.10996046662330627},
          { 0.20770347118377686, 0.14551259577274323, 0.025686539709568024, -0.06118793785572052, -0.09567303210496902, -0.35048708319664, 0.3266758322715759, 0.2589168846607208, -0.09644821286201477, -0.7046379446983337, 0.07271253317594528, -0.35243257880210876, -0.6972428560256958, -0.07394339144229889, -0.26012879610061646, 0.5302395820617676, -0.060869138687849045, -0.6227506995201111, 0.5323407649993896, 0.06059018522500992, -0.2701573669910431, 0.009939674288034439, 0.5112594366073608, 0.16581951081752777, 0.7101390361785889, -0.4292808175086975, -0.007624257355928421, -0.16128350794315338, -0.3775894045829773, -0.02284163609147072, 0.1864803433418274, 0.09149609506130219, -0.026248443871736526},
          { 0.13988804817199707, 0.018275916576385498, -0.14904291927814484, 0.20282520353794098, 0.1989055871963501, -0.36798349022865295, -0.6032097935676575, -0.28059709072113037, 0.2710370421409607, -0.15936601161956787, 0.9183179140090942, -0.34779444336891174, 0.377995103597641, 0.06909991800785065, 0.23024682700634003, 0.35617905855178833, -0.31775593757629395, -0.6548852920532227, -0.08586019277572632, -0.04240400716662407, 0.20813991129398346, -0.22243648767471313, -0.30444595217704773, -0.02455376461148262, -0.31916600465774536, 0.7652125358581543, -1.0121365785598755, -0.08413999527692795, 0.2554449737071991, -0.030788853764533997, 0.2522241473197937, 0.18156316876411438, 0.036328066140413284},
  };
  Layer_ctor(&layer, "hidden", (float *)weights, 10, 32, Activation_SoftMax);

  /* Initialise input */
  Input input;
  float inputData[] = {
          0.24169993, 0.12018039, 0.42653189, 0.06890842, 0.58050239,
          0.71397345, 0.33925042, 0.11951883, 0.98345867, 0.26328681,
          0.52939729, 0.58503289, 0.49239995, 0.66351988, 0.75062021,
          0.88575143, 0.90288052, 0.45882647, 0.95202892, 0.82310264,
          0.27441536, 0.65982622, 0.69107739, 0.33175497, 0.30631051,
          0.41104483, 0.13954941, 0.18359717, 0.21558719, 0.27035367,
          0.09722383, 0.74235318
  };
  Input_ctor(&input, inputData, 32);

  /* Perform computation */
  Layer_compute(&layer, &input);

  ASSERT_EQ_FLOAT(0.12277172785410112, layer.output[0]);
  ASSERT_EQ_FLOAT(0.07521163301636485, layer.output[1]);
  ASSERT_EQ_FLOAT(0.09311290868087142, layer.output[2]);
  ASSERT_EQ_FLOAT(0.04482770811239531, layer.output[3]);
  ASSERT_EQ_FLOAT(0.02785103121151854, layer.output[4]);
  ASSERT_EQ_FLOAT(0.20723448526120772, layer.output[5]);
  ASSERT_EQ_FLOAT(0.15621667157790314, layer.output[6]);
  ASSERT_EQ_FLOAT(0.21107261294153362, layer.output[7]);
  ASSERT_EQ_FLOAT(0.03563424244520480, layer.output[8]);
  ASSERT_EQ_FLOAT(0.02606697889889959, layer.output[9]);

  Layer_dtor(&layer);

  PASS();
}

SUITE(layer_tests) {
  RUN_TEST(layer_should_compute_correctly);
  RUN_TEST(layer_with_softmax_should_compute_correctly);
}

#endif //ANN_LAYER_TESTS_H
