// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "digitRecognizer.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic digitRecognizer::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic digitRecognizer::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<22> digitRecognizer::ap_ST_fsm_state1 = "1";
const sc_lv<22> digitRecognizer::ap_ST_fsm_state2 = "10";
const sc_lv<22> digitRecognizer::ap_ST_fsm_state3 = "100";
const sc_lv<22> digitRecognizer::ap_ST_fsm_pp0_stage0 = "1000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_pp0_stage1 = "10000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_pp0_stage2 = "100000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_pp0_stage3 = "1000000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_pp0_stage4 = "10000000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_pp0_stage5 = "100000000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_pp0_stage6 = "1000000000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_state17 = "10000000000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_state18 = "100000000000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_state19 = "1000000000000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_state20 = "10000000000000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_pp1_stage0 = "100000000000000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_pp1_stage1 = "1000000000000000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_pp1_stage2 = "10000000000000000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_pp1_stage3 = "100000000000000000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_pp1_stage4 = "1000000000000000000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_pp1_stage5 = "10000000000000000000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_pp1_stage6 = "100000000000000000000";
const sc_lv<22> digitRecognizer::ap_ST_fsm_state34 = "1000000000000000000000";
const sc_lv<32> digitRecognizer::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool digitRecognizer::ap_const_boolean_1 = true;
const int digitRecognizer::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> digitRecognizer::ap_const_lv32_8 = "1000";
const bool digitRecognizer::ap_const_boolean_0 = false;
const sc_lv<1> digitRecognizer::ap_const_lv1_0 = "0";
const sc_lv<32> digitRecognizer::ap_const_lv32_13 = "10011";
const sc_lv<32> digitRecognizer::ap_const_lv32_1 = "1";
const sc_lv<32> digitRecognizer::ap_const_lv32_2 = "10";
const sc_lv<32> digitRecognizer::ap_const_lv32_3 = "11";
const sc_lv<32> digitRecognizer::ap_const_lv32_4 = "100";
const sc_lv<32> digitRecognizer::ap_const_lv32_A = "1010";
const sc_lv<32> digitRecognizer::ap_const_lv32_C = "1100";
const sc_lv<32> digitRecognizer::ap_const_lv32_D = "1101";
const sc_lv<32> digitRecognizer::ap_const_lv32_E = "1110";
const sc_lv<32> digitRecognizer::ap_const_lv32_F = "1111";
const sc_lv<1> digitRecognizer::ap_const_lv1_1 = "1";
const sc_lv<32> digitRecognizer::ap_const_lv32_9 = "1001";
const sc_lv<32> digitRecognizer::ap_const_lv32_14 = "10100";
const sc_lv<6> digitRecognizer::ap_const_lv6_0 = "000000";
const sc_lv<32> digitRecognizer::ap_const_lv32_B = "1011";
const sc_lv<15> digitRecognizer::ap_const_lv15_0 = "000000000000000";
const sc_lv<10> digitRecognizer::ap_const_lv10_1 = "1";
const sc_lv<32> digitRecognizer::ap_const_lv32_15 = "10101";
const sc_lv<4> digitRecognizer::ap_const_lv4_0 = "0000";
const sc_lv<6> digitRecognizer::ap_const_lv6_1 = "1";
const sc_lv<32> digitRecognizer::ap_const_lv32_5 = "101";
const sc_lv<32> digitRecognizer::ap_const_lv32_10 = "10000";
const sc_lv<15> digitRecognizer::ap_const_lv15_311 = "1100010001";
const sc_lv<6> digitRecognizer::ap_const_lv6_20 = "100000";
const sc_lv<10> digitRecognizer::ap_const_lv10_311 = "1100010001";
const sc_lv<10> digitRecognizer::ap_const_lv10_3FF = "1111111111";
const sc_lv<32> digitRecognizer::ap_const_lv32_17 = "10111";
const sc_lv<32> digitRecognizer::ap_const_lv32_1E = "11110";
const sc_lv<8> digitRecognizer::ap_const_lv8_FF = "11111111";
const sc_lv<23> digitRecognizer::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<4> digitRecognizer::ap_const_lv4_A = "1010";
const sc_lv<4> digitRecognizer::ap_const_lv4_1 = "1";
const sc_lv<5> digitRecognizer::ap_const_lv5_0 = "00000";
const sc_lv<6> digitRecognizer::ap_const_lv6_21 = "100001";
const sc_lv<6> digitRecognizer::ap_const_lv6_3F = "111111";
const sc_lv<5> digitRecognizer::ap_const_lv5_4 = "100";

digitRecognizer::digitRecognizer(sc_module_name name) : sc_module(name), mVcdFile(0) {
    inputToHiddenWeights_U = new digitRecognizer_ibkb("inputToHiddenWeights_U");
    inputToHiddenWeights_U->clk(ap_clk);
    inputToHiddenWeights_U->reset(ap_rst_n_inv);
    inputToHiddenWeights_U->address0(inputToHiddenWeights_address0);
    inputToHiddenWeights_U->ce0(inputToHiddenWeights_ce0);
    inputToHiddenWeights_U->q0(inputToHiddenWeights_q0);
    hiddenToOutputWeight_U = new digitRecognizer_hcud("hiddenToOutputWeight_U");
    hiddenToOutputWeight_U->clk(ap_clk);
    hiddenToOutputWeight_U->reset(ap_rst_n_inv);
    hiddenToOutputWeight_U->address0(hiddenToOutputWeight_address0);
    hiddenToOutputWeight_U->ce0(hiddenToOutputWeight_ce0);
    hiddenToOutputWeight_U->q0(hiddenToOutputWeight_q0);
    digitRecognizer_digrec_io_s_axi_U = new digitRecognizer_digrec_io_s_axi<C_S_AXI_DIGREC_IO_ADDR_WIDTH,C_S_AXI_DIGREC_IO_DATA_WIDTH>("digitRecognizer_digrec_io_s_axi_U");
    digitRecognizer_digrec_io_s_axi_U->AWVALID(s_axi_digrec_io_AWVALID);
    digitRecognizer_digrec_io_s_axi_U->AWREADY(s_axi_digrec_io_AWREADY);
    digitRecognizer_digrec_io_s_axi_U->AWADDR(s_axi_digrec_io_AWADDR);
    digitRecognizer_digrec_io_s_axi_U->WVALID(s_axi_digrec_io_WVALID);
    digitRecognizer_digrec_io_s_axi_U->WREADY(s_axi_digrec_io_WREADY);
    digitRecognizer_digrec_io_s_axi_U->WDATA(s_axi_digrec_io_WDATA);
    digitRecognizer_digrec_io_s_axi_U->WSTRB(s_axi_digrec_io_WSTRB);
    digitRecognizer_digrec_io_s_axi_U->ARVALID(s_axi_digrec_io_ARVALID);
    digitRecognizer_digrec_io_s_axi_U->ARREADY(s_axi_digrec_io_ARREADY);
    digitRecognizer_digrec_io_s_axi_U->ARADDR(s_axi_digrec_io_ARADDR);
    digitRecognizer_digrec_io_s_axi_U->RVALID(s_axi_digrec_io_RVALID);
    digitRecognizer_digrec_io_s_axi_U->RREADY(s_axi_digrec_io_RREADY);
    digitRecognizer_digrec_io_s_axi_U->RDATA(s_axi_digrec_io_RDATA);
    digitRecognizer_digrec_io_s_axi_U->RRESP(s_axi_digrec_io_RRESP);
    digitRecognizer_digrec_io_s_axi_U->BVALID(s_axi_digrec_io_BVALID);
    digitRecognizer_digrec_io_s_axi_U->BREADY(s_axi_digrec_io_BREADY);
    digitRecognizer_digrec_io_s_axi_U->BRESP(s_axi_digrec_io_BRESP);
    digitRecognizer_digrec_io_s_axi_U->ACLK(ap_clk);
    digitRecognizer_digrec_io_s_axi_U->ARESET(ap_rst_n_inv);
    digitRecognizer_digrec_io_s_axi_U->ACLK_EN(ap_var_for_const0);
    digitRecognizer_digrec_io_s_axi_U->ap_start(ap_start);
    digitRecognizer_digrec_io_s_axi_U->interrupt(interrupt);
    digitRecognizer_digrec_io_s_axi_U->ap_ready(ap_ready);
    digitRecognizer_digrec_io_s_axi_U->ap_done(ap_done);
    digitRecognizer_digrec_io_s_axi_U->ap_idle(ap_idle);
    digitRecognizer_digrec_io_s_axi_U->inputData_address0(inputData_address0);
    digitRecognizer_digrec_io_s_axi_U->inputData_ce0(inputData_ce0);
    digitRecognizer_digrec_io_s_axi_U->inputData_q0(inputData_q0);
    digitRecognizer_digrec_io_s_axi_U->output_r_address0(output_r_address0);
    digitRecognizer_digrec_io_s_axi_U->output_r_ce0(output_r_ce0);
    digitRecognizer_digrec_io_s_axi_U->output_r_we0(output_r_we0);
    digitRecognizer_digrec_io_s_axi_U->output_r_d0(sum3_reg_256);
    hiddenOut_U = new digitRecognizer_hdEe("hiddenOut_U");
    hiddenOut_U->clk(ap_clk);
    hiddenOut_U->reset(ap_rst_n_inv);
    hiddenOut_U->address0(hiddenOut_address0);
    hiddenOut_U->ce0(hiddenOut_ce0);
    hiddenOut_U->we0(hiddenOut_we0);
    hiddenOut_U->d0(hiddenOut_d0);
    hiddenOut_U->q0(hiddenOut_q0);
    digitRecognizer_feOg_U0 = new digitRecognizer_feOg<1,7,32,32,32>("digitRecognizer_feOg_U0");
    digitRecognizer_feOg_U0->clk(ap_clk);
    digitRecognizer_feOg_U0->reset(ap_rst_n_inv);
    digitRecognizer_feOg_U0->din0(grp_fu_267_p0);
    digitRecognizer_feOg_U0->din1(reg_283);
    digitRecognizer_feOg_U0->ce(ap_var_for_const0);
    digitRecognizer_feOg_U0->dout(grp_fu_267_p2);
    digitRecognizer_ffYi_U1 = new digitRecognizer_ffYi<1,4,32,32,32>("digitRecognizer_ffYi_U1");
    digitRecognizer_ffYi_U1->clk(ap_clk);
    digitRecognizer_ffYi_U1->reset(ap_rst_n_inv);
    digitRecognizer_ffYi_U1->din0(grp_fu_273_p0);
    digitRecognizer_ffYi_U1->din1(grp_fu_273_p1);
    digitRecognizer_ffYi_U1->ce(ap_var_for_const0);
    digitRecognizer_ffYi_U1->dout(grp_fu_273_p2);
    digitRecognizer_fg8j_U2 = new digitRecognizer_fg8j<1,1,32,32,1>("digitRecognizer_fg8j_U2");
    digitRecognizer_fg8j_U2->din0(sum1_reg_223);
    digitRecognizer_fg8j_U2->din1(ap_var_for_const1);
    digitRecognizer_fg8j_U2->opcode(ap_var_for_const2);
    digitRecognizer_fg8j_U2->dout(tmp_14_fu_277_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage2_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage2_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage2_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage3_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage3_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage4_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage4_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage5_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage5_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage6_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage6_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage6_flag00011011);

    SC_METHOD(thread_ap_block_pp1_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp1_stage0_flag00011001);

    SC_METHOD(thread_ap_block_pp1_stage0_flag00011011);

    SC_METHOD(thread_ap_block_pp1_stage1_flag00011001);

    SC_METHOD(thread_ap_block_pp1_stage1_flag00011011);

    SC_METHOD(thread_ap_block_pp1_stage2_flag00000000);

    SC_METHOD(thread_ap_block_pp1_stage2_flag00011001);

    SC_METHOD(thread_ap_block_pp1_stage2_flag00011011);

    SC_METHOD(thread_ap_block_pp1_stage3_flag00011001);

    SC_METHOD(thread_ap_block_pp1_stage3_flag00011011);

    SC_METHOD(thread_ap_block_pp1_stage4_flag00011001);

    SC_METHOD(thread_ap_block_pp1_stage4_flag00011011);

    SC_METHOD(thread_ap_block_pp1_stage5_flag00011001);

    SC_METHOD(thread_ap_block_pp1_stage5_flag00011011);

    SC_METHOD(thread_ap_block_pp1_stage6_flag00000000);

    SC_METHOD(thread_ap_block_pp1_stage6_flag00011001);

    SC_METHOD(thread_ap_block_pp1_stage6_flag00011011);

    SC_METHOD(thread_ap_block_state10_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state12_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state13_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state14_pp0_stage3_iter1);

    SC_METHOD(thread_ap_block_state15_pp0_stage4_iter1);

    SC_METHOD(thread_ap_block_state16_pp0_stage5_iter1);

    SC_METHOD(thread_ap_block_state21_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state22_pp1_stage1_iter0);

    SC_METHOD(thread_ap_block_state23_pp1_stage2_iter0);

    SC_METHOD(thread_ap_block_state24_pp1_stage3_iter0);

    SC_METHOD(thread_ap_block_state25_pp1_stage4_iter0);

    SC_METHOD(thread_ap_block_state26_pp1_stage5_iter0);

    SC_METHOD(thread_ap_block_state27_pp1_stage6_iter0);

    SC_METHOD(thread_ap_block_state28_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state29_pp1_stage1_iter1);

    SC_METHOD(thread_ap_block_state30_pp1_stage2_iter1);

    SC_METHOD(thread_ap_block_state31_pp1_stage3_iter1);

    SC_METHOD(thread_ap_block_state32_pp1_stage4_iter1);

    SC_METHOD(thread_ap_block_state33_pp1_stage5_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage5_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state4);
    sensitive << ( exitcond2_fu_321_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state21);
    sensitive << ( exitcond_fu_450_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( exitcond1_fu_407_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( exitcond1_fu_407_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_exitcond1_fu_407_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( o_1_reg_233 );

    SC_METHOD(thread_exitcond2_fu_321_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( i_phi_fu_216_p4 );

    SC_METHOD(thread_exitcond3_fu_305_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( o_reg_188 );

    SC_METHOD(thread_exitcond_fu_450_p2);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_flag00011001 );
    sensitive << ( i_1_phi_fu_249_p4 );

    SC_METHOD(thread_grp_fu_267_p0);
    sensitive << ( sum1_reg_223 );
    sensitive << ( sum3_reg_256 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp1_stage6 );
    sensitive << ( ap_block_pp0_stage6_flag00000000 );
    sensitive << ( ap_block_pp1_stage6_flag00000000 );

    SC_METHOD(thread_grp_fu_273_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( inputToHiddenWeights_2_reg_534 );
    sensitive << ( hiddenToOutputWeight_2_reg_606 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_flag00000000 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2_flag00000000 );

    SC_METHOD(thread_grp_fu_273_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( inputData_load_reg_539 );
    sensitive << ( hiddenOut_load_reg_611 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_flag00000000 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2_flag00000000 );

    SC_METHOD(thread_hiddenOut_address0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tmp_reg_505 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_block_pp1_stage0_flag00000000 );
    sensitive << ( tmp_4_cast_fu_476_p1 );

    SC_METHOD(thread_hiddenOut_ce0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_flag00011001 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_hiddenOut_d0);
    sensitive << ( sum1_reg_223 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_15_fu_393_p2 );

    SC_METHOD(thread_hiddenOut_we0);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_hiddenToOutputWeight_address0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_flag00000000 );
    sensitive << ( tmp_18_cast_fu_441_p1 );
    sensitive << ( tmp_20_cast_fu_465_p1 );

    SC_METHOD(thread_hiddenToOutputWeight_ce0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_flag00011001 );

    SC_METHOD(thread_i_1_phi_fu_249_p4);
    sensitive << ( i_1_reg_245 );
    sensitive << ( exitcond_reg_587 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( i_3_reg_601 );
    sensitive << ( ap_block_pp1_stage0_flag00000000 );

    SC_METHOD(thread_i_2_fu_353_p2);
    sensitive << ( i_phi_fu_216_p4 );

    SC_METHOD(thread_i_3_fu_481_p2);
    sensitive << ( i_1_phi_fu_249_p4 );

    SC_METHOD(thread_i_phi_fu_216_p4);
    sensitive << ( i_reg_212 );
    sensitive << ( exitcond2_reg_515 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_2_reg_529 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_inputData_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( sum2_cast_fu_348_p1 );

    SC_METHOD(thread_inputData_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_inputToHiddenWeights_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( phi_mul_cast_fu_294_p1 );
    sensitive << ( tmp_19_cast_fu_337_p1 );

    SC_METHOD(thread_inputToHiddenWeights_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );

    SC_METHOD(thread_next_mul_fu_299_p2);
    sensitive << ( phi_mul_reg_200 );

    SC_METHOD(thread_notlhs_fu_377_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_2_fu_363_p4 );

    SC_METHOD(thread_notrhs_fu_383_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_12_fu_373_p1 );

    SC_METHOD(thread_o_2_fu_311_p2);
    sensitive << ( o_reg_188 );

    SC_METHOD(thread_o_3_fu_413_p2);
    sensitive << ( o_1_reg_233 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( tmp_1_reg_577 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_p_shl_cast_fu_431_p1);
    sensitive << ( tmp_s_fu_423_p3 );

    SC_METHOD(thread_phi_mul_cast_fu_294_p1);
    sensitive << ( phi_mul_reg_200 );

    SC_METHOD(thread_sum1_to_int_fu_359_p1);
    sensitive << ( sum1_reg_223 );

    SC_METHOD(thread_sum2_cast_fu_348_p1);
    sensitive << ( sum2_fu_342_p2 );

    SC_METHOD(thread_sum2_fu_342_p2);
    sensitive << ( i_phi_fu_216_p4 );

    SC_METHOD(thread_tmp_12_fu_373_p1);
    sensitive << ( sum1_to_int_fu_359_p1 );

    SC_METHOD(thread_tmp_13_fu_389_p2);
    sensitive << ( notlhs_reg_544 );
    sensitive << ( notrhs_reg_549 );

    SC_METHOD(thread_tmp_15_fu_393_p2);
    sensitive << ( tmp_14_reg_554 );
    sensitive << ( tmp_13_fu_389_p2 );

    SC_METHOD(thread_tmp_16_fu_331_p2);
    sensitive << ( phi_mul_reg_200 );
    sensitive << ( tmp_5_cast_fu_327_p1 );

    SC_METHOD(thread_tmp_17_fu_460_p2);
    sensitive << ( tmp_5_reg_567 );
    sensitive << ( tmp_cast_fu_456_p1 );

    SC_METHOD(thread_tmp_18_cast_fu_441_p1);
    sensitive << ( tmp_5_fu_435_p2 );

    SC_METHOD(thread_tmp_19_cast_fu_337_p1);
    sensitive << ( tmp_16_fu_331_p2 );

    SC_METHOD(thread_tmp_1_cast_fu_419_p1);
    sensitive << ( o_1_reg_233 );

    SC_METHOD(thread_tmp_1_fu_446_p1);
    sensitive << ( o_1_reg_233 );

    SC_METHOD(thread_tmp_20_cast_fu_465_p1);
    sensitive << ( tmp_17_fu_460_p2 );

    SC_METHOD(thread_tmp_2_fu_363_p4);
    sensitive << ( sum1_to_int_fu_359_p1 );

    SC_METHOD(thread_tmp_4_cast_fu_476_p1);
    sensitive << ( tmp_4_fu_470_p2 );

    SC_METHOD(thread_tmp_4_fu_470_p2);
    sensitive << ( i_1_phi_fu_249_p4 );

    SC_METHOD(thread_tmp_5_cast_fu_327_p1);
    sensitive << ( i_phi_fu_216_p4 );

    SC_METHOD(thread_tmp_5_fu_435_p2);
    sensitive << ( tmp_1_cast_fu_419_p1 );
    sensitive << ( p_shl_cast_fu_431_p1 );

    SC_METHOD(thread_tmp_cast_fu_456_p1);
    sensitive << ( i_1_phi_fu_249_p4 );

    SC_METHOD(thread_tmp_fu_317_p1);
    sensitive << ( o_reg_188 );

    SC_METHOD(thread_tmp_s_fu_423_p3);
    sensitive << ( o_1_reg_233 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage5 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_305_p2 );
    sensitive << ( exitcond2_fu_321_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( exitcond1_fu_407_p2 );
    sensitive << ( exitcond_fu_450_p2 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_block_pp0_stage6_flag00011011 );
    sensitive << ( ap_block_pp0_stage5_flag00011011 );
    sensitive << ( ap_block_pp1_stage0_flag00011011 );
    sensitive << ( ap_block_pp1_stage6_flag00011011 );
    sensitive << ( ap_block_pp1_stage5_flag00011011 );
    sensitive << ( ap_block_pp0_stage1_flag00011011 );
    sensitive << ( ap_block_pp0_stage2_flag00011011 );
    sensitive << ( ap_block_pp0_stage3_flag00011011 );
    sensitive << ( ap_block_pp0_stage4_flag00011011 );
    sensitive << ( ap_block_pp1_stage1_flag00011011 );
    sensitive << ( ap_block_pp1_stage2_flag00011011 );
    sensitive << ( ap_block_pp1_stage3_flag00011011 );
    sensitive << ( ap_block_pp1_stage4_flag00011011 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "0000000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "digitRecognizer_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_digrec_io_AWVALID, "(port)s_axi_digrec_io_AWVALID");
    sc_trace(mVcdFile, s_axi_digrec_io_AWREADY, "(port)s_axi_digrec_io_AWREADY");
    sc_trace(mVcdFile, s_axi_digrec_io_AWADDR, "(port)s_axi_digrec_io_AWADDR");
    sc_trace(mVcdFile, s_axi_digrec_io_WVALID, "(port)s_axi_digrec_io_WVALID");
    sc_trace(mVcdFile, s_axi_digrec_io_WREADY, "(port)s_axi_digrec_io_WREADY");
    sc_trace(mVcdFile, s_axi_digrec_io_WDATA, "(port)s_axi_digrec_io_WDATA");
    sc_trace(mVcdFile, s_axi_digrec_io_WSTRB, "(port)s_axi_digrec_io_WSTRB");
    sc_trace(mVcdFile, s_axi_digrec_io_ARVALID, "(port)s_axi_digrec_io_ARVALID");
    sc_trace(mVcdFile, s_axi_digrec_io_ARREADY, "(port)s_axi_digrec_io_ARREADY");
    sc_trace(mVcdFile, s_axi_digrec_io_ARADDR, "(port)s_axi_digrec_io_ARADDR");
    sc_trace(mVcdFile, s_axi_digrec_io_RVALID, "(port)s_axi_digrec_io_RVALID");
    sc_trace(mVcdFile, s_axi_digrec_io_RREADY, "(port)s_axi_digrec_io_RREADY");
    sc_trace(mVcdFile, s_axi_digrec_io_RDATA, "(port)s_axi_digrec_io_RDATA");
    sc_trace(mVcdFile, s_axi_digrec_io_RRESP, "(port)s_axi_digrec_io_RRESP");
    sc_trace(mVcdFile, s_axi_digrec_io_BVALID, "(port)s_axi_digrec_io_BVALID");
    sc_trace(mVcdFile, s_axi_digrec_io_BREADY, "(port)s_axi_digrec_io_BREADY");
    sc_trace(mVcdFile, s_axi_digrec_io_BRESP, "(port)s_axi_digrec_io_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, inputData_address0, "inputData_address0");
    sc_trace(mVcdFile, inputData_ce0, "inputData_ce0");
    sc_trace(mVcdFile, inputData_q0, "inputData_q0");
    sc_trace(mVcdFile, output_r_address0, "output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "output_r_we0");
    sc_trace(mVcdFile, inputToHiddenWeights_address0, "inputToHiddenWeights_address0");
    sc_trace(mVcdFile, inputToHiddenWeights_ce0, "inputToHiddenWeights_ce0");
    sc_trace(mVcdFile, inputToHiddenWeights_q0, "inputToHiddenWeights_q0");
    sc_trace(mVcdFile, hiddenToOutputWeight_address0, "hiddenToOutputWeight_address0");
    sc_trace(mVcdFile, hiddenToOutputWeight_ce0, "hiddenToOutputWeight_ce0");
    sc_trace(mVcdFile, hiddenToOutputWeight_q0, "hiddenToOutputWeight_q0");
    sc_trace(mVcdFile, i_reg_212, "i_reg_212");
    sc_trace(mVcdFile, sum1_reg_223, "sum1_reg_223");
    sc_trace(mVcdFile, i_1_reg_245, "i_1_reg_245");
    sc_trace(mVcdFile, sum3_reg_256, "sum3_reg_256");
    sc_trace(mVcdFile, grp_fu_273_p2, "grp_fu_273_p2");
    sc_trace(mVcdFile, reg_283, "reg_283");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage5_iter0, "ap_block_state9_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage5_iter1, "ap_block_state16_pp0_stage5_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage5_flag00011001, "ap_block_pp0_stage5_flag00011001");
    sc_trace(mVcdFile, exitcond2_reg_515, "exitcond2_reg_515");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage5, "ap_CS_fsm_pp1_stage5");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_state26_pp1_stage5_iter0, "ap_block_state26_pp1_stage5_iter0");
    sc_trace(mVcdFile, ap_block_state33_pp1_stage5_iter1, "ap_block_state33_pp1_stage5_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage5_flag00011001, "ap_block_pp1_stage5_flag00011001");
    sc_trace(mVcdFile, exitcond_reg_587, "exitcond_reg_587");
    sc_trace(mVcdFile, grp_fu_267_p2, "grp_fu_267_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond2_reg_515, "ap_reg_pp0_iter1_exitcond2_reg_515");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_reg_pp1_iter1_exitcond_reg_587, "ap_reg_pp1_iter1_exitcond_reg_587");
    sc_trace(mVcdFile, next_mul_fu_299_p2, "next_mul_fu_299_p2");
    sc_trace(mVcdFile, next_mul_reg_487, "next_mul_reg_487");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, o_2_fu_311_p2, "o_2_fu_311_p2");
    sc_trace(mVcdFile, o_2_reg_495, "o_2_reg_495");
    sc_trace(mVcdFile, exitcond3_fu_305_p2, "exitcond3_fu_305_p2");
    sc_trace(mVcdFile, tmp_fu_317_p1, "tmp_fu_317_p1");
    sc_trace(mVcdFile, tmp_reg_505, "tmp_reg_505");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond2_fu_321_p2, "exitcond2_fu_321_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter0, "ap_block_state4_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter1, "ap_block_state11_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, i_2_fu_353_p2, "i_2_fu_353_p2");
    sc_trace(mVcdFile, i_2_reg_529, "i_2_reg_529");
    sc_trace(mVcdFile, inputToHiddenWeights_2_reg_534, "inputToHiddenWeights_2_reg_534");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter0, "ap_block_state5_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage1_iter1, "ap_block_state12_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011001, "ap_block_pp0_stage1_flag00011001");
    sc_trace(mVcdFile, inputData_load_reg_539, "inputData_load_reg_539");
    sc_trace(mVcdFile, notlhs_fu_377_p2, "notlhs_fu_377_p2");
    sc_trace(mVcdFile, notlhs_reg_544, "notlhs_reg_544");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, notrhs_fu_383_p2, "notrhs_fu_383_p2");
    sc_trace(mVcdFile, notrhs_reg_549, "notrhs_reg_549");
    sc_trace(mVcdFile, tmp_14_fu_277_p2, "tmp_14_fu_277_p2");
    sc_trace(mVcdFile, tmp_14_reg_554, "tmp_14_reg_554");
    sc_trace(mVcdFile, o_3_fu_413_p2, "o_3_fu_413_p2");
    sc_trace(mVcdFile, o_3_reg_562, "o_3_reg_562");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, tmp_5_fu_435_p2, "tmp_5_fu_435_p2");
    sc_trace(mVcdFile, tmp_5_reg_567, "tmp_5_reg_567");
    sc_trace(mVcdFile, exitcond1_fu_407_p2, "exitcond1_fu_407_p2");
    sc_trace(mVcdFile, tmp_1_fu_446_p1, "tmp_1_fu_446_p1");
    sc_trace(mVcdFile, tmp_1_reg_577, "tmp_1_reg_577");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, exitcond_fu_450_p2, "exitcond_fu_450_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state21_pp1_stage0_iter0, "ap_block_state21_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state28_pp1_stage0_iter1, "ap_block_state28_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_flag00011001, "ap_block_pp1_stage0_flag00011001");
    sc_trace(mVcdFile, i_3_fu_481_p2, "i_3_fu_481_p2");
    sc_trace(mVcdFile, i_3_reg_601, "i_3_reg_601");
    sc_trace(mVcdFile, hiddenToOutputWeight_2_reg_606, "hiddenToOutputWeight_2_reg_606");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage1, "ap_CS_fsm_pp1_stage1");
    sc_trace(mVcdFile, ap_block_state22_pp1_stage1_iter0, "ap_block_state22_pp1_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state29_pp1_stage1_iter1, "ap_block_state29_pp1_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage1_flag00011001, "ap_block_pp1_stage1_flag00011001");
    sc_trace(mVcdFile, hiddenOut_q0, "hiddenOut_q0");
    sc_trace(mVcdFile, hiddenOut_load_reg_611, "hiddenOut_load_reg_611");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state4, "ap_condition_pp0_exit_iter0_state4");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage6_iter0, "ap_block_state10_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage6_flag00011011, "ap_block_pp0_stage6_flag00011011");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_block_pp0_stage5_flag00011011, "ap_block_pp0_stage5_flag00011011");
    sc_trace(mVcdFile, ap_block_pp1_stage0_flag00011011, "ap_block_pp1_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state21, "ap_condition_pp1_exit_iter0_state21");
    sc_trace(mVcdFile, ap_block_state27_pp1_stage6_iter0, "ap_block_state27_pp1_stage6_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage6_flag00011011, "ap_block_pp1_stage6_flag00011011");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage6, "ap_CS_fsm_pp1_stage6");
    sc_trace(mVcdFile, ap_block_pp1_stage5_flag00011011, "ap_block_pp1_stage5_flag00011011");
    sc_trace(mVcdFile, hiddenOut_address0, "hiddenOut_address0");
    sc_trace(mVcdFile, hiddenOut_ce0, "hiddenOut_ce0");
    sc_trace(mVcdFile, hiddenOut_we0, "hiddenOut_we0");
    sc_trace(mVcdFile, hiddenOut_d0, "hiddenOut_d0");
    sc_trace(mVcdFile, o_reg_188, "o_reg_188");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, phi_mul_reg_200, "phi_mul_reg_200");
    sc_trace(mVcdFile, i_phi_fu_216_p4, "i_phi_fu_216_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, o_1_reg_233, "o_1_reg_233");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, i_1_phi_fu_249_p4, "i_1_phi_fu_249_p4");
    sc_trace(mVcdFile, ap_block_pp1_stage0_flag00000000, "ap_block_pp1_stage0_flag00000000");
    sc_trace(mVcdFile, phi_mul_cast_fu_294_p1, "phi_mul_cast_fu_294_p1");
    sc_trace(mVcdFile, tmp_19_cast_fu_337_p1, "tmp_19_cast_fu_337_p1");
    sc_trace(mVcdFile, sum2_cast_fu_348_p1, "sum2_cast_fu_348_p1");
    sc_trace(mVcdFile, tmp_18_cast_fu_441_p1, "tmp_18_cast_fu_441_p1");
    sc_trace(mVcdFile, tmp_20_cast_fu_465_p1, "tmp_20_cast_fu_465_p1");
    sc_trace(mVcdFile, tmp_4_cast_fu_476_p1, "tmp_4_cast_fu_476_p1");
    sc_trace(mVcdFile, grp_fu_267_p0, "grp_fu_267_p0");
    sc_trace(mVcdFile, ap_block_pp0_stage6_flag00000000, "ap_block_pp0_stage6_flag00000000");
    sc_trace(mVcdFile, ap_block_pp1_stage6_flag00000000, "ap_block_pp1_stage6_flag00000000");
    sc_trace(mVcdFile, grp_fu_273_p0, "grp_fu_273_p0");
    sc_trace(mVcdFile, grp_fu_273_p1, "grp_fu_273_p1");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00000000, "ap_block_pp0_stage2_flag00000000");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage2, "ap_CS_fsm_pp1_stage2");
    sc_trace(mVcdFile, ap_block_pp1_stage2_flag00000000, "ap_block_pp1_stage2_flag00000000");
    sc_trace(mVcdFile, tmp_5_cast_fu_327_p1, "tmp_5_cast_fu_327_p1");
    sc_trace(mVcdFile, tmp_16_fu_331_p2, "tmp_16_fu_331_p2");
    sc_trace(mVcdFile, sum2_fu_342_p2, "sum2_fu_342_p2");
    sc_trace(mVcdFile, sum1_to_int_fu_359_p1, "sum1_to_int_fu_359_p1");
    sc_trace(mVcdFile, tmp_2_fu_363_p4, "tmp_2_fu_363_p4");
    sc_trace(mVcdFile, tmp_12_fu_373_p1, "tmp_12_fu_373_p1");
    sc_trace(mVcdFile, tmp_13_fu_389_p2, "tmp_13_fu_389_p2");
    sc_trace(mVcdFile, tmp_15_fu_393_p2, "tmp_15_fu_393_p2");
    sc_trace(mVcdFile, tmp_s_fu_423_p3, "tmp_s_fu_423_p3");
    sc_trace(mVcdFile, tmp_1_cast_fu_419_p1, "tmp_1_cast_fu_419_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_431_p1, "p_shl_cast_fu_431_p1");
    sc_trace(mVcdFile, tmp_cast_fu_456_p1, "tmp_cast_fu_456_p1");
    sc_trace(mVcdFile, tmp_17_fu_460_p2, "tmp_17_fu_460_p2");
    sc_trace(mVcdFile, tmp_4_fu_470_p2, "tmp_4_fu_470_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011011, "ap_block_pp0_stage1_flag00011011");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage2_iter0, "ap_block_state6_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage2_iter1, "ap_block_state13_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00011011, "ap_block_pp0_stage2_flag00011011");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00011001, "ap_block_pp0_stage2_flag00011001");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage3_iter0, "ap_block_state7_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage3_iter1, "ap_block_state14_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3_flag00011011, "ap_block_pp0_stage3_flag00011011");
    sc_trace(mVcdFile, ap_block_pp0_stage3_flag00011001, "ap_block_pp0_stage3_flag00011001");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage4_iter0, "ap_block_state8_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage4_iter1, "ap_block_state15_pp0_stage4_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage4_flag00011011, "ap_block_pp0_stage4_flag00011011");
    sc_trace(mVcdFile, ap_block_pp0_stage4_flag00011001, "ap_block_pp0_stage4_flag00011001");
    sc_trace(mVcdFile, ap_block_pp0_stage6_flag00011001, "ap_block_pp0_stage6_flag00011001");
    sc_trace(mVcdFile, ap_block_pp1_stage1_flag00011011, "ap_block_pp1_stage1_flag00011011");
    sc_trace(mVcdFile, ap_block_state23_pp1_stage2_iter0, "ap_block_state23_pp1_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state30_pp1_stage2_iter1, "ap_block_state30_pp1_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage2_flag00011011, "ap_block_pp1_stage2_flag00011011");
    sc_trace(mVcdFile, ap_block_pp1_stage2_flag00011001, "ap_block_pp1_stage2_flag00011001");
    sc_trace(mVcdFile, ap_block_state24_pp1_stage3_iter0, "ap_block_state24_pp1_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state31_pp1_stage3_iter1, "ap_block_state31_pp1_stage3_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage3_flag00011011, "ap_block_pp1_stage3_flag00011011");
    sc_trace(mVcdFile, ap_block_pp1_stage3_flag00011001, "ap_block_pp1_stage3_flag00011001");
    sc_trace(mVcdFile, ap_block_state25_pp1_stage4_iter0, "ap_block_state25_pp1_stage4_iter0");
    sc_trace(mVcdFile, ap_block_state32_pp1_stage4_iter1, "ap_block_state32_pp1_stage4_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage4_flag00011011, "ap_block_pp1_stage4_flag00011011");
    sc_trace(mVcdFile, ap_block_pp1_stage4_flag00011001, "ap_block_pp1_stage4_flag00011001");
    sc_trace(mVcdFile, ap_block_pp1_stage6_flag00011001, "ap_block_pp1_stage6_flag00011001");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
    mHdltvinHandle.open("digitRecognizer.hdltvin.dat");
    mHdltvoutHandle.open("digitRecognizer.hdltvout.dat");
}

digitRecognizer::~digitRecognizer() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete inputToHiddenWeights_U;
    delete hiddenToOutputWeight_U;
    delete digitRecognizer_digrec_io_s_axi_U;
    delete hiddenOut_U;
    delete digitRecognizer_feOg_U0;
    delete digitRecognizer_ffYi_U1;
    delete digitRecognizer_fg8j_U2;
}

void digitRecognizer::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void digitRecognizer::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void digitRecognizer::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_4;
}

void digitRecognizer::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()) && 
             ((esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011011.read(), ap_const_boolean_0) && 
               esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read())) || 
              (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
               esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011011.read(), ap_const_boolean_0))))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state4.read() ^ ap_const_logic_1);
        } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011011.read(), ap_const_boolean_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011011.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state21.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state21.read()) && 
             ((esl_seteq<1,1,1>(ap_block_pp1_stage6_flag00011011.read(), ap_const_boolean_0) && 
               esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage6.read())) || 
              (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage5.read()) && 
               esl_seteq<1,1,1>(ap_block_pp1_stage5_flag00011011.read(), ap_const_boolean_0))))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state21.read() ^ ap_const_logic_1);
        } else if (((esl_seteq<1,1,1>(ap_block_pp1_stage6_flag00011011.read(), ap_const_boolean_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage6.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage5.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp1_stage5_flag00011011.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_587.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0))) {
        i_1_reg_245 = i_3_reg_601.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        i_1_reg_245 = ap_const_lv6_1;
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_515.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        i_reg_212 = i_2_reg_529.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_212 = ap_const_lv10_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_305_p2.read(), ap_const_lv1_1))) {
        o_1_reg_233 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        o_1_reg_233 = o_3_reg_562.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        o_reg_188 = o_2_reg_495.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        o_reg_188 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        phi_mul_reg_200 = next_mul_reg_487.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_200 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond2_reg_515.read()))) {
        sum1_reg_223 = grp_fu_267_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sum1_reg_223 = inputToHiddenWeights_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage5_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter1_exitcond_reg_587.read()))) {
        sum3_reg_256 = grp_fu_267_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        sum3_reg_256 = hiddenToOutputWeight_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond2_reg_515 = exitcond2_reg_515.read();
        exitcond2_reg_515 = exitcond2_fu_321_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp1_iter1_exitcond_reg_587 = exitcond_reg_587.read();
        exitcond_reg_587 = exitcond_fu_450_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_587.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_flag00011001.read(), ap_const_boolean_0))) {
        hiddenOut_load_reg_611 = hiddenOut_q0.read();
        hiddenToOutputWeight_2_reg_606 = hiddenToOutputWeight_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_321_p2.read()))) {
        i_2_reg_529 = i_2_fu_353_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_450_p2.read()))) {
        i_3_reg_601 = i_3_fu_481_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond2_reg_515.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0))) {
        inputData_load_reg_539 = inputData_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond2_reg_515.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0))) {
        inputToHiddenWeights_2_reg_534 = inputToHiddenWeights_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        next_mul_reg_487 = next_mul_fu_299_p2.read();
        o_2_reg_495 = o_2_fu_311_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        notlhs_reg_544 = notlhs_fu_377_p2.read();
        notrhs_reg_549 = notrhs_fu_383_p2.read();
        tmp_14_reg_554 = tmp_14_fu_277_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        o_3_reg_562 = o_3_fu_413_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond2_reg_515.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage5.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage5_flag00011001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_587.read())))) {
        reg_283 = grp_fu_273_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        tmp_1_reg_577 = tmp_1_fu_446_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_407_p2.read()))) {
        tmp_5_reg_567 = tmp_5_fu_435_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_reg_505 = tmp_fu_317_p1.read();
    }
}

void digitRecognizer::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[3];
}

void digitRecognizer::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[4];
}

void digitRecognizer::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[5];
}

void digitRecognizer::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[8];
}

void digitRecognizer::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[9];
}

void digitRecognizer::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[14];
}

void digitRecognizer::thread_ap_CS_fsm_pp1_stage1() {
    ap_CS_fsm_pp1_stage1 = ap_CS_fsm.read()[15];
}

void digitRecognizer::thread_ap_CS_fsm_pp1_stage2() {
    ap_CS_fsm_pp1_stage2 = ap_CS_fsm.read()[16];
}

void digitRecognizer::thread_ap_CS_fsm_pp1_stage5() {
    ap_CS_fsm_pp1_stage5 = ap_CS_fsm.read()[19];
}

void digitRecognizer::thread_ap_CS_fsm_pp1_stage6() {
    ap_CS_fsm_pp1_stage6 = ap_CS_fsm.read()[20];
}

void digitRecognizer::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void digitRecognizer::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[10];
}

void digitRecognizer::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[11];
}

void digitRecognizer::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[12];
}

void digitRecognizer::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void digitRecognizer::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[13];
}

void digitRecognizer::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void digitRecognizer::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[21];
}

void digitRecognizer::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage1_flag00011001() {
    ap_block_pp0_stage1_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage1_flag00011011() {
    ap_block_pp0_stage1_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage2_flag00000000() {
    ap_block_pp0_stage2_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage2_flag00011001() {
    ap_block_pp0_stage2_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage2_flag00011011() {
    ap_block_pp0_stage2_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage3_flag00011001() {
    ap_block_pp0_stage3_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage3_flag00011011() {
    ap_block_pp0_stage3_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage4_flag00011001() {
    ap_block_pp0_stage4_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage4_flag00011011() {
    ap_block_pp0_stage4_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage5_flag00011001() {
    ap_block_pp0_stage5_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage5_flag00011011() {
    ap_block_pp0_stage5_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage6_flag00000000() {
    ap_block_pp0_stage6_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage6_flag00011001() {
    ap_block_pp0_stage6_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp0_stage6_flag00011011() {
    ap_block_pp0_stage6_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage0_flag00000000() {
    ap_block_pp1_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage0_flag00011001() {
    ap_block_pp1_stage0_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage0_flag00011011() {
    ap_block_pp1_stage0_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage1_flag00011001() {
    ap_block_pp1_stage1_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage1_flag00011011() {
    ap_block_pp1_stage1_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage2_flag00000000() {
    ap_block_pp1_stage2_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage2_flag00011001() {
    ap_block_pp1_stage2_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage2_flag00011011() {
    ap_block_pp1_stage2_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage3_flag00011001() {
    ap_block_pp1_stage3_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage3_flag00011011() {
    ap_block_pp1_stage3_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage4_flag00011001() {
    ap_block_pp1_stage4_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage4_flag00011011() {
    ap_block_pp1_stage4_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage5_flag00011001() {
    ap_block_pp1_stage5_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage5_flag00011011() {
    ap_block_pp1_stage5_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage6_flag00000000() {
    ap_block_pp1_stage6_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage6_flag00011001() {
    ap_block_pp1_stage6_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_pp1_stage6_flag00011011() {
    ap_block_pp1_stage6_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state10_pp0_stage6_iter0() {
    ap_block_state10_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state11_pp0_stage0_iter1() {
    ap_block_state11_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state12_pp0_stage1_iter1() {
    ap_block_state12_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state13_pp0_stage2_iter1() {
    ap_block_state13_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state14_pp0_stage3_iter1() {
    ap_block_state14_pp0_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state15_pp0_stage4_iter1() {
    ap_block_state15_pp0_stage4_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state16_pp0_stage5_iter1() {
    ap_block_state16_pp0_stage5_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state21_pp1_stage0_iter0() {
    ap_block_state21_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state22_pp1_stage1_iter0() {
    ap_block_state22_pp1_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state23_pp1_stage2_iter0() {
    ap_block_state23_pp1_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state24_pp1_stage3_iter0() {
    ap_block_state24_pp1_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state25_pp1_stage4_iter0() {
    ap_block_state25_pp1_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state26_pp1_stage5_iter0() {
    ap_block_state26_pp1_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state27_pp1_stage6_iter0() {
    ap_block_state27_pp1_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state28_pp1_stage0_iter1() {
    ap_block_state28_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state29_pp1_stage1_iter1() {
    ap_block_state29_pp1_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state30_pp1_stage2_iter1() {
    ap_block_state30_pp1_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state31_pp1_stage3_iter1() {
    ap_block_state31_pp1_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state32_pp1_stage4_iter1() {
    ap_block_state32_pp1_stage4_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state33_pp1_stage5_iter1() {
    ap_block_state33_pp1_stage5_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state4_pp0_stage0_iter0() {
    ap_block_state4_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state5_pp0_stage1_iter0() {
    ap_block_state5_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state6_pp0_stage2_iter0() {
    ap_block_state6_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state7_pp0_stage3_iter0() {
    ap_block_state7_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state8_pp0_stage4_iter0() {
    ap_block_state8_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_block_state9_pp0_stage5_iter0() {
    ap_block_state9_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void digitRecognizer::thread_ap_condition_pp0_exit_iter0_state4() {
    if (esl_seteq<1,1,1>(exitcond2_fu_321_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_0;
    }
}

void digitRecognizer::thread_ap_condition_pp1_exit_iter0_state21() {
    if (esl_seteq<1,1,1>(exitcond_fu_450_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state21 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state21 = ap_const_logic_0;
    }
}

void digitRecognizer::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_407_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void digitRecognizer::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void digitRecognizer::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void digitRecognizer::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void digitRecognizer::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void digitRecognizer::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void digitRecognizer::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_407_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void digitRecognizer::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void digitRecognizer::thread_exitcond1_fu_407_p2() {
    exitcond1_fu_407_p2 = (!o_1_reg_233.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(o_1_reg_233.read() == ap_const_lv4_A);
}

void digitRecognizer::thread_exitcond2_fu_321_p2() {
    exitcond2_fu_321_p2 = (!i_phi_fu_216_p4.read().is_01() || !ap_const_lv10_311.is_01())? sc_lv<1>(): sc_lv<1>(i_phi_fu_216_p4.read() == ap_const_lv10_311);
}

void digitRecognizer::thread_exitcond3_fu_305_p2() {
    exitcond3_fu_305_p2 = (!o_reg_188.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(o_reg_188.read() == ap_const_lv6_20);
}

void digitRecognizer::thread_exitcond_fu_450_p2() {
    exitcond_fu_450_p2 = (!i_1_phi_fu_249_p4.read().is_01() || !ap_const_lv6_21.is_01())? sc_lv<1>(): sc_lv<1>(i_1_phi_fu_249_p4.read() == ap_const_lv6_21);
}

void digitRecognizer::thread_grp_fu_267_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage6.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage6_flag00000000.read(), ap_const_boolean_0))) {
        grp_fu_267_p0 = sum3_reg_256.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00000000.read(), ap_const_boolean_0))) {
        grp_fu_267_p0 = sum1_reg_223.read();
    } else {
        grp_fu_267_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void digitRecognizer::thread_grp_fu_273_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage2_flag00000000.read(), ap_const_boolean_0))) {
        grp_fu_273_p0 = hiddenToOutputWeight_2_reg_606.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00000000.read(), ap_const_boolean_0))) {
        grp_fu_273_p0 = inputToHiddenWeights_2_reg_534.read();
    } else {
        grp_fu_273_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void digitRecognizer::thread_grp_fu_273_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage2_flag00000000.read(), ap_const_boolean_0))) {
        grp_fu_273_p1 = hiddenOut_load_reg_611.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00000000.read(), ap_const_boolean_0))) {
        grp_fu_273_p1 = inputData_load_reg_539.read();
    } else {
        grp_fu_273_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void digitRecognizer::thread_hiddenOut_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00000000.read(), ap_const_boolean_0))) {
        hiddenOut_address0 =  (sc_lv<5>) (tmp_4_cast_fu_476_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        hiddenOut_address0 =  (sc_lv<5>) (tmp_reg_505.read());
    } else {
        hiddenOut_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void digitRecognizer::thread_hiddenOut_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        hiddenOut_ce0 = ap_const_logic_1;
    } else {
        hiddenOut_ce0 = ap_const_logic_0;
    }
}

void digitRecognizer::thread_hiddenOut_d0() {
    hiddenOut_d0 = (!tmp_15_fu_393_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_15_fu_393_p2.read()[0].to_bool())? ap_const_lv32_0: sum1_reg_223.read());
}

void digitRecognizer::thread_hiddenOut_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        hiddenOut_we0 = ap_const_logic_1;
    } else {
        hiddenOut_we0 = ap_const_logic_0;
    }
}

void digitRecognizer::thread_hiddenToOutputWeight_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00000000.read(), ap_const_boolean_0))) {
        hiddenToOutputWeight_address0 =  (sc_lv<9>) (tmp_20_cast_fu_465_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        hiddenToOutputWeight_address0 =  (sc_lv<9>) (tmp_18_cast_fu_441_p1.read());
    } else {
        hiddenToOutputWeight_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void digitRecognizer::thread_hiddenToOutputWeight_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011001.read(), ap_const_boolean_0)))) {
        hiddenToOutputWeight_ce0 = ap_const_logic_1;
    } else {
        hiddenToOutputWeight_ce0 = ap_const_logic_0;
    }
}

void digitRecognizer::thread_i_1_phi_fu_249_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_587.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00000000.read(), ap_const_boolean_0))) {
        i_1_phi_fu_249_p4 = i_3_reg_601.read();
    } else {
        i_1_phi_fu_249_p4 = i_1_reg_245.read();
    }
}

void digitRecognizer::thread_i_2_fu_353_p2() {
    i_2_fu_353_p2 = (!i_phi_fu_216_p4.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_phi_fu_216_p4.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void digitRecognizer::thread_i_3_fu_481_p2() {
    i_3_fu_481_p2 = (!i_1_phi_fu_249_p4.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_1_phi_fu_249_p4.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void digitRecognizer::thread_i_phi_fu_216_p4() {
    if ((esl_seteq<1,1,1>(exitcond2_reg_515.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        i_phi_fu_216_p4 = i_2_reg_529.read();
    } else {
        i_phi_fu_216_p4 = i_reg_212.read();
    }
}

void digitRecognizer::thread_inputData_address0() {
    inputData_address0 =  (sc_lv<10>) (sum2_cast_fu_348_p1.read());
}

void digitRecognizer::thread_inputData_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        inputData_ce0 = ap_const_logic_1;
    } else {
        inputData_ce0 = ap_const_logic_0;
    }
}

void digitRecognizer::thread_inputToHiddenWeights_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        inputToHiddenWeights_address0 =  (sc_lv<15>) (tmp_19_cast_fu_337_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        inputToHiddenWeights_address0 =  (sc_lv<15>) (phi_mul_cast_fu_294_p1.read());
    } else {
        inputToHiddenWeights_address0 =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
    }
}

void digitRecognizer::thread_inputToHiddenWeights_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0)))) {
        inputToHiddenWeights_ce0 = ap_const_logic_1;
    } else {
        inputToHiddenWeights_ce0 = ap_const_logic_0;
    }
}

void digitRecognizer::thread_next_mul_fu_299_p2() {
    next_mul_fu_299_p2 = (!phi_mul_reg_200.read().is_01() || !ap_const_lv15_311.is_01())? sc_lv<15>(): (sc_biguint<15>(phi_mul_reg_200.read()) + sc_biguint<15>(ap_const_lv15_311));
}

void digitRecognizer::thread_notlhs_fu_377_p2() {
    notlhs_fu_377_p2 = (!tmp_2_fu_363_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_363_p4.read() != ap_const_lv8_FF);
}

void digitRecognizer::thread_notrhs_fu_383_p2() {
    notrhs_fu_383_p2 = (!tmp_12_fu_373_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_12_fu_373_p1.read() == ap_const_lv23_0);
}

void digitRecognizer::thread_o_2_fu_311_p2() {
    o_2_fu_311_p2 = (!o_reg_188.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(o_reg_188.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void digitRecognizer::thread_o_3_fu_413_p2() {
    o_3_fu_413_p2 = (!o_1_reg_233.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(o_1_reg_233.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void digitRecognizer::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<4>) (tmp_1_reg_577.read());
}

void digitRecognizer::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void digitRecognizer::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void digitRecognizer::thread_p_shl_cast_fu_431_p1() {
    p_shl_cast_fu_431_p1 = esl_zext<10,9>(tmp_s_fu_423_p3.read());
}

void digitRecognizer::thread_phi_mul_cast_fu_294_p1() {
    phi_mul_cast_fu_294_p1 = esl_zext<32,15>(phi_mul_reg_200.read());
}

void digitRecognizer::thread_sum1_to_int_fu_359_p1() {
    sum1_to_int_fu_359_p1 = sum1_reg_223.read();
}

void digitRecognizer::thread_sum2_cast_fu_348_p1() {
    sum2_cast_fu_348_p1 = esl_zext<32,10>(sum2_fu_342_p2.read());
}

void digitRecognizer::thread_sum2_fu_342_p2() {
    sum2_fu_342_p2 = (!i_phi_fu_216_p4.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<10>(): (sc_biguint<10>(i_phi_fu_216_p4.read()) + sc_bigint<10>(ap_const_lv10_3FF));
}

void digitRecognizer::thread_tmp_12_fu_373_p1() {
    tmp_12_fu_373_p1 = sum1_to_int_fu_359_p1.read().range(23-1, 0);
}

void digitRecognizer::thread_tmp_13_fu_389_p2() {
    tmp_13_fu_389_p2 = (notrhs_reg_549.read() | notlhs_reg_544.read());
}

void digitRecognizer::thread_tmp_15_fu_393_p2() {
    tmp_15_fu_393_p2 = (tmp_13_fu_389_p2.read() & tmp_14_reg_554.read());
}

void digitRecognizer::thread_tmp_16_fu_331_p2() {
    tmp_16_fu_331_p2 = (!phi_mul_reg_200.read().is_01() || !tmp_5_cast_fu_327_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(phi_mul_reg_200.read()) + sc_biguint<15>(tmp_5_cast_fu_327_p1.read()));
}

void digitRecognizer::thread_tmp_17_fu_460_p2() {
    tmp_17_fu_460_p2 = (!tmp_5_reg_567.read().is_01() || !tmp_cast_fu_456_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_5_reg_567.read()) + sc_biguint<10>(tmp_cast_fu_456_p1.read()));
}

void digitRecognizer::thread_tmp_18_cast_fu_441_p1() {
    tmp_18_cast_fu_441_p1 = esl_zext<32,10>(tmp_5_fu_435_p2.read());
}

void digitRecognizer::thread_tmp_19_cast_fu_337_p1() {
    tmp_19_cast_fu_337_p1 = esl_zext<32,15>(tmp_16_fu_331_p2.read());
}

void digitRecognizer::thread_tmp_1_cast_fu_419_p1() {
    tmp_1_cast_fu_419_p1 = esl_zext<10,4>(o_1_reg_233.read());
}

void digitRecognizer::thread_tmp_1_fu_446_p1() {
    tmp_1_fu_446_p1 = esl_zext<32,4>(o_1_reg_233.read());
}

void digitRecognizer::thread_tmp_20_cast_fu_465_p1() {
    tmp_20_cast_fu_465_p1 = esl_zext<32,10>(tmp_17_fu_460_p2.read());
}

void digitRecognizer::thread_tmp_2_fu_363_p4() {
    tmp_2_fu_363_p4 = sum1_to_int_fu_359_p1.read().range(30, 23);
}

void digitRecognizer::thread_tmp_4_cast_fu_476_p1() {
    tmp_4_cast_fu_476_p1 = esl_zext<32,6>(tmp_4_fu_470_p2.read());
}

void digitRecognizer::thread_tmp_4_fu_470_p2() {
    tmp_4_fu_470_p2 = (!i_1_phi_fu_249_p4.read().is_01() || !ap_const_lv6_3F.is_01())? sc_lv<6>(): (sc_biguint<6>(i_1_phi_fu_249_p4.read()) + sc_bigint<6>(ap_const_lv6_3F));
}

void digitRecognizer::thread_tmp_5_cast_fu_327_p1() {
    tmp_5_cast_fu_327_p1 = esl_zext<15,10>(i_phi_fu_216_p4.read());
}

void digitRecognizer::thread_tmp_5_fu_435_p2() {
    tmp_5_fu_435_p2 = (!tmp_1_cast_fu_419_p1.read().is_01() || !p_shl_cast_fu_431_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_1_cast_fu_419_p1.read()) + sc_biguint<10>(p_shl_cast_fu_431_p1.read()));
}

void digitRecognizer::thread_tmp_cast_fu_456_p1() {
    tmp_cast_fu_456_p1 = esl_zext<10,6>(i_1_phi_fu_249_p4.read());
}

void digitRecognizer::thread_tmp_fu_317_p1() {
    tmp_fu_317_p1 = esl_zext<32,6>(o_reg_188.read());
}

void digitRecognizer::thread_tmp_s_fu_423_p3() {
    tmp_s_fu_423_p3 = esl_concat<4,5>(o_1_reg_233.read(), ap_const_lv5_0);
}

void digitRecognizer::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_305_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond2_fu_321_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond2_fu_321_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 512 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(exitcond1_fu_407_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_fu_450_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_fu_450_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state34;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 32768 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage1_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            }
            break;
        case 65536 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage2_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            }
            break;
        case 131072 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage3_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            }
            break;
        case 262144 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage4_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            }
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage5_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage5.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage5_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage5.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage5_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state34;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            }
            break;
        case 1048576 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage6_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            }
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<22>) ("XXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void digitRecognizer::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_digrec_io_AWVALID\" :  \"" << s_axi_digrec_io_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_digrec_io_AWREADY\" :  \"" << s_axi_digrec_io_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_digrec_io_AWADDR\" :  \"" << s_axi_digrec_io_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_digrec_io_WVALID\" :  \"" << s_axi_digrec_io_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_digrec_io_WREADY\" :  \"" << s_axi_digrec_io_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_digrec_io_WDATA\" :  \"" << s_axi_digrec_io_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_digrec_io_WSTRB\" :  \"" << s_axi_digrec_io_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_digrec_io_ARVALID\" :  \"" << s_axi_digrec_io_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_digrec_io_ARREADY\" :  \"" << s_axi_digrec_io_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_digrec_io_ARADDR\" :  \"" << s_axi_digrec_io_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_digrec_io_RVALID\" :  \"" << s_axi_digrec_io_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_digrec_io_RREADY\" :  \"" << s_axi_digrec_io_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_digrec_io_RDATA\" :  \"" << s_axi_digrec_io_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_digrec_io_RRESP\" :  \"" << s_axi_digrec_io_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_digrec_io_BVALID\" :  \"" << s_axi_digrec_io_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_digrec_io_BREADY\" :  \"" << s_axi_digrec_io_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_digrec_io_BRESP\" :  \"" << s_axi_digrec_io_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

