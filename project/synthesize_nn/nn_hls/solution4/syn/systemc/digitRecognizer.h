// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _digitRecognizer_HH_
#define _digitRecognizer_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "digitRecognizer_feOg.h"
#include "digitRecognizer_ffYi.h"
#include "digitRecognizer_fg8j.h"
#include "digitRecognizer_ibkb.h"
#include "digitRecognizer_hcud.h"
#include "digitRecognizer_hdEe.h"
#include "digitRecognizer_digrec_io_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_DIGREC_IO_ADDR_WIDTH = 14,
         unsigned int C_S_AXI_DIGREC_IO_DATA_WIDTH = 32>
struct digitRecognizer : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > s_axi_digrec_io_AWVALID;
    sc_out< sc_logic > s_axi_digrec_io_AWREADY;
    sc_in< sc_uint<C_S_AXI_DIGREC_IO_ADDR_WIDTH> > s_axi_digrec_io_AWADDR;
    sc_in< sc_logic > s_axi_digrec_io_WVALID;
    sc_out< sc_logic > s_axi_digrec_io_WREADY;
    sc_in< sc_uint<C_S_AXI_DIGREC_IO_DATA_WIDTH> > s_axi_digrec_io_WDATA;
    sc_in< sc_uint<C_S_AXI_DIGREC_IO_DATA_WIDTH/8> > s_axi_digrec_io_WSTRB;
    sc_in< sc_logic > s_axi_digrec_io_ARVALID;
    sc_out< sc_logic > s_axi_digrec_io_ARREADY;
    sc_in< sc_uint<C_S_AXI_DIGREC_IO_ADDR_WIDTH> > s_axi_digrec_io_ARADDR;
    sc_out< sc_logic > s_axi_digrec_io_RVALID;
    sc_in< sc_logic > s_axi_digrec_io_RREADY;
    sc_out< sc_uint<C_S_AXI_DIGREC_IO_DATA_WIDTH> > s_axi_digrec_io_RDATA;
    sc_out< sc_lv<2> > s_axi_digrec_io_RRESP;
    sc_out< sc_logic > s_axi_digrec_io_BVALID;
    sc_in< sc_logic > s_axi_digrec_io_BREADY;
    sc_out< sc_lv<2> > s_axi_digrec_io_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    digitRecognizer(sc_module_name name);
    SC_HAS_PROCESS(digitRecognizer);

    ~digitRecognizer();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    digitRecognizer_ibkb* inputToHiddenWeights_U;
    digitRecognizer_hcud* hiddenToOutputWeight_U;
    digitRecognizer_digrec_io_s_axi<C_S_AXI_DIGREC_IO_ADDR_WIDTH,C_S_AXI_DIGREC_IO_DATA_WIDTH>* digitRecognizer_digrec_io_s_axi_U;
    digitRecognizer_hdEe* hiddenOut_U;
    digitRecognizer_feOg<1,7,32,32,32>* digitRecognizer_feOg_U0;
    digitRecognizer_ffYi<1,4,32,32,32>* digitRecognizer_ffYi_U1;
    digitRecognizer_fg8j<1,1,32,32,1>* digitRecognizer_fg8j_U2;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<22> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<10> > inputData_address0;
    sc_signal< sc_logic > inputData_ce0;
    sc_signal< sc_lv<32> > inputData_q0;
    sc_signal< sc_lv<4> > output_r_address0;
    sc_signal< sc_logic > output_r_ce0;
    sc_signal< sc_logic > output_r_we0;
    sc_signal< sc_lv<15> > inputToHiddenWeights_address0;
    sc_signal< sc_logic > inputToHiddenWeights_ce0;
    sc_signal< sc_lv<32> > inputToHiddenWeights_q0;
    sc_signal< sc_lv<9> > hiddenToOutputWeight_address0;
    sc_signal< sc_logic > hiddenToOutputWeight_ce0;
    sc_signal< sc_lv<32> > hiddenToOutputWeight_q0;
    sc_signal< sc_lv<10> > i_reg_212;
    sc_signal< sc_lv<32> > sum1_reg_223;
    sc_signal< sc_lv<6> > i_1_reg_245;
    sc_signal< sc_lv<32> > sum3_reg_256;
    sc_signal< sc_lv<32> > grp_fu_273_p2;
    sc_signal< sc_lv<32> > reg_283;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state9_pp0_stage5_iter0;
    sc_signal< bool > ap_block_state16_pp0_stage5_iter1;
    sc_signal< bool > ap_block_pp0_stage5_flag00011001;
    sc_signal< sc_lv<1> > exitcond2_reg_515;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage5;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_state26_pp1_stage5_iter0;
    sc_signal< bool > ap_block_state33_pp1_stage5_iter1;
    sc_signal< bool > ap_block_pp1_stage5_flag00011001;
    sc_signal< sc_lv<1> > exitcond_reg_587;
    sc_signal< sc_lv<32> > grp_fu_267_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond2_reg_515;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<1> > ap_reg_pp1_iter1_exitcond_reg_587;
    sc_signal< sc_lv<15> > next_mul_fu_299_p2;
    sc_signal< sc_lv<15> > next_mul_reg_487;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > o_2_fu_311_p2;
    sc_signal< sc_lv<6> > o_2_reg_495;
    sc_signal< sc_lv<1> > exitcond3_fu_305_p2;
    sc_signal< sc_lv<32> > tmp_fu_317_p1;
    sc_signal< sc_lv<32> > tmp_reg_505;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond2_fu_321_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_flag00011001;
    sc_signal< sc_lv<10> > i_2_fu_353_p2;
    sc_signal< sc_lv<10> > i_2_reg_529;
    sc_signal< sc_lv<32> > inputToHiddenWeights_2_reg_534;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state12_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_flag00011001;
    sc_signal< sc_lv<32> > inputData_load_reg_539;
    sc_signal< sc_lv<1> > notlhs_fu_377_p2;
    sc_signal< sc_lv<1> > notlhs_reg_544;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<1> > notrhs_fu_383_p2;
    sc_signal< sc_lv<1> > notrhs_reg_549;
    sc_signal< sc_lv<1> > tmp_14_fu_277_p2;
    sc_signal< sc_lv<1> > tmp_14_reg_554;
    sc_signal< sc_lv<4> > o_3_fu_413_p2;
    sc_signal< sc_lv<4> > o_3_reg_562;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<10> > tmp_5_fu_435_p2;
    sc_signal< sc_lv<10> > tmp_5_reg_567;
    sc_signal< sc_lv<1> > exitcond1_fu_407_p2;
    sc_signal< sc_lv<32> > tmp_1_fu_446_p1;
    sc_signal< sc_lv<32> > tmp_1_reg_577;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<1> > exitcond_fu_450_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state21_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state28_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_flag00011001;
    sc_signal< sc_lv<6> > i_3_fu_481_p2;
    sc_signal< sc_lv<6> > i_3_reg_601;
    sc_signal< sc_lv<32> > hiddenToOutputWeight_2_reg_606;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage1;
    sc_signal< bool > ap_block_state22_pp1_stage1_iter0;
    sc_signal< bool > ap_block_state29_pp1_stage1_iter1;
    sc_signal< bool > ap_block_pp1_stage1_flag00011001;
    sc_signal< sc_lv<32> > hiddenOut_q0;
    sc_signal< sc_lv<32> > hiddenOut_load_reg_611;
    sc_signal< bool > ap_block_pp0_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< bool > ap_block_state10_pp0_stage6_iter0;
    sc_signal< bool > ap_block_pp0_stage6_flag00011011;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage6;
    sc_signal< bool > ap_block_pp0_stage5_flag00011011;
    sc_signal< bool > ap_block_pp1_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state21;
    sc_signal< bool > ap_block_state27_pp1_stage6_iter0;
    sc_signal< bool > ap_block_pp1_stage6_flag00011011;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage6;
    sc_signal< bool > ap_block_pp1_stage5_flag00011011;
    sc_signal< sc_lv<5> > hiddenOut_address0;
    sc_signal< sc_logic > hiddenOut_ce0;
    sc_signal< sc_logic > hiddenOut_we0;
    sc_signal< sc_lv<32> > hiddenOut_d0;
    sc_signal< sc_lv<6> > o_reg_188;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<15> > phi_mul_reg_200;
    sc_signal< sc_lv<10> > i_phi_fu_216_p4;
    sc_signal< bool > ap_block_pp0_stage0_flag00000000;
    sc_signal< sc_lv<4> > o_1_reg_233;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_lv<6> > i_1_phi_fu_249_p4;
    sc_signal< bool > ap_block_pp1_stage0_flag00000000;
    sc_signal< sc_lv<32> > phi_mul_cast_fu_294_p1;
    sc_signal< sc_lv<32> > tmp_19_cast_fu_337_p1;
    sc_signal< sc_lv<32> > sum2_cast_fu_348_p1;
    sc_signal< sc_lv<32> > tmp_18_cast_fu_441_p1;
    sc_signal< sc_lv<32> > tmp_20_cast_fu_465_p1;
    sc_signal< sc_lv<32> > tmp_4_cast_fu_476_p1;
    sc_signal< sc_lv<32> > grp_fu_267_p0;
    sc_signal< bool > ap_block_pp0_stage6_flag00000000;
    sc_signal< bool > ap_block_pp1_stage6_flag00000000;
    sc_signal< sc_lv<32> > grp_fu_273_p0;
    sc_signal< sc_lv<32> > grp_fu_273_p1;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage2_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage2;
    sc_signal< bool > ap_block_pp1_stage2_flag00000000;
    sc_signal< sc_lv<15> > tmp_5_cast_fu_327_p1;
    sc_signal< sc_lv<15> > tmp_16_fu_331_p2;
    sc_signal< sc_lv<10> > sum2_fu_342_p2;
    sc_signal< sc_lv<32> > sum1_to_int_fu_359_p1;
    sc_signal< sc_lv<8> > tmp_2_fu_363_p4;
    sc_signal< sc_lv<23> > tmp_12_fu_373_p1;
    sc_signal< sc_lv<1> > tmp_13_fu_389_p2;
    sc_signal< sc_lv<1> > tmp_15_fu_393_p2;
    sc_signal< sc_lv<9> > tmp_s_fu_423_p3;
    sc_signal< sc_lv<10> > tmp_1_cast_fu_419_p1;
    sc_signal< sc_lv<10> > p_shl_cast_fu_431_p1;
    sc_signal< sc_lv<10> > tmp_cast_fu_456_p1;
    sc_signal< sc_lv<10> > tmp_17_fu_460_p2;
    sc_signal< sc_lv<6> > tmp_4_fu_470_p2;
    sc_signal< sc_lv<22> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_flag00011011;
    sc_signal< bool > ap_block_state6_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state13_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_flag00011011;
    sc_signal< bool > ap_block_pp0_stage2_flag00011001;
    sc_signal< bool > ap_block_state7_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state14_pp0_stage3_iter1;
    sc_signal< bool > ap_block_pp0_stage3_flag00011011;
    sc_signal< bool > ap_block_pp0_stage3_flag00011001;
    sc_signal< bool > ap_block_state8_pp0_stage4_iter0;
    sc_signal< bool > ap_block_state15_pp0_stage4_iter1;
    sc_signal< bool > ap_block_pp0_stage4_flag00011011;
    sc_signal< bool > ap_block_pp0_stage4_flag00011001;
    sc_signal< bool > ap_block_pp0_stage6_flag00011001;
    sc_signal< bool > ap_block_pp1_stage1_flag00011011;
    sc_signal< bool > ap_block_state23_pp1_stage2_iter0;
    sc_signal< bool > ap_block_state30_pp1_stage2_iter1;
    sc_signal< bool > ap_block_pp1_stage2_flag00011011;
    sc_signal< bool > ap_block_pp1_stage2_flag00011001;
    sc_signal< bool > ap_block_state24_pp1_stage3_iter0;
    sc_signal< bool > ap_block_state31_pp1_stage3_iter1;
    sc_signal< bool > ap_block_pp1_stage3_flag00011011;
    sc_signal< bool > ap_block_pp1_stage3_flag00011001;
    sc_signal< bool > ap_block_state25_pp1_stage4_iter0;
    sc_signal< bool > ap_block_state32_pp1_stage4_iter1;
    sc_signal< bool > ap_block_pp1_stage4_flag00011011;
    sc_signal< bool > ap_block_pp1_stage4_flag00011001;
    sc_signal< bool > ap_block_pp1_stage6_flag00011001;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<22> ap_ST_fsm_state1;
    static const sc_lv<22> ap_ST_fsm_state2;
    static const sc_lv<22> ap_ST_fsm_state3;
    static const sc_lv<22> ap_ST_fsm_pp0_stage0;
    static const sc_lv<22> ap_ST_fsm_pp0_stage1;
    static const sc_lv<22> ap_ST_fsm_pp0_stage2;
    static const sc_lv<22> ap_ST_fsm_pp0_stage3;
    static const sc_lv<22> ap_ST_fsm_pp0_stage4;
    static const sc_lv<22> ap_ST_fsm_pp0_stage5;
    static const sc_lv<22> ap_ST_fsm_pp0_stage6;
    static const sc_lv<22> ap_ST_fsm_state17;
    static const sc_lv<22> ap_ST_fsm_state18;
    static const sc_lv<22> ap_ST_fsm_state19;
    static const sc_lv<22> ap_ST_fsm_state20;
    static const sc_lv<22> ap_ST_fsm_pp1_stage0;
    static const sc_lv<22> ap_ST_fsm_pp1_stage1;
    static const sc_lv<22> ap_ST_fsm_pp1_stage2;
    static const sc_lv<22> ap_ST_fsm_pp1_stage3;
    static const sc_lv<22> ap_ST_fsm_pp1_stage4;
    static const sc_lv<22> ap_ST_fsm_pp1_stage5;
    static const sc_lv<22> ap_ST_fsm_pp1_stage6;
    static const sc_lv<22> ap_ST_fsm_state34;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_8;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<15> ap_const_lv15_311;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<10> ap_const_lv10_311;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_21;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<5> ap_const_lv5_4;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_pp0_stage6();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp1_stage1();
    void thread_ap_CS_fsm_pp1_stage2();
    void thread_ap_CS_fsm_pp1_stage5();
    void thread_ap_CS_fsm_pp1_stage6();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state34();
    void thread_ap_block_pp0_stage0_flag00000000();
    void thread_ap_block_pp0_stage0_flag00011001();
    void thread_ap_block_pp0_stage0_flag00011011();
    void thread_ap_block_pp0_stage1_flag00011001();
    void thread_ap_block_pp0_stage1_flag00011011();
    void thread_ap_block_pp0_stage2_flag00000000();
    void thread_ap_block_pp0_stage2_flag00011001();
    void thread_ap_block_pp0_stage2_flag00011011();
    void thread_ap_block_pp0_stage3_flag00011001();
    void thread_ap_block_pp0_stage3_flag00011011();
    void thread_ap_block_pp0_stage4_flag00011001();
    void thread_ap_block_pp0_stage4_flag00011011();
    void thread_ap_block_pp0_stage5_flag00011001();
    void thread_ap_block_pp0_stage5_flag00011011();
    void thread_ap_block_pp0_stage6_flag00000000();
    void thread_ap_block_pp0_stage6_flag00011001();
    void thread_ap_block_pp0_stage6_flag00011011();
    void thread_ap_block_pp1_stage0_flag00000000();
    void thread_ap_block_pp1_stage0_flag00011001();
    void thread_ap_block_pp1_stage0_flag00011011();
    void thread_ap_block_pp1_stage1_flag00011001();
    void thread_ap_block_pp1_stage1_flag00011011();
    void thread_ap_block_pp1_stage2_flag00000000();
    void thread_ap_block_pp1_stage2_flag00011001();
    void thread_ap_block_pp1_stage2_flag00011011();
    void thread_ap_block_pp1_stage3_flag00011001();
    void thread_ap_block_pp1_stage3_flag00011011();
    void thread_ap_block_pp1_stage4_flag00011001();
    void thread_ap_block_pp1_stage4_flag00011011();
    void thread_ap_block_pp1_stage5_flag00011001();
    void thread_ap_block_pp1_stage5_flag00011011();
    void thread_ap_block_pp1_stage6_flag00000000();
    void thread_ap_block_pp1_stage6_flag00011001();
    void thread_ap_block_pp1_stage6_flag00011011();
    void thread_ap_block_state10_pp0_stage6_iter0();
    void thread_ap_block_state11_pp0_stage0_iter1();
    void thread_ap_block_state12_pp0_stage1_iter1();
    void thread_ap_block_state13_pp0_stage2_iter1();
    void thread_ap_block_state14_pp0_stage3_iter1();
    void thread_ap_block_state15_pp0_stage4_iter1();
    void thread_ap_block_state16_pp0_stage5_iter1();
    void thread_ap_block_state21_pp1_stage0_iter0();
    void thread_ap_block_state22_pp1_stage1_iter0();
    void thread_ap_block_state23_pp1_stage2_iter0();
    void thread_ap_block_state24_pp1_stage3_iter0();
    void thread_ap_block_state25_pp1_stage4_iter0();
    void thread_ap_block_state26_pp1_stage5_iter0();
    void thread_ap_block_state27_pp1_stage6_iter0();
    void thread_ap_block_state28_pp1_stage0_iter1();
    void thread_ap_block_state29_pp1_stage1_iter1();
    void thread_ap_block_state30_pp1_stage2_iter1();
    void thread_ap_block_state31_pp1_stage3_iter1();
    void thread_ap_block_state32_pp1_stage4_iter1();
    void thread_ap_block_state33_pp1_stage5_iter1();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage1_iter0();
    void thread_ap_block_state6_pp0_stage2_iter0();
    void thread_ap_block_state7_pp0_stage3_iter0();
    void thread_ap_block_state8_pp0_stage4_iter0();
    void thread_ap_block_state9_pp0_stage5_iter0();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_condition_pp1_exit_iter0_state21();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_exitcond1_fu_407_p2();
    void thread_exitcond2_fu_321_p2();
    void thread_exitcond3_fu_305_p2();
    void thread_exitcond_fu_450_p2();
    void thread_grp_fu_267_p0();
    void thread_grp_fu_273_p0();
    void thread_grp_fu_273_p1();
    void thread_hiddenOut_address0();
    void thread_hiddenOut_ce0();
    void thread_hiddenOut_d0();
    void thread_hiddenOut_we0();
    void thread_hiddenToOutputWeight_address0();
    void thread_hiddenToOutputWeight_ce0();
    void thread_i_1_phi_fu_249_p4();
    void thread_i_2_fu_353_p2();
    void thread_i_3_fu_481_p2();
    void thread_i_phi_fu_216_p4();
    void thread_inputData_address0();
    void thread_inputData_ce0();
    void thread_inputToHiddenWeights_address0();
    void thread_inputToHiddenWeights_ce0();
    void thread_next_mul_fu_299_p2();
    void thread_notlhs_fu_377_p2();
    void thread_notrhs_fu_383_p2();
    void thread_o_2_fu_311_p2();
    void thread_o_3_fu_413_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_we0();
    void thread_p_shl_cast_fu_431_p1();
    void thread_phi_mul_cast_fu_294_p1();
    void thread_sum1_to_int_fu_359_p1();
    void thread_sum2_cast_fu_348_p1();
    void thread_sum2_fu_342_p2();
    void thread_tmp_12_fu_373_p1();
    void thread_tmp_13_fu_389_p2();
    void thread_tmp_15_fu_393_p2();
    void thread_tmp_16_fu_331_p2();
    void thread_tmp_17_fu_460_p2();
    void thread_tmp_18_cast_fu_441_p1();
    void thread_tmp_19_cast_fu_337_p1();
    void thread_tmp_1_cast_fu_419_p1();
    void thread_tmp_1_fu_446_p1();
    void thread_tmp_20_cast_fu_465_p1();
    void thread_tmp_2_fu_363_p4();
    void thread_tmp_4_cast_fu_476_p1();
    void thread_tmp_4_fu_470_p2();
    void thread_tmp_5_cast_fu_327_p1();
    void thread_tmp_5_fu_435_p2();
    void thread_tmp_cast_fu_456_p1();
    void thread_tmp_fu_317_p1();
    void thread_tmp_s_fu_423_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
