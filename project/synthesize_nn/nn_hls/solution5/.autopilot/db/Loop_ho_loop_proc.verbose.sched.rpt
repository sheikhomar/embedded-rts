

================================================================
== Vivado HLS Report for 'Loop_ho_loop_proc'
================================================================
* Date:           Tue Dec 18 12:48:15 2018

* Version:        2017.2 (Build 1909853 on Thu Jun 15 18:55:24 MDT 2017)
* Project:        nn_hls
* Solution:       solution5
* Product family: zynq
* Target device:  xc7z010clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   8.00|      6.44|        1.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  2331|  2331|  2331|  2331|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------+------+------+----------+-----------+-----------+------+----------+
        |            |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +------------+------+------+----------+-----------+-----------+------+----------+
        |- ho_loop   |  2330|  2330|       233|          -|          -|    10|    no    |
        | + on_loop  |   229|   229|        13|          7|          1|    32|    yes   |
        +------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 7, depth = 13


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 17
* Pipeline: 1
  Pipeline-0: II = 7, D = 13, States = { 4 5 6 7 8 9 10 11 12 13 14 15 16 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
3 --> 
	4  / true
4 --> 
	17  / (exitcond)
	5  / (!exitcond)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	4  / true
17 --> 
	2  / true
* FSM state operations: 

 <State 1>: 1.59ns
ST_1: empty (4)  [1/1] 0.00ns
newFuncRoot:0  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([10 x float]* %output_r, [1 x i8]* @p_str8, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str8, i32 -1, [1 x i8]* @p_str8, [1 x i8]* @p_str8, [1 x i8]* @p_str8, [1 x i8]* @p_str8, [1 x i8]* @p_str8) nounwind

ST_1: StgValue_19 (5)  [1/1] 1.59ns
newFuncRoot:1  br label %.preheader


 <State 2>: 5.58ns
ST_2: o_1 (7)  [1/1] 0.00ns
.preheader:0  %o_1 = phi i4 [ %o, %0 ], [ 0, %newFuncRoot ]

ST_2: exitcond1 (8)  [1/1] 3.10ns  loc: nn_hls/src/digitRecognizer.cpp:21
.preheader:1  %exitcond1 = icmp eq i4 %o_1, -6

ST_2: o (9)  [1/1] 2.35ns  loc: nn_hls/src/digitRecognizer.cpp:21
.preheader:2  %o = add i4 %o_1, 1

ST_2: StgValue_23 (10)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:21
.preheader:3  br i1 %exitcond1, label %.exitStub, label %2

ST_2: tmp_1_cast (16)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:21
:4  %tmp_1_cast = zext i4 %o_1 to i10

ST_2: tmp (17)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:21
:5  %tmp = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %o_1, i5 0)

ST_2: p_shl_cast (18)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:23
:6  %p_shl_cast = zext i9 %tmp to i10

ST_2: tmp_9 (19)  [1/1] 2.32ns  loc: nn_hls/src/digitRecognizer.cpp:23
:7  %tmp_9 = add i10 %tmp_1_cast, %p_shl_cast

ST_2: tmp_9_cast (20)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:23
:8  %tmp_9_cast = zext i10 %tmp_9 to i32

ST_2: hiddenToOutputWeight (21)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:23
:9  %hiddenToOutputWeight = getelementptr [330 x float]* @hiddenToOutputWeight, i32 0, i32 %tmp_9_cast

ST_2: sum (22)  [2/2] 3.25ns  loc: nn_hls/src/digitRecognizer.cpp:23
:10  %sum = load float* %hiddenToOutputWeight, align 4

ST_2: StgValue_31 (54)  [1/1] 0.00ns
.exitStub:0  ret void


 <State 3>: 4.84ns
ST_3: empty_15 (12)  [1/1] 0.00ns
:0  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10) nounwind

ST_3: StgValue_33 (13)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:21
:1  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str5) nounwind

ST_3: tmp_2 (14)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:21
:2  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([8 x i8]* @p_str5) nounwind

ST_3: tmp_1 (15)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:23
:3  %tmp_1 = zext i4 %o_1 to i32

ST_3: sum (22)  [1/2] 3.25ns  loc: nn_hls/src/digitRecognizer.cpp:23
:10  %sum = load float* %hiddenToOutputWeight, align 4

ST_3: StgValue_37 (23)  [1/1] 1.59ns  loc: nn_hls/src/digitRecognizer.cpp:24
:11  br label %1


 <State 4>: 5.58ns
ST_4: i_1 (25)  [1/1] 0.00ns
:0  %i_1 = phi i6 [ 1, %2 ], [ %i, %3 ]

ST_4: sum1 (26)  [1/1] 0.00ns
:1  %sum1 = phi float [ %sum, %2 ], [ %sum_3, %3 ]

ST_4: exitcond (27)  [1/1] 3.88ns  loc: nn_hls/src/digitRecognizer.cpp:24
:2  %exitcond = icmp eq i6 %i_1, -31

ST_4: StgValue_41 (28)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:24
:3  br i1 %exitcond, label %0, label %3

ST_4: tmp_cast (34)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:25
:4  %tmp_cast = zext i6 %i_1 to i10

ST_4: tmp_s (35)  [1/1] 2.32ns  loc: nn_hls/src/digitRecognizer.cpp:25
:5  %tmp_s = add i10 %tmp_9, %tmp_cast

ST_4: tmp_10_cast (36)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:25
:6  %tmp_10_cast = zext i10 %tmp_s to i32

ST_4: hiddenToOutputWeight_1 (37)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:25
:7  %hiddenToOutputWeight_1 = getelementptr [330 x float]* @hiddenToOutputWeight, i32 0, i32 %tmp_10_cast

ST_4: hiddenToOutputWeight_2 (38)  [2/2] 3.25ns  loc: nn_hls/src/digitRecognizer.cpp:25
:8  %hiddenToOutputWeight_2 = load float* %hiddenToOutputWeight_1, align 4

ST_4: tmp_4 (39)  [1/1] 2.31ns  loc: nn_hls/src/digitRecognizer.cpp:25
:9  %tmp_4 = add i6 %i_1, -1

ST_4: tmp_4_cast (40)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:25
:10  %tmp_4_cast = zext i6 %tmp_4 to i32

ST_4: hiddenOut_addr (41)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:25
:11  %hiddenOut_addr = getelementptr inbounds [32 x float]* %hiddenOut, i32 0, i32 %tmp_4_cast

ST_4: hiddenOut_load (42)  [2/2] 3.25ns  loc: nn_hls/src/digitRecognizer.cpp:25
:12  %hiddenOut_load = load float* %hiddenOut_addr, align 4

ST_4: i (46)  [1/1] 2.31ns  loc: nn_hls/src/digitRecognizer.cpp:24
:16  %i = add i6 %i_1, 1


 <State 5>: 3.25ns
ST_5: hiddenToOutputWeight_2 (38)  [1/2] 3.25ns  loc: nn_hls/src/digitRecognizer.cpp:25
:8  %hiddenToOutputWeight_2 = load float* %hiddenToOutputWeight_1, align 4

ST_5: hiddenOut_load (42)  [1/2] 3.25ns  loc: nn_hls/src/digitRecognizer.cpp:25
:12  %hiddenOut_load = load float* %hiddenOut_addr, align 4


 <State 6>: 5.70ns
ST_6: tmp_8 (43)  [4/4] 5.70ns  loc: nn_hls/src/digitRecognizer.cpp:25
:13  %tmp_8 = fmul float %hiddenToOutputWeight_2, %hiddenOut_load


 <State 7>: 5.70ns
ST_7: tmp_8 (43)  [3/4] 5.70ns  loc: nn_hls/src/digitRecognizer.cpp:25
:13  %tmp_8 = fmul float %hiddenToOutputWeight_2, %hiddenOut_load


 <State 8>: 5.70ns
ST_8: tmp_8 (43)  [2/4] 5.70ns  loc: nn_hls/src/digitRecognizer.cpp:25
:13  %tmp_8 = fmul float %hiddenToOutputWeight_2, %hiddenOut_load


 <State 9>: 5.70ns
ST_9: tmp_8 (43)  [1/4] 5.70ns  loc: nn_hls/src/digitRecognizer.cpp:25
:13  %tmp_8 = fmul float %hiddenToOutputWeight_2, %hiddenOut_load


 <State 10>: 6.44ns
ST_10: sum_3 (44)  [7/7] 6.44ns  loc: nn_hls/src/digitRecognizer.cpp:25
:14  %sum_3 = fadd float %sum1, %tmp_8


 <State 11>: 6.44ns
ST_11: sum_3 (44)  [6/7] 6.44ns  loc: nn_hls/src/digitRecognizer.cpp:25
:14  %sum_3 = fadd float %sum1, %tmp_8


 <State 12>: 6.44ns
ST_12: sum_3 (44)  [5/7] 6.44ns  loc: nn_hls/src/digitRecognizer.cpp:25
:14  %sum_3 = fadd float %sum1, %tmp_8


 <State 13>: 6.44ns
ST_13: sum_3 (44)  [4/7] 6.44ns  loc: nn_hls/src/digitRecognizer.cpp:25
:14  %sum_3 = fadd float %sum1, %tmp_8


 <State 14>: 6.44ns
ST_14: sum_3 (44)  [3/7] 6.44ns  loc: nn_hls/src/digitRecognizer.cpp:25
:14  %sum_3 = fadd float %sum1, %tmp_8


 <State 15>: 6.44ns
ST_15: sum_3 (44)  [2/7] 6.44ns  loc: nn_hls/src/digitRecognizer.cpp:25
:14  %sum_3 = fadd float %sum1, %tmp_8


 <State 16>: 6.44ns
ST_16: empty_16 (30)  [1/1] 0.00ns
:0  %empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind

ST_16: StgValue_65 (31)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:25
:1  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str6) nounwind

ST_16: tmp_5 (32)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:25
:2  %tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([8 x i8]* @p_str6) nounwind

ST_16: StgValue_67 (33)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:26
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_16: sum_3 (44)  [1/7] 6.44ns  loc: nn_hls/src/digitRecognizer.cpp:25
:14  %sum_3 = fadd float %sum1, %tmp_8

ST_16: empty_17 (45)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:25
:15  %empty_17 = call i32 (...)* @_ssdm_op_SpecRegionEnd([8 x i8]* @p_str6, i32 %tmp_5) nounwind

ST_16: StgValue_70 (47)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:24
:17  br label %1


 <State 17>: 2.32ns
ST_17: output_addr (49)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:27
:0  %output_addr = getelementptr [10 x float]* %output_r, i32 0, i32 %tmp_1

ST_17: StgValue_72 (50)  [1/1] 2.32ns  loc: nn_hls/src/digitRecognizer.cpp:27
:1  store float %sum1, float* %output_addr, align 4

ST_17: empty_14 (51)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:30
:2  %empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([8 x i8]* @p_str5, i32 %tmp_2) nounwind

ST_17: StgValue_74 (52)  [1/1] 0.00ns  loc: nn_hls/src/digitRecognizer.cpp:21
:3  br label %.preheader



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('o') with incoming values : ('o', nn_hls/src/digitRecognizer.cpp:21) [7]  (1.59 ns)

 <State 2>: 5.58ns
The critical path consists of the following:
	'phi' operation ('o') with incoming values : ('o', nn_hls/src/digitRecognizer.cpp:21) [7]  (0 ns)
	'add' operation ('tmp_9', nn_hls/src/digitRecognizer.cpp:23) [19]  (2.32 ns)
	'getelementptr' operation ('hiddenToOutputWeight', nn_hls/src/digitRecognizer.cpp:23) [21]  (0 ns)
	'load' operation ('sum', nn_hls/src/digitRecognizer.cpp:23) on array 'hiddenToOutputWeight' [22]  (3.25 ns)

 <State 3>: 4.84ns
The critical path consists of the following:
	'load' operation ('sum', nn_hls/src/digitRecognizer.cpp:23) on array 'hiddenToOutputWeight' [22]  (3.25 ns)
	multiplexor before 'phi' operation ('i') with incoming values : ('i', nn_hls/src/digitRecognizer.cpp:24) [25]  (1.59 ns)

 <State 4>: 5.58ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', nn_hls/src/digitRecognizer.cpp:24) [25]  (0 ns)
	'add' operation ('tmp_s', nn_hls/src/digitRecognizer.cpp:25) [35]  (2.32 ns)
	'getelementptr' operation ('hiddenToOutputWeight_1', nn_hls/src/digitRecognizer.cpp:25) [37]  (0 ns)
	'load' operation ('hiddenToOutputWeight_2', nn_hls/src/digitRecognizer.cpp:25) on array 'hiddenToOutputWeight' [38]  (3.25 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'load' operation ('hiddenToOutputWeight_2', nn_hls/src/digitRecognizer.cpp:25) on array 'hiddenToOutputWeight' [38]  (3.25 ns)

 <State 6>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_8', nn_hls/src/digitRecognizer.cpp:25) [43]  (5.7 ns)

 <State 7>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_8', nn_hls/src/digitRecognizer.cpp:25) [43]  (5.7 ns)

 <State 8>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_8', nn_hls/src/digitRecognizer.cpp:25) [43]  (5.7 ns)

 <State 9>: 5.7ns
The critical path consists of the following:
	'fmul' operation ('tmp_8', nn_hls/src/digitRecognizer.cpp:25) [43]  (5.7 ns)

 <State 10>: 6.44ns
The critical path consists of the following:
	'fadd' operation ('sum', nn_hls/src/digitRecognizer.cpp:25) [44]  (6.44 ns)

 <State 11>: 6.44ns
The critical path consists of the following:
	'fadd' operation ('sum', nn_hls/src/digitRecognizer.cpp:25) [44]  (6.44 ns)

 <State 12>: 6.44ns
The critical path consists of the following:
	'fadd' operation ('sum', nn_hls/src/digitRecognizer.cpp:25) [44]  (6.44 ns)

 <State 13>: 6.44ns
The critical path consists of the following:
	'fadd' operation ('sum', nn_hls/src/digitRecognizer.cpp:25) [44]  (6.44 ns)

 <State 14>: 6.44ns
The critical path consists of the following:
	'fadd' operation ('sum', nn_hls/src/digitRecognizer.cpp:25) [44]  (6.44 ns)

 <State 15>: 6.44ns
The critical path consists of the following:
	'fadd' operation ('sum', nn_hls/src/digitRecognizer.cpp:25) [44]  (6.44 ns)

 <State 16>: 6.44ns
The critical path consists of the following:
	'fadd' operation ('sum', nn_hls/src/digitRecognizer.cpp:25) [44]  (6.44 ns)

 <State 17>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('output_addr', nn_hls/src/digitRecognizer.cpp:27) [49]  (0 ns)
	'store' operation (nn_hls/src/digitRecognizer.cpp:27) of variable 'sum' on array 'output_r' [50]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
