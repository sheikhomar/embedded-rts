// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_ih_loop_proc_HH_
#define _Loop_ih_loop_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "digitRecognizer_fcud.h"
#include "digitRecognizer_fdEe.h"
#include "digitRecognizer_feOg.h"
#include "Loop_ih_loop_procbkb.h"

namespace ap_rtl {

struct Loop_ih_loop_proc : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > hiddenOut_address0;
    sc_out< sc_logic > hiddenOut_ce0;
    sc_out< sc_logic > hiddenOut_we0;
    sc_out< sc_lv<32> > hiddenOut_d0;
    sc_out< sc_lv<10> > inputData_address0;
    sc_out< sc_logic > inputData_ce0;
    sc_in< sc_lv<32> > inputData_q0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    Loop_ih_loop_proc(sc_module_name name);
    SC_HAS_PROCESS(Loop_ih_loop_proc);

    ~Loop_ih_loop_proc();

    sc_trace_file* mVcdFile;

    Loop_ih_loop_procbkb* inputToHiddenWeights_U;
    digitRecognizer_fcud<1,7,32,32,32>* digitRecognizer_fcud_U0;
    digitRecognizer_fdEe<1,4,32,32,32>* digitRecognizer_fdEe_U1;
    digitRecognizer_feOg<1,1,32,32,1>* digitRecognizer_feOg_U2;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<15> > inputToHiddenWeights_address0;
    sc_signal< sc_logic > inputToHiddenWeights_ce0;
    sc_signal< sc_lv<32> > inputToHiddenWeights_q0;
    sc_signal< sc_lv<10> > i_0_i_i_reg_134;
    sc_signal< sc_lv<32> > sum_0_i_i_reg_145;
    sc_signal< sc_lv<15> > next_mul_fu_175_p2;
    sc_signal< sc_lv<15> > next_mul_reg_283;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > o_fu_187_p2;
    sc_signal< sc_lv<6> > o_reg_291;
    sc_signal< sc_lv<1> > exitcond3_i_i_fu_181_p2;
    sc_signal< sc_lv<32> > tmp_i_fu_193_p1;
    sc_signal< sc_lv<32> > tmp_i_reg_301;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond2_i_i_fu_197_p2;
    sc_signal< sc_lv<1> > exitcond2_i_i_reg_311;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_flag00011001;
    sc_signal< sc_lv<1> > ap_reg_pp0_iter1_exitcond2_i_i_reg_311;
    sc_signal< sc_lv<10> > i_fu_229_p2;
    sc_signal< sc_lv<10> > i_reg_325;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > inputToHiddenWeights_2_reg_330;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state12_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_flag00011001;
    sc_signal< sc_lv<32> > inputData_load_reg_335;
    sc_signal< sc_lv<32> > grp_fu_160_p2;
    sc_signal< sc_lv<32> > tmp_7_i_reg_340;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_state9_pp0_stage5_iter0;
    sc_signal< bool > ap_block_state16_pp0_stage5_iter1;
    sc_signal< bool > ap_block_pp0_stage5_flag00011001;
    sc_signal< sc_lv<32> > grp_fu_155_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > notlhs_fu_253_p2;
    sc_signal< sc_lv<1> > notlhs_reg_350;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<1> > notrhs_fu_259_p2;
    sc_signal< sc_lv<1> > notrhs_reg_355;
    sc_signal< sc_lv<1> > tmp_5_fu_164_p2;
    sc_signal< sc_lv<1> > tmp_5_reg_360;
    sc_signal< bool > ap_block_pp0_stage0_flag00011011;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< bool > ap_block_state10_pp0_stage6_iter0;
    sc_signal< bool > ap_block_pp0_stage6_flag00011011;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage6;
    sc_signal< bool > ap_block_pp0_stage5_flag00011011;
    sc_signal< sc_lv<6> > o_0_i_i_reg_110;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<15> > phi_mul_reg_122;
    sc_signal< sc_lv<10> > i_0_i_i_phi_fu_138_p4;
    sc_signal< bool > ap_block_pp0_stage0_flag00000000;
    sc_signal< sc_lv<32> > phi_mul_cast_fu_170_p1;
    sc_signal< sc_lv<32> > tmp_8_cast_fu_213_p1;
    sc_signal< sc_lv<32> > sum_cast_fu_224_p1;
    sc_signal< bool > ap_block_pp0_stage6_flag00000000;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage2_flag00000000;
    sc_signal< sc_lv<15> > tmp_5_i_cast_fu_203_p1;
    sc_signal< sc_lv<15> > tmp_8_fu_207_p2;
    sc_signal< sc_lv<10> > sum_fu_218_p2;
    sc_signal< sc_lv<32> > sum_0_i_i_to_int_fu_235_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_239_p4;
    sc_signal< sc_lv<23> > tmp_2_fu_249_p1;
    sc_signal< sc_lv<1> > tmp_4_fu_265_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_269_p2;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_flag00011011;
    sc_signal< bool > ap_block_state6_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state13_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_flag00011011;
    sc_signal< bool > ap_block_state7_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state14_pp0_stage3_iter1;
    sc_signal< bool > ap_block_pp0_stage3_flag00011011;
    sc_signal< bool > ap_block_state8_pp0_stage4_iter0;
    sc_signal< bool > ap_block_state15_pp0_stage4_iter1;
    sc_signal< bool > ap_block_pp0_stage4_flag00011011;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_pp0_stage0;
    static const sc_lv<12> ap_ST_fsm_pp0_stage1;
    static const sc_lv<12> ap_ST_fsm_pp0_stage2;
    static const sc_lv<12> ap_ST_fsm_pp0_stage3;
    static const sc_lv<12> ap_ST_fsm_pp0_stage4;
    static const sc_lv<12> ap_ST_fsm_pp0_stage5;
    static const sc_lv<12> ap_ST_fsm_pp0_stage6;
    static const sc_lv<12> ap_ST_fsm_state17;
    static const sc_lv<12> ap_ST_fsm_state18;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<15> ap_const_lv15_311;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<10> ap_const_lv10_311;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_4;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_pp0_stage6();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_block_pp0_stage0_flag00000000();
    void thread_ap_block_pp0_stage0_flag00011001();
    void thread_ap_block_pp0_stage0_flag00011011();
    void thread_ap_block_pp0_stage1_flag00011001();
    void thread_ap_block_pp0_stage1_flag00011011();
    void thread_ap_block_pp0_stage2_flag00000000();
    void thread_ap_block_pp0_stage2_flag00011011();
    void thread_ap_block_pp0_stage3_flag00011011();
    void thread_ap_block_pp0_stage4_flag00011011();
    void thread_ap_block_pp0_stage5_flag00011001();
    void thread_ap_block_pp0_stage5_flag00011011();
    void thread_ap_block_pp0_stage6_flag00000000();
    void thread_ap_block_pp0_stage6_flag00011011();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp0_stage6_iter0();
    void thread_ap_block_state11_pp0_stage0_iter1();
    void thread_ap_block_state12_pp0_stage1_iter1();
    void thread_ap_block_state13_pp0_stage2_iter1();
    void thread_ap_block_state14_pp0_stage3_iter1();
    void thread_ap_block_state15_pp0_stage4_iter1();
    void thread_ap_block_state16_pp0_stage5_iter1();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage1_iter0();
    void thread_ap_block_state6_pp0_stage2_iter0();
    void thread_ap_block_state7_pp0_stage3_iter0();
    void thread_ap_block_state8_pp0_stage4_iter0();
    void thread_ap_block_state9_pp0_stage5_iter0();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_exitcond2_i_i_fu_197_p2();
    void thread_exitcond3_i_i_fu_181_p2();
    void thread_hiddenOut_address0();
    void thread_hiddenOut_ce0();
    void thread_hiddenOut_d0();
    void thread_hiddenOut_we0();
    void thread_i_0_i_i_phi_fu_138_p4();
    void thread_i_fu_229_p2();
    void thread_inputData_address0();
    void thread_inputData_ce0();
    void thread_inputToHiddenWeights_address0();
    void thread_inputToHiddenWeights_ce0();
    void thread_next_mul_fu_175_p2();
    void thread_notlhs_fu_253_p2();
    void thread_notrhs_fu_259_p2();
    void thread_o_fu_187_p2();
    void thread_phi_mul_cast_fu_170_p1();
    void thread_sum_0_i_i_to_int_fu_235_p1();
    void thread_sum_cast_fu_224_p1();
    void thread_sum_fu_218_p2();
    void thread_tmp_1_fu_239_p4();
    void thread_tmp_2_fu_249_p1();
    void thread_tmp_4_fu_265_p2();
    void thread_tmp_5_i_cast_fu_203_p1();
    void thread_tmp_6_fu_269_p2();
    void thread_tmp_8_cast_fu_213_p1();
    void thread_tmp_8_fu_207_p2();
    void thread_tmp_i_fu_193_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
