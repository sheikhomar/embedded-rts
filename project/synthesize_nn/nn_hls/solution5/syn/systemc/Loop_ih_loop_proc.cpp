// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_ih_loop_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_ih_loop_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_ih_loop_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> Loop_ih_loop_proc::ap_ST_fsm_state1 = "1";
const sc_lv<12> Loop_ih_loop_proc::ap_ST_fsm_state2 = "10";
const sc_lv<12> Loop_ih_loop_proc::ap_ST_fsm_state3 = "100";
const sc_lv<12> Loop_ih_loop_proc::ap_ST_fsm_pp0_stage0 = "1000";
const sc_lv<12> Loop_ih_loop_proc::ap_ST_fsm_pp0_stage1 = "10000";
const sc_lv<12> Loop_ih_loop_proc::ap_ST_fsm_pp0_stage2 = "100000";
const sc_lv<12> Loop_ih_loop_proc::ap_ST_fsm_pp0_stage3 = "1000000";
const sc_lv<12> Loop_ih_loop_proc::ap_ST_fsm_pp0_stage4 = "10000000";
const sc_lv<12> Loop_ih_loop_proc::ap_ST_fsm_pp0_stage5 = "100000000";
const sc_lv<12> Loop_ih_loop_proc::ap_ST_fsm_pp0_stage6 = "1000000000";
const sc_lv<12> Loop_ih_loop_proc::ap_ST_fsm_state17 = "10000000000";
const sc_lv<12> Loop_ih_loop_proc::ap_ST_fsm_state18 = "100000000000";
const sc_lv<32> Loop_ih_loop_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Loop_ih_loop_proc::ap_const_boolean_1 = true;
const sc_lv<32> Loop_ih_loop_proc::ap_const_lv32_1 = "1";
const sc_lv<1> Loop_ih_loop_proc::ap_const_lv1_0 = "0";
const sc_lv<32> Loop_ih_loop_proc::ap_const_lv32_2 = "10";
const sc_lv<32> Loop_ih_loop_proc::ap_const_lv32_3 = "11";
const bool Loop_ih_loop_proc::ap_const_boolean_0 = false;
const sc_lv<32> Loop_ih_loop_proc::ap_const_lv32_4 = "100";
const sc_lv<32> Loop_ih_loop_proc::ap_const_lv32_8 = "1000";
const sc_lv<32> Loop_ih_loop_proc::ap_const_lv32_A = "1010";
const sc_lv<1> Loop_ih_loop_proc::ap_const_lv1_1 = "1";
const sc_lv<32> Loop_ih_loop_proc::ap_const_lv32_9 = "1001";
const sc_lv<6> Loop_ih_loop_proc::ap_const_lv6_0 = "000000";
const sc_lv<32> Loop_ih_loop_proc::ap_const_lv32_B = "1011";
const sc_lv<15> Loop_ih_loop_proc::ap_const_lv15_0 = "000000000000000";
const sc_lv<10> Loop_ih_loop_proc::ap_const_lv10_1 = "1";
const sc_lv<32> Loop_ih_loop_proc::ap_const_lv32_5 = "101";
const sc_lv<15> Loop_ih_loop_proc::ap_const_lv15_311 = "1100010001";
const sc_lv<6> Loop_ih_loop_proc::ap_const_lv6_20 = "100000";
const sc_lv<6> Loop_ih_loop_proc::ap_const_lv6_1 = "1";
const sc_lv<10> Loop_ih_loop_proc::ap_const_lv10_311 = "1100010001";
const sc_lv<10> Loop_ih_loop_proc::ap_const_lv10_3FF = "1111111111";
const sc_lv<32> Loop_ih_loop_proc::ap_const_lv32_17 = "10111";
const sc_lv<32> Loop_ih_loop_proc::ap_const_lv32_1E = "11110";
const sc_lv<8> Loop_ih_loop_proc::ap_const_lv8_FF = "11111111";
const sc_lv<23> Loop_ih_loop_proc::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> Loop_ih_loop_proc::ap_const_lv5_4 = "100";

Loop_ih_loop_proc::Loop_ih_loop_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    inputToHiddenWeights_U = new Loop_ih_loop_procbkb("inputToHiddenWeights_U");
    inputToHiddenWeights_U->clk(ap_clk);
    inputToHiddenWeights_U->reset(ap_rst);
    inputToHiddenWeights_U->address0(inputToHiddenWeights_address0);
    inputToHiddenWeights_U->ce0(inputToHiddenWeights_ce0);
    inputToHiddenWeights_U->q0(inputToHiddenWeights_q0);
    digitRecognizer_fcud_U0 = new digitRecognizer_fcud<1,7,32,32,32>("digitRecognizer_fcud_U0");
    digitRecognizer_fcud_U0->clk(ap_clk);
    digitRecognizer_fcud_U0->reset(ap_rst);
    digitRecognizer_fcud_U0->din0(sum_0_i_i_reg_145);
    digitRecognizer_fcud_U0->din1(tmp_7_i_reg_340);
    digitRecognizer_fcud_U0->ce(ap_var_for_const0);
    digitRecognizer_fcud_U0->dout(grp_fu_155_p2);
    digitRecognizer_fdEe_U1 = new digitRecognizer_fdEe<1,4,32,32,32>("digitRecognizer_fdEe_U1");
    digitRecognizer_fdEe_U1->clk(ap_clk);
    digitRecognizer_fdEe_U1->reset(ap_rst);
    digitRecognizer_fdEe_U1->din0(inputToHiddenWeights_2_reg_330);
    digitRecognizer_fdEe_U1->din1(inputData_load_reg_335);
    digitRecognizer_fdEe_U1->ce(ap_var_for_const0);
    digitRecognizer_fdEe_U1->dout(grp_fu_160_p2);
    digitRecognizer_feOg_U2 = new digitRecognizer_feOg<1,1,32,32,1>("digitRecognizer_feOg_U2");
    digitRecognizer_feOg_U2->din0(sum_0_i_i_reg_145);
    digitRecognizer_feOg_U2->din1(ap_var_for_const1);
    digitRecognizer_feOg_U2->opcode(ap_var_for_const2);
    digitRecognizer_feOg_U2->dout(tmp_5_fu_164_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage0_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage1_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage2_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage2_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage3_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage4_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage5_flag00011001);

    SC_METHOD(thread_ap_block_pp0_stage5_flag00011011);

    SC_METHOD(thread_ap_block_pp0_stage6_flag00000000);

    SC_METHOD(thread_ap_block_pp0_stage6_flag00011011);

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state10_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state12_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state13_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state14_pp0_stage3_iter1);

    SC_METHOD(thread_ap_block_state15_pp0_stage4_iter1);

    SC_METHOD(thread_ap_block_state16_pp0_stage5_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage5_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state4);
    sensitive << ( exitcond2_i_i_fu_197_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_i_i_fu_181_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_i_i_fu_181_p2 );

    SC_METHOD(thread_exitcond2_i_i_fu_197_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i_0_i_i_phi_fu_138_p4 );

    SC_METHOD(thread_exitcond3_i_i_fu_181_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( o_0_i_i_reg_110 );

    SC_METHOD(thread_hiddenOut_address0);
    sensitive << ( tmp_i_reg_301 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_hiddenOut_ce0);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_hiddenOut_d0);
    sensitive << ( sum_0_i_i_reg_145 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_6_fu_269_p2 );

    SC_METHOD(thread_hiddenOut_we0);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_i_0_i_i_phi_fu_138_p4);
    sensitive << ( i_0_i_i_reg_134 );
    sensitive << ( exitcond2_i_i_reg_311 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_325 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );

    SC_METHOD(thread_i_fu_229_p2);
    sensitive << ( i_0_i_i_phi_fu_138_p4 );

    SC_METHOD(thread_inputData_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( sum_cast_fu_224_p1 );

    SC_METHOD(thread_inputData_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_inputToHiddenWeights_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_flag00000000 );
    sensitive << ( phi_mul_cast_fu_170_p1 );
    sensitive << ( tmp_8_cast_fu_213_p1 );

    SC_METHOD(thread_inputToHiddenWeights_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_flag00011001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_next_mul_fu_175_p2);
    sensitive << ( phi_mul_reg_122 );

    SC_METHOD(thread_notlhs_fu_253_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_1_fu_239_p4 );

    SC_METHOD(thread_notrhs_fu_259_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_2_fu_249_p1 );

    SC_METHOD(thread_o_fu_187_p2);
    sensitive << ( o_0_i_i_reg_110 );

    SC_METHOD(thread_phi_mul_cast_fu_170_p1);
    sensitive << ( phi_mul_reg_122 );

    SC_METHOD(thread_sum_0_i_i_to_int_fu_235_p1);
    sensitive << ( sum_0_i_i_reg_145 );

    SC_METHOD(thread_sum_cast_fu_224_p1);
    sensitive << ( sum_fu_218_p2 );

    SC_METHOD(thread_sum_fu_218_p2);
    sensitive << ( i_0_i_i_phi_fu_138_p4 );

    SC_METHOD(thread_tmp_1_fu_239_p4);
    sensitive << ( sum_0_i_i_to_int_fu_235_p1 );

    SC_METHOD(thread_tmp_2_fu_249_p1);
    sensitive << ( sum_0_i_i_to_int_fu_235_p1 );

    SC_METHOD(thread_tmp_4_fu_265_p2);
    sensitive << ( notlhs_reg_350 );
    sensitive << ( notrhs_reg_355 );

    SC_METHOD(thread_tmp_5_i_cast_fu_203_p1);
    sensitive << ( i_0_i_i_phi_fu_138_p4 );

    SC_METHOD(thread_tmp_6_fu_269_p2);
    sensitive << ( tmp_5_reg_360 );
    sensitive << ( tmp_4_fu_265_p2 );

    SC_METHOD(thread_tmp_8_cast_fu_213_p1);
    sensitive << ( tmp_8_fu_207_p2 );

    SC_METHOD(thread_tmp_8_fu_207_p2);
    sensitive << ( phi_mul_reg_122 );
    sensitive << ( tmp_5_i_cast_fu_203_p1 );

    SC_METHOD(thread_tmp_i_fu_193_p1);
    sensitive << ( o_0_i_i_reg_110 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_i_i_fu_181_p2 );
    sensitive << ( exitcond2_i_i_fu_197_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_flag00011011 );
    sensitive << ( ap_block_pp0_stage6_flag00011011 );
    sensitive << ( ap_block_pp0_stage5_flag00011011 );
    sensitive << ( ap_block_pp0_stage1_flag00011011 );
    sensitive << ( ap_block_pp0_stage2_flag00011011 );
    sensitive << ( ap_block_pp0_stage3_flag00011011 );
    sensitive << ( ap_block_pp0_stage4_flag00011011 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_ih_loop_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, hiddenOut_address0, "(port)hiddenOut_address0");
    sc_trace(mVcdFile, hiddenOut_ce0, "(port)hiddenOut_ce0");
    sc_trace(mVcdFile, hiddenOut_we0, "(port)hiddenOut_we0");
    sc_trace(mVcdFile, hiddenOut_d0, "(port)hiddenOut_d0");
    sc_trace(mVcdFile, inputData_address0, "(port)inputData_address0");
    sc_trace(mVcdFile, inputData_ce0, "(port)inputData_ce0");
    sc_trace(mVcdFile, inputData_q0, "(port)inputData_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, inputToHiddenWeights_address0, "inputToHiddenWeights_address0");
    sc_trace(mVcdFile, inputToHiddenWeights_ce0, "inputToHiddenWeights_ce0");
    sc_trace(mVcdFile, inputToHiddenWeights_q0, "inputToHiddenWeights_q0");
    sc_trace(mVcdFile, i_0_i_i_reg_134, "i_0_i_i_reg_134");
    sc_trace(mVcdFile, sum_0_i_i_reg_145, "sum_0_i_i_reg_145");
    sc_trace(mVcdFile, next_mul_fu_175_p2, "next_mul_fu_175_p2");
    sc_trace(mVcdFile, next_mul_reg_283, "next_mul_reg_283");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, o_fu_187_p2, "o_fu_187_p2");
    sc_trace(mVcdFile, o_reg_291, "o_reg_291");
    sc_trace(mVcdFile, exitcond3_i_i_fu_181_p2, "exitcond3_i_i_fu_181_p2");
    sc_trace(mVcdFile, tmp_i_fu_193_p1, "tmp_i_fu_193_p1");
    sc_trace(mVcdFile, tmp_i_reg_301, "tmp_i_reg_301");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond2_i_i_fu_197_p2, "exitcond2_i_i_fu_197_p2");
    sc_trace(mVcdFile, exitcond2_i_i_reg_311, "exitcond2_i_i_reg_311");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter0, "ap_block_state4_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter1, "ap_block_state11_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011001, "ap_block_pp0_stage0_flag00011001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond2_i_i_reg_311, "ap_reg_pp0_iter1_exitcond2_i_i_reg_311");
    sc_trace(mVcdFile, i_fu_229_p2, "i_fu_229_p2");
    sc_trace(mVcdFile, i_reg_325, "i_reg_325");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, inputToHiddenWeights_2_reg_330, "inputToHiddenWeights_2_reg_330");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter0, "ap_block_state5_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage1_iter1, "ap_block_state12_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011001, "ap_block_pp0_stage1_flag00011001");
    sc_trace(mVcdFile, inputData_load_reg_335, "inputData_load_reg_335");
    sc_trace(mVcdFile, grp_fu_160_p2, "grp_fu_160_p2");
    sc_trace(mVcdFile, tmp_7_i_reg_340, "tmp_7_i_reg_340");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage5_iter0, "ap_block_state9_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage5_iter1, "ap_block_state16_pp0_stage5_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage5_flag00011001, "ap_block_pp0_stage5_flag00011001");
    sc_trace(mVcdFile, grp_fu_155_p2, "grp_fu_155_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, notlhs_fu_253_p2, "notlhs_fu_253_p2");
    sc_trace(mVcdFile, notlhs_reg_350, "notlhs_reg_350");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, notrhs_fu_259_p2, "notrhs_fu_259_p2");
    sc_trace(mVcdFile, notrhs_reg_355, "notrhs_reg_355");
    sc_trace(mVcdFile, tmp_5_fu_164_p2, "tmp_5_fu_164_p2");
    sc_trace(mVcdFile, tmp_5_reg_360, "tmp_5_reg_360");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00011011, "ap_block_pp0_stage0_flag00011011");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state4, "ap_condition_pp0_exit_iter0_state4");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage6_iter0, "ap_block_state10_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage6_flag00011011, "ap_block_pp0_stage6_flag00011011");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_block_pp0_stage5_flag00011011, "ap_block_pp0_stage5_flag00011011");
    sc_trace(mVcdFile, o_0_i_i_reg_110, "o_0_i_i_reg_110");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, phi_mul_reg_122, "phi_mul_reg_122");
    sc_trace(mVcdFile, i_0_i_i_phi_fu_138_p4, "i_0_i_i_phi_fu_138_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_flag00000000, "ap_block_pp0_stage0_flag00000000");
    sc_trace(mVcdFile, phi_mul_cast_fu_170_p1, "phi_mul_cast_fu_170_p1");
    sc_trace(mVcdFile, tmp_8_cast_fu_213_p1, "tmp_8_cast_fu_213_p1");
    sc_trace(mVcdFile, sum_cast_fu_224_p1, "sum_cast_fu_224_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage6_flag00000000, "ap_block_pp0_stage6_flag00000000");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00000000, "ap_block_pp0_stage2_flag00000000");
    sc_trace(mVcdFile, tmp_5_i_cast_fu_203_p1, "tmp_5_i_cast_fu_203_p1");
    sc_trace(mVcdFile, tmp_8_fu_207_p2, "tmp_8_fu_207_p2");
    sc_trace(mVcdFile, sum_fu_218_p2, "sum_fu_218_p2");
    sc_trace(mVcdFile, sum_0_i_i_to_int_fu_235_p1, "sum_0_i_i_to_int_fu_235_p1");
    sc_trace(mVcdFile, tmp_1_fu_239_p4, "tmp_1_fu_239_p4");
    sc_trace(mVcdFile, tmp_2_fu_249_p1, "tmp_2_fu_249_p1");
    sc_trace(mVcdFile, tmp_4_fu_265_p2, "tmp_4_fu_265_p2");
    sc_trace(mVcdFile, tmp_6_fu_269_p2, "tmp_6_fu_269_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_flag00011011, "ap_block_pp0_stage1_flag00011011");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage2_iter0, "ap_block_state6_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage2_iter1, "ap_block_state13_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_flag00011011, "ap_block_pp0_stage2_flag00011011");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage3_iter0, "ap_block_state7_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage3_iter1, "ap_block_state14_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3_flag00011011, "ap_block_pp0_stage3_flag00011011");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage4_iter0, "ap_block_state8_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage4_iter1, "ap_block_state15_pp0_stage4_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage4_flag00011011, "ap_block_pp0_stage4_flag00011011");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Loop_ih_loop_proc::~Loop_ih_loop_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete inputToHiddenWeights_U;
    delete digitRecognizer_fcud_U0;
    delete digitRecognizer_fdEe_U1;
    delete digitRecognizer_feOg_U2;
}

void Loop_ih_loop_proc::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Loop_ih_loop_proc::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void Loop_ih_loop_proc::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_4;
}

void Loop_ih_loop_proc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(exitcond3_i_i_fu_181_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()) && 
             ((esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011011.read(), ap_const_boolean_0) && 
               esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read())) || 
              (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
               esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011011.read(), ap_const_boolean_0))))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state4.read() ^ ap_const_logic_1);
        } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011011.read(), ap_const_boolean_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011011.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_reg_311.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_i_i_reg_134 = i_reg_325.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_i_i_reg_134 = ap_const_lv10_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        o_0_i_i_reg_110 = o_reg_291.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        o_0_i_i_reg_110 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        phi_mul_reg_122 = next_mul_reg_283.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        phi_mul_reg_122 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond2_i_i_reg_311.read()))) {
        sum_0_i_i_reg_145 = grp_fu_155_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sum_0_i_i_reg_145 = inputToHiddenWeights_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond2_i_i_reg_311 = exitcond2_i_i_reg_311.read();
        exitcond2_i_i_reg_311 = exitcond2_i_i_fu_197_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_fu_197_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_reg_325 = i_fu_229_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_reg_311.read()))) {
        inputData_load_reg_335 = inputData_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_reg_311.read()))) {
        inputToHiddenWeights_2_reg_330 = inputToHiddenWeights_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        next_mul_reg_283 = next_mul_fu_175_p2.read();
        o_reg_291 = o_fu_187_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        notlhs_reg_350 = notlhs_fu_253_p2.read();
        notrhs_reg_355 = notrhs_fu_259_p2.read();
        tmp_5_reg_360 = tmp_5_fu_164_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_reg_311.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011001.read(), ap_const_boolean_0))) {
        tmp_7_i_reg_340 = grp_fu_160_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_i_reg_301 = tmp_i_fu_193_p1.read();
    }
}

void Loop_ih_loop_proc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[3];
}

void Loop_ih_loop_proc::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[4];
}

void Loop_ih_loop_proc::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[5];
}

void Loop_ih_loop_proc::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[8];
}

void Loop_ih_loop_proc::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[9];
}

void Loop_ih_loop_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_ih_loop_proc::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[10];
}

void Loop_ih_loop_proc::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[11];
}

void Loop_ih_loop_proc::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Loop_ih_loop_proc::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Loop_ih_loop_proc::thread_ap_block_pp0_stage0_flag00000000() {
    ap_block_pp0_stage0_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_pp0_stage0_flag00011001() {
    ap_block_pp0_stage0_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_pp0_stage0_flag00011011() {
    ap_block_pp0_stage0_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_pp0_stage1_flag00011001() {
    ap_block_pp0_stage1_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_pp0_stage1_flag00011011() {
    ap_block_pp0_stage1_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_pp0_stage2_flag00000000() {
    ap_block_pp0_stage2_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_pp0_stage2_flag00011011() {
    ap_block_pp0_stage2_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_pp0_stage3_flag00011011() {
    ap_block_pp0_stage3_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_pp0_stage4_flag00011011() {
    ap_block_pp0_stage4_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_pp0_stage5_flag00011001() {
    ap_block_pp0_stage5_flag00011001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_pp0_stage5_flag00011011() {
    ap_block_pp0_stage5_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_pp0_stage6_flag00000000() {
    ap_block_pp0_stage6_flag00000000 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_pp0_stage6_flag00011011() {
    ap_block_pp0_stage6_flag00011011 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_ih_loop_proc::thread_ap_block_state10_pp0_stage6_iter0() {
    ap_block_state10_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_state11_pp0_stage0_iter1() {
    ap_block_state11_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_state12_pp0_stage1_iter1() {
    ap_block_state12_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_state13_pp0_stage2_iter1() {
    ap_block_state13_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_state14_pp0_stage3_iter1() {
    ap_block_state14_pp0_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_state15_pp0_stage4_iter1() {
    ap_block_state15_pp0_stage4_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_state16_pp0_stage5_iter1() {
    ap_block_state16_pp0_stage5_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_state4_pp0_stage0_iter0() {
    ap_block_state4_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_state5_pp0_stage1_iter0() {
    ap_block_state5_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_state6_pp0_stage2_iter0() {
    ap_block_state6_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_state7_pp0_stage3_iter0() {
    ap_block_state7_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_state8_pp0_stage4_iter0() {
    ap_block_state8_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_block_state9_pp0_stage5_iter0() {
    ap_block_state9_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_ih_loop_proc::thread_ap_condition_pp0_exit_iter0_state4() {
    if (esl_seteq<1,1,1>(exitcond2_i_i_fu_197_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_0;
    }
}

void Loop_ih_loop_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_i_i_fu_181_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_ih_loop_proc::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_ih_loop_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_ih_loop_proc::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_ih_loop_proc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_i_i_fu_181_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_ih_loop_proc::thread_exitcond2_i_i_fu_197_p2() {
    exitcond2_i_i_fu_197_p2 = (!i_0_i_i_phi_fu_138_p4.read().is_01() || !ap_const_lv10_311.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_i_phi_fu_138_p4.read() == ap_const_lv10_311);
}

void Loop_ih_loop_proc::thread_exitcond3_i_i_fu_181_p2() {
    exitcond3_i_i_fu_181_p2 = (!o_0_i_i_reg_110.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(o_0_i_i_reg_110.read() == ap_const_lv6_20);
}

void Loop_ih_loop_proc::thread_hiddenOut_address0() {
    hiddenOut_address0 =  (sc_lv<5>) (tmp_i_reg_301.read());
}

void Loop_ih_loop_proc::thread_hiddenOut_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        hiddenOut_ce0 = ap_const_logic_1;
    } else {
        hiddenOut_ce0 = ap_const_logic_0;
    }
}

void Loop_ih_loop_proc::thread_hiddenOut_d0() {
    hiddenOut_d0 = (!tmp_6_fu_269_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_6_fu_269_p2.read()[0].to_bool())? ap_const_lv32_0: sum_0_i_i_reg_145.read());
}

void Loop_ih_loop_proc::thread_hiddenOut_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        hiddenOut_we0 = ap_const_logic_1;
    } else {
        hiddenOut_we0 = ap_const_logic_0;
    }
}

void Loop_ih_loop_proc::thread_i_0_i_i_phi_fu_138_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_i_i_reg_311.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        i_0_i_i_phi_fu_138_p4 = i_reg_325.read();
    } else {
        i_0_i_i_phi_fu_138_p4 = i_0_i_i_reg_134.read();
    }
}

void Loop_ih_loop_proc::thread_i_fu_229_p2() {
    i_fu_229_p2 = (!i_0_i_i_phi_fu_138_p4.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_0_i_i_phi_fu_138_p4.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void Loop_ih_loop_proc::thread_inputData_address0() {
    inputData_address0 =  (sc_lv<10>) (sum_cast_fu_224_p1.read());
}

void Loop_ih_loop_proc::thread_inputData_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        inputData_ce0 = ap_const_logic_1;
    } else {
        inputData_ce0 = ap_const_logic_0;
    }
}

void Loop_ih_loop_proc::thread_inputToHiddenWeights_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00000000.read(), ap_const_boolean_0))) {
        inputToHiddenWeights_address0 =  (sc_lv<15>) (tmp_8_cast_fu_213_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        inputToHiddenWeights_address0 =  (sc_lv<15>) (phi_mul_cast_fu_170_p1.read());
    } else {
        inputToHiddenWeights_address0 = "XXXXXXXXXXXXXXX";
    }
}

void Loop_ih_loop_proc::thread_inputToHiddenWeights_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        inputToHiddenWeights_ce0 = ap_const_logic_1;
    } else {
        inputToHiddenWeights_ce0 = ap_const_logic_0;
    }
}

void Loop_ih_loop_proc::thread_next_mul_fu_175_p2() {
    next_mul_fu_175_p2 = (!phi_mul_reg_122.read().is_01() || !ap_const_lv15_311.is_01())? sc_lv<15>(): (sc_biguint<15>(phi_mul_reg_122.read()) + sc_biguint<15>(ap_const_lv15_311));
}

void Loop_ih_loop_proc::thread_notlhs_fu_253_p2() {
    notlhs_fu_253_p2 = (!tmp_1_fu_239_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_239_p4.read() != ap_const_lv8_FF);
}

void Loop_ih_loop_proc::thread_notrhs_fu_259_p2() {
    notrhs_fu_259_p2 = (!tmp_2_fu_249_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_249_p1.read() == ap_const_lv23_0);
}

void Loop_ih_loop_proc::thread_o_fu_187_p2() {
    o_fu_187_p2 = (!o_0_i_i_reg_110.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(o_0_i_i_reg_110.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void Loop_ih_loop_proc::thread_phi_mul_cast_fu_170_p1() {
    phi_mul_cast_fu_170_p1 = esl_zext<32,15>(phi_mul_reg_122.read());
}

void Loop_ih_loop_proc::thread_sum_0_i_i_to_int_fu_235_p1() {
    sum_0_i_i_to_int_fu_235_p1 = sum_0_i_i_reg_145.read();
}

void Loop_ih_loop_proc::thread_sum_cast_fu_224_p1() {
    sum_cast_fu_224_p1 = esl_zext<32,10>(sum_fu_218_p2.read());
}

void Loop_ih_loop_proc::thread_sum_fu_218_p2() {
    sum_fu_218_p2 = (!i_0_i_i_phi_fu_138_p4.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<10>(): (sc_biguint<10>(i_0_i_i_phi_fu_138_p4.read()) + sc_bigint<10>(ap_const_lv10_3FF));
}

void Loop_ih_loop_proc::thread_tmp_1_fu_239_p4() {
    tmp_1_fu_239_p4 = sum_0_i_i_to_int_fu_235_p1.read().range(30, 23);
}

void Loop_ih_loop_proc::thread_tmp_2_fu_249_p1() {
    tmp_2_fu_249_p1 = sum_0_i_i_to_int_fu_235_p1.read().range(23-1, 0);
}

void Loop_ih_loop_proc::thread_tmp_4_fu_265_p2() {
    tmp_4_fu_265_p2 = (notrhs_reg_355.read() | notlhs_reg_350.read());
}

void Loop_ih_loop_proc::thread_tmp_5_i_cast_fu_203_p1() {
    tmp_5_i_cast_fu_203_p1 = esl_zext<15,10>(i_0_i_i_phi_fu_138_p4.read());
}

void Loop_ih_loop_proc::thread_tmp_6_fu_269_p2() {
    tmp_6_fu_269_p2 = (tmp_4_fu_265_p2.read() & tmp_5_reg_360.read());
}

void Loop_ih_loop_proc::thread_tmp_8_cast_fu_213_p1() {
    tmp_8_cast_fu_213_p1 = esl_zext<32,15>(tmp_8_fu_207_p2.read());
}

void Loop_ih_loop_proc::thread_tmp_8_fu_207_p2() {
    tmp_8_fu_207_p2 = (!phi_mul_reg_122.read().is_01() || !tmp_5_i_cast_fu_203_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(phi_mul_reg_122.read()) + sc_biguint<15>(tmp_5_i_cast_fu_203_p1.read()));
}

void Loop_ih_loop_proc::thread_tmp_i_fu_193_p1() {
    tmp_i_fu_193_p1 = esl_zext<32,6>(o_0_i_i_reg_110.read());
}

void Loop_ih_loop_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_i_i_fu_181_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond2_i_i_fu_197_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond2_i_i_fu_197_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011011.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_flag00011011.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 512 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage6_flag00011011.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

}

