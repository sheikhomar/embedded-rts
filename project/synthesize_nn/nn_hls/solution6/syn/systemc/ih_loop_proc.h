// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ih_loop_proc_HH_
#define _ih_loop_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dataflow_in_loop_ih_s.h"

namespace ap_rtl {

struct ih_loop_proc : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > hiddenOut_address0;
    sc_out< sc_logic > hiddenOut_ce0;
    sc_out< sc_logic > hiddenOut_we0;
    sc_out< sc_lv<32> > hiddenOut_d0;
    sc_out< sc_lv<10> > inputData_address0;
    sc_out< sc_logic > inputData_ce0;
    sc_in< sc_lv<32> > inputData_q0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_logic > ap_var_for_const2;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    ih_loop_proc(sc_module_name name);
    SC_HAS_PROCESS(ih_loop_proc);

    ~ih_loop_proc();

    sc_trace_file* mVcdFile;

    dataflow_in_loop_ih_s* grp_dataflow_in_loop_ih_s_fu_104;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > o_fu_184_p2;
    sc_signal< sc_lv<6> > o_reg_193;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > grp_dataflow_in_loop_ih_s_fu_104_inputData_address0;
    sc_signal< sc_logic > grp_dataflow_in_loop_ih_s_fu_104_inputData_ce0;
    sc_signal< sc_lv<32> > grp_dataflow_in_loop_ih_s_fu_104_inputData_d0;
    sc_signal< sc_logic > grp_dataflow_in_loop_ih_s_fu_104_inputData_we0;
    sc_signal< sc_lv<5> > grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_address0;
    sc_signal< sc_logic > grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_ce0;
    sc_signal< sc_lv<32> > grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_d0;
    sc_signal< sc_logic > grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_we0;
    sc_signal< sc_lv<5> > grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_address1;
    sc_signal< sc_logic > grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_ce1;
    sc_signal< sc_lv<32> > grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_d1;
    sc_signal< sc_logic > grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_we1;
    sc_signal< sc_logic > grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_write;
    sc_signal< sc_logic > grp_dataflow_in_loop_ih_s_fu_104_ap_done;
    sc_signal< sc_logic > grp_dataflow_in_loop_ih_s_fu_104_ap_start;
    sc_signal< sc_logic > grp_dataflow_in_loop_ih_s_fu_104_ap_ready;
    sc_signal< sc_logic > grp_dataflow_in_loop_ih_s_fu_104_ap_idle;
    sc_signal< sc_logic > grp_dataflow_in_loop_ih_s_fu_104_ap_continue;
    sc_signal< sc_lv<6> > o_0_i_i_reg_92;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_reg_grp_dataflow_in_loop_ih_s_fu_104_ap_start;
    sc_signal< sc_lv<1> > exitcond3_i_i_fu_178_p2;
    sc_signal< sc_logic > ap_sync_reg_grp_dataflow_in_loop_ih_s_fu_104_ap_ready;
    sc_signal< sc_logic > ap_sync_grp_dataflow_in_loop_ih_s_fu_104_ap_ready;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_grp_dataflow_in_loop_ih_s_fu_104_ap_ready();
    void thread_exitcond3_i_i_fu_178_p2();
    void thread_grp_dataflow_in_loop_ih_s_fu_104_ap_continue();
    void thread_grp_dataflow_in_loop_ih_s_fu_104_ap_start();
    void thread_hiddenOut_address0();
    void thread_hiddenOut_ce0();
    void thread_hiddenOut_d0();
    void thread_hiddenOut_we0();
    void thread_inputData_address0();
    void thread_inputData_ce0();
    void thread_o_fu_184_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
