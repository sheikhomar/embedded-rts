// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dataflow_in_loop_ih_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<10> dataflow_in_loop_ih_s::ap_const_lv10_0 = "0000000000";
const sc_logic dataflow_in_loop_ih_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<32> dataflow_in_loop_ih_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<5> dataflow_in_loop_ih_s::ap_const_lv5_0 = "00000";
const sc_logic dataflow_in_loop_ih_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<2> dataflow_in_loop_ih_s::ap_const_lv2_0 = "00";
const sc_lv<2> dataflow_in_loop_ih_s::ap_const_lv2_1 = "1";
const bool dataflow_in_loop_ih_s::ap_const_boolean_1 = true;

dataflow_in_loop_ih_s::dataflow_in_loop_ih_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    aesl_mux_load_32_785_U0 = new aesl_mux_load_32_785("aesl_mux_load_32_785_U0");
    aesl_mux_load_32_785_U0->ap_clk(ap_clk);
    aesl_mux_load_32_785_U0->ap_rst(ap_rst);
    aesl_mux_load_32_785_U0->ap_start(aesl_mux_load_32_785_U0_ap_start);
    aesl_mux_load_32_785_U0->ap_done(aesl_mux_load_32_785_U0_ap_done);
    aesl_mux_load_32_785_U0->ap_continue(aesl_mux_load_32_785_U0_ap_continue);
    aesl_mux_load_32_785_U0->ap_idle(aesl_mux_load_32_785_U0_ap_idle);
    aesl_mux_load_32_785_U0->ap_ready(aesl_mux_load_32_785_U0_ap_ready);
    aesl_mux_load_32_785_U0->p_channel(aesl_mux_load_32_785_U0_p_channel);
    aesl_mux_load_32_785_U0->p_channel_ap_vld(aesl_mux_load_32_785_U0_p_channel_ap_vld);
    aesl_mux_load_32_785_U0->o_0_i_i(o_0_i_i);
    aesl_mux_load_32_785_U0->o_0_i_i_channel_din(aesl_mux_load_32_785_U0_o_0_i_i_channel_din);
    aesl_mux_load_32_785_U0->o_0_i_i_channel_full_n(o_0_i_i_channel_full_n);
    aesl_mux_load_32_785_U0->o_0_i_i_channel_write(aesl_mux_load_32_785_U0_o_0_i_i_channel_write);
    hn_loop_proc_U0 = new hn_loop_proc("hn_loop_proc_U0");
    hn_loop_proc_U0->ap_clk(ap_clk);
    hn_loop_proc_U0->ap_rst(ap_rst);
    hn_loop_proc_U0->ap_start(hn_loop_proc_U0_ap_start);
    hn_loop_proc_U0->ap_done(hn_loop_proc_U0_ap_done);
    hn_loop_proc_U0->ap_continue(hn_loop_proc_U0_ap_continue);
    hn_loop_proc_U0->ap_idle(hn_loop_proc_U0_ap_idle);
    hn_loop_proc_U0->ap_ready(hn_loop_proc_U0_ap_ready);
    hn_loop_proc_U0->empty(p_channel_dout);
    hn_loop_proc_U0->o_0_i_i_dout(o_0_i_i_channel_dout);
    hn_loop_proc_U0->o_0_i_i_empty_n(o_0_i_i_channel_empty_n);
    hn_loop_proc_U0->o_0_i_i_read(hn_loop_proc_U0_o_0_i_i_read);
    hn_loop_proc_U0->inputData_address0(hn_loop_proc_U0_inputData_address0);
    hn_loop_proc_U0->inputData_ce0(hn_loop_proc_U0_inputData_ce0);
    hn_loop_proc_U0->inputData_q0(inputData_q0);
    hn_loop_proc_U0->o_0_i_i_out_din(hn_loop_proc_U0_o_0_i_i_out_din);
    hn_loop_proc_U0->o_0_i_i_out_full_n(o_0_i_i_channel1_full_n);
    hn_loop_proc_U0->o_0_i_i_out_write(hn_loop_proc_U0_o_0_i_i_out_write);
    hn_loop_proc_U0->ap_return(hn_loop_proc_U0_ap_return);
    p_nn_hls_src_digitRe_U0 = new p_nn_hls_src_digitRe("p_nn_hls_src_digitRe_U0");
    p_nn_hls_src_digitRe_U0->ap_clk(ap_clk);
    p_nn_hls_src_digitRe_U0->ap_rst(ap_rst);
    p_nn_hls_src_digitRe_U0->ap_start(p_nn_hls_src_digitRe_U0_ap_start);
    p_nn_hls_src_digitRe_U0->ap_done(p_nn_hls_src_digitRe_U0_ap_done);
    p_nn_hls_src_digitRe_U0->ap_continue(p_nn_hls_src_digitRe_U0_ap_continue);
    p_nn_hls_src_digitRe_U0->ap_idle(p_nn_hls_src_digitRe_U0_ap_idle);
    p_nn_hls_src_digitRe_U0->ap_ready(p_nn_hls_src_digitRe_U0_ap_ready);
    p_nn_hls_src_digitRe_U0->p_read(sum_0_i_i_loc1_chann_dout);
    p_nn_hls_src_digitRe_U0->hiddenOut_address0(p_nn_hls_src_digitRe_U0_hiddenOut_address0);
    p_nn_hls_src_digitRe_U0->hiddenOut_ce0(p_nn_hls_src_digitRe_U0_hiddenOut_ce0);
    p_nn_hls_src_digitRe_U0->hiddenOut_we0(p_nn_hls_src_digitRe_U0_hiddenOut_we0);
    p_nn_hls_src_digitRe_U0->hiddenOut_d0(p_nn_hls_src_digitRe_U0_hiddenOut_d0);
    p_nn_hls_src_digitRe_U0->o_0_i_i_dout(o_0_i_i_channel1_dout);
    p_nn_hls_src_digitRe_U0->o_0_i_i_empty_n(o_0_i_i_channel1_empty_n);
    p_nn_hls_src_digitRe_U0->o_0_i_i_read(p_nn_hls_src_digitRe_U0_o_0_i_i_read);
    p_channel_U = new fifo_w32_d2_A("p_channel_U");
    p_channel_U->clk(ap_clk);
    p_channel_U->reset(ap_rst);
    p_channel_U->if_read_ce(ap_var_for_const0);
    p_channel_U->if_write_ce(ap_var_for_const0);
    p_channel_U->if_din(aesl_mux_load_32_785_U0_p_channel);
    p_channel_U->if_full_n(p_channel_full_n);
    p_channel_U->if_write(aesl_mux_load_32_785_U0_ap_done);
    p_channel_U->if_dout(p_channel_dout);
    p_channel_U->if_empty_n(p_channel_empty_n);
    p_channel_U->if_read(hn_loop_proc_U0_ap_ready);
    o_0_i_i_channel_U = new fifo_w6_d1_A("o_0_i_i_channel_U");
    o_0_i_i_channel_U->clk(ap_clk);
    o_0_i_i_channel_U->reset(ap_rst);
    o_0_i_i_channel_U->if_read_ce(ap_var_for_const0);
    o_0_i_i_channel_U->if_write_ce(ap_var_for_const0);
    o_0_i_i_channel_U->if_din(aesl_mux_load_32_785_U0_o_0_i_i_channel_din);
    o_0_i_i_channel_U->if_full_n(o_0_i_i_channel_full_n);
    o_0_i_i_channel_U->if_write(aesl_mux_load_32_785_U0_o_0_i_i_channel_write);
    o_0_i_i_channel_U->if_dout(o_0_i_i_channel_dout);
    o_0_i_i_channel_U->if_empty_n(o_0_i_i_channel_empty_n);
    o_0_i_i_channel_U->if_read(hn_loop_proc_U0_o_0_i_i_read);
    o_0_i_i_channel1_U = new fifo_w6_d1_A("o_0_i_i_channel1_U");
    o_0_i_i_channel1_U->clk(ap_clk);
    o_0_i_i_channel1_U->reset(ap_rst);
    o_0_i_i_channel1_U->if_read_ce(ap_var_for_const0);
    o_0_i_i_channel1_U->if_write_ce(ap_var_for_const0);
    o_0_i_i_channel1_U->if_din(hn_loop_proc_U0_o_0_i_i_out_din);
    o_0_i_i_channel1_U->if_full_n(o_0_i_i_channel1_full_n);
    o_0_i_i_channel1_U->if_write(hn_loop_proc_U0_o_0_i_i_out_write);
    o_0_i_i_channel1_U->if_dout(o_0_i_i_channel1_dout);
    o_0_i_i_channel1_U->if_empty_n(o_0_i_i_channel1_empty_n);
    o_0_i_i_channel1_U->if_read(p_nn_hls_src_digitRe_U0_o_0_i_i_read);
    sum_0_i_i_loc1_chann_U = new fifo_w32_d2_A("sum_0_i_i_loc1_chann_U");
    sum_0_i_i_loc1_chann_U->clk(ap_clk);
    sum_0_i_i_loc1_chann_U->reset(ap_rst);
    sum_0_i_i_loc1_chann_U->if_read_ce(ap_var_for_const0);
    sum_0_i_i_loc1_chann_U->if_write_ce(ap_var_for_const0);
    sum_0_i_i_loc1_chann_U->if_din(hn_loop_proc_U0_ap_return);
    sum_0_i_i_loc1_chann_U->if_full_n(sum_0_i_i_loc1_chann_full_n);
    sum_0_i_i_loc1_chann_U->if_write(hn_loop_proc_U0_ap_done);
    sum_0_i_i_loc1_chann_U->if_dout(sum_0_i_i_loc1_chann_dout);
    sum_0_i_i_loc1_chann_U->if_empty_n(sum_0_i_i_loc1_chann_empty_n);
    sum_0_i_i_loc1_chann_U->if_read(p_nn_hls_src_digitRe_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_aesl_mux_load_32_785_U0_ap_continue);
    sensitive << ( p_channel_full_n );

    SC_METHOD(thread_aesl_mux_load_32_785_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_aesl_mux_load_32_785_U0_ap_ready );

    SC_METHOD(thread_aesl_mux_load_32_785_U0_start_full_n);

    SC_METHOD(thread_aesl_mux_load_32_785_U0_start_write);

    SC_METHOD(thread_ap_channel_done_p_channel);
    sensitive << ( aesl_mux_load_32_785_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_sum_0_i_i_loc1_chann);
    sensitive << ( hn_loop_proc_U0_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( p_nn_hls_src_digitRe_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( aesl_mux_load_32_785_U0_ap_idle );
    sensitive << ( hn_loop_proc_U0_ap_idle );
    sensitive << ( p_nn_hls_src_digitRe_U0_ap_idle );
    sensitive << ( p_channel_empty_n );
    sensitive << ( sum_0_i_i_loc1_chann_empty_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_ap_sync_aesl_mux_load_32_785_U0_ap_ready);
    sensitive << ( aesl_mux_load_32_785_U0_ap_ready );
    sensitive << ( ap_sync_reg_aesl_mux_load_32_785_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);
    sensitive << ( ap_continue );

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( p_nn_hls_src_digitRe_U0_ap_done );

    SC_METHOD(thread_ap_sync_hn_loop_proc_U0_ap_ready);
    sensitive << ( hn_loop_proc_U0_ap_ready );
    sensitive << ( ap_sync_reg_hn_loop_proc_U0_ap_ready );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_aesl_mux_load_32_785_U0_ap_ready );
    sensitive << ( ap_sync_hn_loop_proc_U0_ap_ready );

    SC_METHOD(thread_hiddenOut_address0);
    sensitive << ( p_nn_hls_src_digitRe_U0_hiddenOut_address0 );

    SC_METHOD(thread_hiddenOut_address1);

    SC_METHOD(thread_hiddenOut_ce0);
    sensitive << ( p_nn_hls_src_digitRe_U0_hiddenOut_ce0 );

    SC_METHOD(thread_hiddenOut_ce1);

    SC_METHOD(thread_hiddenOut_d0);
    sensitive << ( p_nn_hls_src_digitRe_U0_hiddenOut_d0 );

    SC_METHOD(thread_hiddenOut_d1);

    SC_METHOD(thread_hiddenOut_we0);
    sensitive << ( p_nn_hls_src_digitRe_U0_hiddenOut_we0 );

    SC_METHOD(thread_hiddenOut_we1);

    SC_METHOD(thread_hiddenOut_write);
    sensitive << ( p_nn_hls_src_digitRe_U0_hiddenOut_write );

    SC_METHOD(thread_hn_loop_proc_U0_ap_continue);
    sensitive << ( sum_0_i_i_loc1_chann_full_n );

    SC_METHOD(thread_hn_loop_proc_U0_ap_start);
    sensitive << ( p_channel_empty_n );
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_hn_loop_proc_U0_ap_ready );

    SC_METHOD(thread_hn_loop_proc_U0_start_full_n);

    SC_METHOD(thread_hn_loop_proc_U0_start_write);

    SC_METHOD(thread_inputData_address0);
    sensitive << ( hn_loop_proc_U0_inputData_address0 );

    SC_METHOD(thread_inputData_ce0);
    sensitive << ( hn_loop_proc_U0_inputData_ce0 );

    SC_METHOD(thread_inputData_d0);

    SC_METHOD(thread_inputData_we0);

    SC_METHOD(thread_p_nn_hls_src_digitRe_U0_ap_continue);
    sensitive << ( ap_continue );

    SC_METHOD(thread_p_nn_hls_src_digitRe_U0_ap_start);
    sensitive << ( sum_0_i_i_loc1_chann_empty_n );

    SC_METHOD(thread_p_nn_hls_src_digitRe_U0_hiddenOut_full_n);
    sensitive << ( hiddenOut_full_n );

    SC_METHOD(thread_p_nn_hls_src_digitRe_U0_hiddenOut_write);

    SC_METHOD(thread_p_nn_hls_src_digitRe_U0_start_full_n);

    SC_METHOD(thread_p_nn_hls_src_digitRe_U0_start_write);

    SC_THREAD(thread_ap_var_for_const0);

    ap_sync_reg_aesl_mux_load_32_785_U0_ap_ready = SC_LOGIC_0;
    aesl_mux_load_32_785_U0_ap_ready_count = "00";
    ap_sync_reg_hn_loop_proc_U0_ap_ready = SC_LOGIC_0;
    hn_loop_proc_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dataflow_in_loop_ih_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, o_0_i_i, "(port)o_0_i_i");
    sc_trace(mVcdFile, inputData_address0, "(port)inputData_address0");
    sc_trace(mVcdFile, inputData_ce0, "(port)inputData_ce0");
    sc_trace(mVcdFile, inputData_d0, "(port)inputData_d0");
    sc_trace(mVcdFile, inputData_q0, "(port)inputData_q0");
    sc_trace(mVcdFile, inputData_we0, "(port)inputData_we0");
    sc_trace(mVcdFile, hiddenOut_address0, "(port)hiddenOut_address0");
    sc_trace(mVcdFile, hiddenOut_ce0, "(port)hiddenOut_ce0");
    sc_trace(mVcdFile, hiddenOut_d0, "(port)hiddenOut_d0");
    sc_trace(mVcdFile, hiddenOut_q0, "(port)hiddenOut_q0");
    sc_trace(mVcdFile, hiddenOut_we0, "(port)hiddenOut_we0");
    sc_trace(mVcdFile, hiddenOut_address1, "(port)hiddenOut_address1");
    sc_trace(mVcdFile, hiddenOut_ce1, "(port)hiddenOut_ce1");
    sc_trace(mVcdFile, hiddenOut_d1, "(port)hiddenOut_d1");
    sc_trace(mVcdFile, hiddenOut_q1, "(port)hiddenOut_q1");
    sc_trace(mVcdFile, hiddenOut_we1, "(port)hiddenOut_we1");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, o_0_i_i_ap_vld, "(port)o_0_i_i_ap_vld");
    sc_trace(mVcdFile, hiddenOut_full_n, "(port)hiddenOut_full_n");
    sc_trace(mVcdFile, hiddenOut_write, "(port)hiddenOut_write");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, aesl_mux_load_32_785_U0_ap_start, "aesl_mux_load_32_785_U0_ap_start");
    sc_trace(mVcdFile, aesl_mux_load_32_785_U0_ap_done, "aesl_mux_load_32_785_U0_ap_done");
    sc_trace(mVcdFile, aesl_mux_load_32_785_U0_ap_continue, "aesl_mux_load_32_785_U0_ap_continue");
    sc_trace(mVcdFile, aesl_mux_load_32_785_U0_ap_idle, "aesl_mux_load_32_785_U0_ap_idle");
    sc_trace(mVcdFile, aesl_mux_load_32_785_U0_ap_ready, "aesl_mux_load_32_785_U0_ap_ready");
    sc_trace(mVcdFile, aesl_mux_load_32_785_U0_p_channel, "aesl_mux_load_32_785_U0_p_channel");
    sc_trace(mVcdFile, aesl_mux_load_32_785_U0_p_channel_ap_vld, "aesl_mux_load_32_785_U0_p_channel_ap_vld");
    sc_trace(mVcdFile, aesl_mux_load_32_785_U0_o_0_i_i_channel_din, "aesl_mux_load_32_785_U0_o_0_i_i_channel_din");
    sc_trace(mVcdFile, aesl_mux_load_32_785_U0_o_0_i_i_channel_write, "aesl_mux_load_32_785_U0_o_0_i_i_channel_write");
    sc_trace(mVcdFile, ap_channel_done_p_channel, "ap_channel_done_p_channel");
    sc_trace(mVcdFile, p_channel_full_n, "p_channel_full_n");
    sc_trace(mVcdFile, hn_loop_proc_U0_ap_start, "hn_loop_proc_U0_ap_start");
    sc_trace(mVcdFile, hn_loop_proc_U0_ap_done, "hn_loop_proc_U0_ap_done");
    sc_trace(mVcdFile, hn_loop_proc_U0_ap_continue, "hn_loop_proc_U0_ap_continue");
    sc_trace(mVcdFile, hn_loop_proc_U0_ap_idle, "hn_loop_proc_U0_ap_idle");
    sc_trace(mVcdFile, hn_loop_proc_U0_ap_ready, "hn_loop_proc_U0_ap_ready");
    sc_trace(mVcdFile, hn_loop_proc_U0_o_0_i_i_read, "hn_loop_proc_U0_o_0_i_i_read");
    sc_trace(mVcdFile, hn_loop_proc_U0_inputData_address0, "hn_loop_proc_U0_inputData_address0");
    sc_trace(mVcdFile, hn_loop_proc_U0_inputData_ce0, "hn_loop_proc_U0_inputData_ce0");
    sc_trace(mVcdFile, hn_loop_proc_U0_o_0_i_i_out_din, "hn_loop_proc_U0_o_0_i_i_out_din");
    sc_trace(mVcdFile, hn_loop_proc_U0_o_0_i_i_out_write, "hn_loop_proc_U0_o_0_i_i_out_write");
    sc_trace(mVcdFile, hn_loop_proc_U0_ap_return, "hn_loop_proc_U0_ap_return");
    sc_trace(mVcdFile, ap_channel_done_sum_0_i_i_loc1_chann, "ap_channel_done_sum_0_i_i_loc1_chann");
    sc_trace(mVcdFile, sum_0_i_i_loc1_chann_full_n, "sum_0_i_i_loc1_chann_full_n");
    sc_trace(mVcdFile, p_nn_hls_src_digitRe_U0_ap_start, "p_nn_hls_src_digitRe_U0_ap_start");
    sc_trace(mVcdFile, p_nn_hls_src_digitRe_U0_ap_done, "p_nn_hls_src_digitRe_U0_ap_done");
    sc_trace(mVcdFile, p_nn_hls_src_digitRe_U0_ap_continue, "p_nn_hls_src_digitRe_U0_ap_continue");
    sc_trace(mVcdFile, p_nn_hls_src_digitRe_U0_ap_idle, "p_nn_hls_src_digitRe_U0_ap_idle");
    sc_trace(mVcdFile, p_nn_hls_src_digitRe_U0_ap_ready, "p_nn_hls_src_digitRe_U0_ap_ready");
    sc_trace(mVcdFile, p_nn_hls_src_digitRe_U0_hiddenOut_address0, "p_nn_hls_src_digitRe_U0_hiddenOut_address0");
    sc_trace(mVcdFile, p_nn_hls_src_digitRe_U0_hiddenOut_ce0, "p_nn_hls_src_digitRe_U0_hiddenOut_ce0");
    sc_trace(mVcdFile, p_nn_hls_src_digitRe_U0_hiddenOut_we0, "p_nn_hls_src_digitRe_U0_hiddenOut_we0");
    sc_trace(mVcdFile, p_nn_hls_src_digitRe_U0_hiddenOut_d0, "p_nn_hls_src_digitRe_U0_hiddenOut_d0");
    sc_trace(mVcdFile, p_nn_hls_src_digitRe_U0_o_0_i_i_read, "p_nn_hls_src_digitRe_U0_o_0_i_i_read");
    sc_trace(mVcdFile, p_nn_hls_src_digitRe_U0_hiddenOut_full_n, "p_nn_hls_src_digitRe_U0_hiddenOut_full_n");
    sc_trace(mVcdFile, p_nn_hls_src_digitRe_U0_hiddenOut_write, "p_nn_hls_src_digitRe_U0_hiddenOut_write");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, p_channel_dout, "p_channel_dout");
    sc_trace(mVcdFile, p_channel_empty_n, "p_channel_empty_n");
    sc_trace(mVcdFile, o_0_i_i_channel_full_n, "o_0_i_i_channel_full_n");
    sc_trace(mVcdFile, o_0_i_i_channel_dout, "o_0_i_i_channel_dout");
    sc_trace(mVcdFile, o_0_i_i_channel_empty_n, "o_0_i_i_channel_empty_n");
    sc_trace(mVcdFile, o_0_i_i_channel1_full_n, "o_0_i_i_channel1_full_n");
    sc_trace(mVcdFile, o_0_i_i_channel1_dout, "o_0_i_i_channel1_dout");
    sc_trace(mVcdFile, o_0_i_i_channel1_empty_n, "o_0_i_i_channel1_empty_n");
    sc_trace(mVcdFile, sum_0_i_i_loc1_chann_dout, "sum_0_i_i_loc1_chann_dout");
    sc_trace(mVcdFile, sum_0_i_i_loc1_chann_empty_n, "sum_0_i_i_loc1_chann_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_aesl_mux_load_32_785_U0_ap_ready, "ap_sync_reg_aesl_mux_load_32_785_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_aesl_mux_load_32_785_U0_ap_ready, "ap_sync_aesl_mux_load_32_785_U0_ap_ready");
    sc_trace(mVcdFile, aesl_mux_load_32_785_U0_ap_ready_count, "aesl_mux_load_32_785_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_hn_loop_proc_U0_ap_ready, "ap_sync_reg_hn_loop_proc_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_hn_loop_proc_U0_ap_ready, "ap_sync_hn_loop_proc_U0_ap_ready");
    sc_trace(mVcdFile, hn_loop_proc_U0_ap_ready_count, "hn_loop_proc_U0_ap_ready_count");
    sc_trace(mVcdFile, aesl_mux_load_32_785_U0_start_full_n, "aesl_mux_load_32_785_U0_start_full_n");
    sc_trace(mVcdFile, aesl_mux_load_32_785_U0_start_write, "aesl_mux_load_32_785_U0_start_write");
    sc_trace(mVcdFile, hn_loop_proc_U0_start_full_n, "hn_loop_proc_U0_start_full_n");
    sc_trace(mVcdFile, hn_loop_proc_U0_start_write, "hn_loop_proc_U0_start_write");
    sc_trace(mVcdFile, p_nn_hls_src_digitRe_U0_start_full_n, "p_nn_hls_src_digitRe_U0_start_full_n");
    sc_trace(mVcdFile, p_nn_hls_src_digitRe_U0_start_write, "p_nn_hls_src_digitRe_U0_start_write");
#endif

    }
}

dataflow_in_loop_ih_s::~dataflow_in_loop_ih_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete aesl_mux_load_32_785_U0;
    delete hn_loop_proc_U0;
    delete p_nn_hls_src_digitRe_U0;
    delete p_channel_U;
    delete o_0_i_i_channel_U;
    delete o_0_i_i_channel1_U;
    delete sum_0_i_i_loc1_chann_U;
}

void dataflow_in_loop_ih_s::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void dataflow_in_loop_ih_s::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, aesl_mux_load_32_785_U0_ap_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        aesl_mux_load_32_785_U0_ap_ready_count = (!aesl_mux_load_32_785_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(aesl_mux_load_32_785_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(aesl_mux_load_32_785_U0_ap_ready.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()))) {
        aesl_mux_load_32_785_U0_ap_ready_count = (!aesl_mux_load_32_785_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(aesl_mux_load_32_785_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_aesl_mux_load_32_785_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_aesl_mux_load_32_785_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_aesl_mux_load_32_785_U0_ap_ready = ap_sync_aesl_mux_load_32_785_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_hn_loop_proc_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_hn_loop_proc_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_hn_loop_proc_U0_ap_ready = ap_sync_hn_loop_proc_U0_ap_ready.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, hn_loop_proc_U0_ap_ready.read()))) {
        hn_loop_proc_U0_ap_ready_count = (!hn_loop_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(hn_loop_proc_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, hn_loop_proc_U0_ap_ready.read()))) {
        hn_loop_proc_U0_ap_ready_count = (!hn_loop_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(hn_loop_proc_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
}

void dataflow_in_loop_ih_s::thread_aesl_mux_load_32_785_U0_ap_continue() {
    aesl_mux_load_32_785_U0_ap_continue = p_channel_full_n.read();
}

void dataflow_in_loop_ih_s::thread_aesl_mux_load_32_785_U0_ap_start() {
    aesl_mux_load_32_785_U0_ap_start = (ap_start.read() & (ap_sync_reg_aesl_mux_load_32_785_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void dataflow_in_loop_ih_s::thread_aesl_mux_load_32_785_U0_start_full_n() {
    aesl_mux_load_32_785_U0_start_full_n = ap_const_logic_0;
}

void dataflow_in_loop_ih_s::thread_aesl_mux_load_32_785_U0_start_write() {
    aesl_mux_load_32_785_U0_start_write = ap_const_logic_0;
}

void dataflow_in_loop_ih_s::thread_ap_channel_done_p_channel() {
    ap_channel_done_p_channel = aesl_mux_load_32_785_U0_ap_done.read();
}

void dataflow_in_loop_ih_s::thread_ap_channel_done_sum_0_i_i_loc1_chann() {
    ap_channel_done_sum_0_i_i_loc1_chann = hn_loop_proc_U0_ap_done.read();
}

void dataflow_in_loop_ih_s::thread_ap_done() {
    ap_done = p_nn_hls_src_digitRe_U0_ap_done.read();
}

void dataflow_in_loop_ih_s::thread_ap_idle() {
    ap_idle = (aesl_mux_load_32_785_U0_ap_idle.read() & hn_loop_proc_U0_ap_idle.read() & p_nn_hls_src_digitRe_U0_ap_idle.read() & (p_channel_empty_n.read() ^ 
  ap_const_logic_1) & (sum_0_i_i_loc1_chann_empty_n.read() ^ 
  ap_const_logic_1));
}

void dataflow_in_loop_ih_s::thread_ap_ready() {
    ap_ready = ap_sync_ready.read();
}

void dataflow_in_loop_ih_s::thread_ap_sync_aesl_mux_load_32_785_U0_ap_ready() {
    ap_sync_aesl_mux_load_32_785_U0_ap_ready = (aesl_mux_load_32_785_U0_ap_ready.read() | ap_sync_reg_aesl_mux_load_32_785_U0_ap_ready.read());
}

void dataflow_in_loop_ih_s::thread_ap_sync_continue() {
    ap_sync_continue = ap_continue.read();
}

void dataflow_in_loop_ih_s::thread_ap_sync_done() {
    ap_sync_done = p_nn_hls_src_digitRe_U0_ap_done.read();
}

void dataflow_in_loop_ih_s::thread_ap_sync_hn_loop_proc_U0_ap_ready() {
    ap_sync_hn_loop_proc_U0_ap_ready = (hn_loop_proc_U0_ap_ready.read() | ap_sync_reg_hn_loop_proc_U0_ap_ready.read());
}

void dataflow_in_loop_ih_s::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_aesl_mux_load_32_785_U0_ap_ready.read() & ap_sync_hn_loop_proc_U0_ap_ready.read());
}

void dataflow_in_loop_ih_s::thread_hiddenOut_address0() {
    hiddenOut_address0 = p_nn_hls_src_digitRe_U0_hiddenOut_address0.read();
}

void dataflow_in_loop_ih_s::thread_hiddenOut_address1() {
    hiddenOut_address1 = ap_const_lv5_0;
}

void dataflow_in_loop_ih_s::thread_hiddenOut_ce0() {
    hiddenOut_ce0 = p_nn_hls_src_digitRe_U0_hiddenOut_ce0.read();
}

void dataflow_in_loop_ih_s::thread_hiddenOut_ce1() {
    hiddenOut_ce1 = ap_const_logic_0;
}

void dataflow_in_loop_ih_s::thread_hiddenOut_d0() {
    hiddenOut_d0 = p_nn_hls_src_digitRe_U0_hiddenOut_d0.read();
}

void dataflow_in_loop_ih_s::thread_hiddenOut_d1() {
    hiddenOut_d1 = ap_const_lv32_0;
}

void dataflow_in_loop_ih_s::thread_hiddenOut_we0() {
    hiddenOut_we0 = p_nn_hls_src_digitRe_U0_hiddenOut_we0.read();
}

void dataflow_in_loop_ih_s::thread_hiddenOut_we1() {
    hiddenOut_we1 = ap_const_logic_0;
}

void dataflow_in_loop_ih_s::thread_hiddenOut_write() {
    hiddenOut_write = p_nn_hls_src_digitRe_U0_hiddenOut_write.read();
}

void dataflow_in_loop_ih_s::thread_hn_loop_proc_U0_ap_continue() {
    hn_loop_proc_U0_ap_continue = sum_0_i_i_loc1_chann_full_n.read();
}

void dataflow_in_loop_ih_s::thread_hn_loop_proc_U0_ap_start() {
    hn_loop_proc_U0_ap_start = (p_channel_empty_n.read() & ap_start.read() & (ap_sync_reg_hn_loop_proc_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void dataflow_in_loop_ih_s::thread_hn_loop_proc_U0_start_full_n() {
    hn_loop_proc_U0_start_full_n = ap_const_logic_0;
}

void dataflow_in_loop_ih_s::thread_hn_loop_proc_U0_start_write() {
    hn_loop_proc_U0_start_write = ap_const_logic_0;
}

void dataflow_in_loop_ih_s::thread_inputData_address0() {
    inputData_address0 = hn_loop_proc_U0_inputData_address0.read();
}

void dataflow_in_loop_ih_s::thread_inputData_ce0() {
    inputData_ce0 = hn_loop_proc_U0_inputData_ce0.read();
}

void dataflow_in_loop_ih_s::thread_inputData_d0() {
    inputData_d0 = ap_const_lv32_0;
}

void dataflow_in_loop_ih_s::thread_inputData_we0() {
    inputData_we0 = ap_const_logic_0;
}

void dataflow_in_loop_ih_s::thread_p_nn_hls_src_digitRe_U0_ap_continue() {
    p_nn_hls_src_digitRe_U0_ap_continue = ap_continue.read();
}

void dataflow_in_loop_ih_s::thread_p_nn_hls_src_digitRe_U0_ap_start() {
    p_nn_hls_src_digitRe_U0_ap_start = sum_0_i_i_loc1_chann_empty_n.read();
}

void dataflow_in_loop_ih_s::thread_p_nn_hls_src_digitRe_U0_hiddenOut_full_n() {
    p_nn_hls_src_digitRe_U0_hiddenOut_full_n = hiddenOut_full_n.read();
}

void dataflow_in_loop_ih_s::thread_p_nn_hls_src_digitRe_U0_hiddenOut_write() {
    p_nn_hls_src_digitRe_U0_hiddenOut_write = ap_const_logic_0;
}

void dataflow_in_loop_ih_s::thread_p_nn_hls_src_digitRe_U0_start_full_n() {
    p_nn_hls_src_digitRe_U0_start_full_n = ap_const_logic_0;
}

void dataflow_in_loop_ih_s::thread_p_nn_hls_src_digitRe_U0_start_write() {
    p_nn_hls_src_digitRe_U0_start_write = ap_const_logic_0;
}

}

