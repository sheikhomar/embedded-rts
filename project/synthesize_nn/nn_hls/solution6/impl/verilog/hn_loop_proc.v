// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hn_loop_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        empty,
        o_0_i_i_dout,
        o_0_i_i_empty_n,
        o_0_i_i_read,
        inputData_address0,
        inputData_ce0,
        inputData_q0,
        o_0_i_i_out_din,
        o_0_i_i_out_full_n,
        o_0_i_i_out_write,
        ap_return
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_pp0_stage0 = 9'd2;
parameter    ap_ST_fsm_pp0_stage1 = 9'd4;
parameter    ap_ST_fsm_pp0_stage2 = 9'd8;
parameter    ap_ST_fsm_pp0_stage3 = 9'd16;
parameter    ap_ST_fsm_pp0_stage4 = 9'd32;
parameter    ap_ST_fsm_pp0_stage5 = 9'd64;
parameter    ap_ST_fsm_pp0_stage6 = 9'd128;
parameter    ap_ST_fsm_state15 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] empty;
input  [5:0] o_0_i_i_dout;
input   o_0_i_i_empty_n;
output   o_0_i_i_read;
output  [9:0] inputData_address0;
output   inputData_ce0;
input  [31:0] inputData_q0;
output  [5:0] o_0_i_i_out_din;
input   o_0_i_i_out_full_n;
output   o_0_i_i_out_write;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg o_0_i_i_read;
reg inputData_ce0;
reg o_0_i_i_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] inputToHiddenWeights_2_address0;
reg    inputToHiddenWeights_2_ce0;
wire   [31:0] inputToHiddenWeights_2_q0;
wire   [9:0] inputToHiddenWeights_1_address0;
reg    inputToHiddenWeights_1_ce0;
wire   [31:0] inputToHiddenWeights_1_q0;
wire   [9:0] inputToHiddenWeights_34_address0;
reg    inputToHiddenWeights_34_ce0;
wire   [31:0] inputToHiddenWeights_34_q0;
wire   [9:0] inputToHiddenWeights_3_address0;
reg    inputToHiddenWeights_3_ce0;
wire   [31:0] inputToHiddenWeights_3_q0;
wire   [9:0] inputToHiddenWeights_55_address0;
reg    inputToHiddenWeights_55_ce0;
wire   [31:0] inputToHiddenWeights_55_q0;
wire   [9:0] inputToHiddenWeights_5_address0;
reg    inputToHiddenWeights_5_ce0;
wire   [31:0] inputToHiddenWeights_5_q0;
wire   [9:0] inputToHiddenWeights_58_address0;
reg    inputToHiddenWeights_58_ce0;
wire   [31:0] inputToHiddenWeights_58_q0;
wire   [9:0] inputToHiddenWeights_7_address0;
reg    inputToHiddenWeights_7_ce0;
wire   [31:0] inputToHiddenWeights_7_q0;
wire   [9:0] inputToHiddenWeights_61_address0;
reg    inputToHiddenWeights_61_ce0;
wire   [31:0] inputToHiddenWeights_61_q0;
wire   [9:0] inputToHiddenWeights_9_address0;
reg    inputToHiddenWeights_9_ce0;
wire   [31:0] inputToHiddenWeights_9_q0;
wire   [9:0] inputToHiddenWeights_6_address0;
reg    inputToHiddenWeights_6_ce0;
wire   [31:0] inputToHiddenWeights_6_q0;
wire   [9:0] inputToHiddenWeights_11_address0;
reg    inputToHiddenWeights_11_ce0;
wire   [31:0] inputToHiddenWeights_11_q0;
wire   [9:0] inputToHiddenWeights_12_address0;
reg    inputToHiddenWeights_12_ce0;
wire   [31:0] inputToHiddenWeights_12_q0;
wire   [9:0] inputToHiddenWeights_13_address0;
reg    inputToHiddenWeights_13_ce0;
wire   [31:0] inputToHiddenWeights_13_q0;
wire   [9:0] inputToHiddenWeights_18_address0;
reg    inputToHiddenWeights_18_ce0;
wire   [31:0] inputToHiddenWeights_18_q0;
wire   [9:0] inputToHiddenWeights_15_address0;
reg    inputToHiddenWeights_15_ce0;
wire   [31:0] inputToHiddenWeights_15_q0;
wire   [9:0] inputToHiddenWeights_25_address0;
reg    inputToHiddenWeights_25_ce0;
wire   [31:0] inputToHiddenWeights_25_q0;
wire   [9:0] inputToHiddenWeights_17_address0;
reg    inputToHiddenWeights_17_ce0;
wire   [31:0] inputToHiddenWeights_17_q0;
wire   [9:0] inputToHiddenWeights_30_address0;
reg    inputToHiddenWeights_30_ce0;
wire   [31:0] inputToHiddenWeights_30_q0;
wire   [9:0] inputToHiddenWeights_19_address0;
reg    inputToHiddenWeights_19_ce0;
wire   [31:0] inputToHiddenWeights_19_q0;
wire   [9:0] inputToHiddenWeights_20_address0;
reg    inputToHiddenWeights_20_ce0;
wire   [31:0] inputToHiddenWeights_20_q0;
wire   [9:0] inputToHiddenWeights_37_address0;
reg    inputToHiddenWeights_37_ce0;
wire   [31:0] inputToHiddenWeights_37_q0;
wire   [9:0] inputToHiddenWeights_22_address0;
reg    inputToHiddenWeights_22_ce0;
wire   [31:0] inputToHiddenWeights_22_q0;
wire   [9:0] inputToHiddenWeights_40_address0;
reg    inputToHiddenWeights_40_ce0;
wire   [31:0] inputToHiddenWeights_40_q0;
wire   [9:0] inputToHiddenWeights_24_address0;
reg    inputToHiddenWeights_24_ce0;
wire   [31:0] inputToHiddenWeights_24_q0;
wire   [9:0] inputToHiddenWeights_43_address0;
reg    inputToHiddenWeights_43_ce0;
wire   [31:0] inputToHiddenWeights_43_q0;
wire   [9:0] inputToHiddenWeights_26_address0;
reg    inputToHiddenWeights_26_ce0;
wire   [31:0] inputToHiddenWeights_26_q0;
wire   [9:0] inputToHiddenWeights_46_address0;
reg    inputToHiddenWeights_46_ce0;
wire   [31:0] inputToHiddenWeights_46_q0;
wire   [9:0] inputToHiddenWeights_28_address0;
reg    inputToHiddenWeights_28_ce0;
wire   [31:0] inputToHiddenWeights_28_q0;
wire   [9:0] inputToHiddenWeights_49_address0;
reg    inputToHiddenWeights_49_ce0;
wire   [31:0] inputToHiddenWeights_49_q0;
wire   [9:0] inputToHiddenWeights_52_address0;
reg    inputToHiddenWeights_52_ce0;
wire   [31:0] inputToHiddenWeights_52_q0;
wire   [9:0] inputToHiddenWeights_31_address0;
reg    inputToHiddenWeights_31_ce0;
wire   [31:0] inputToHiddenWeights_31_q0;
reg    o_0_i_i_blk_n;
reg    o_0_i_i_out_blk_n;
reg   [9:0] i_0_i_i_i_i_reg_562;
reg   [31:0] sum_0_i_i_loc1_reg_573;
reg    ap_block_state1;
wire   [4:0] tmp_1_fu_592_p1;
reg   [4:0] tmp_1_reg_729;
wire   [0:0] exitcond2_i_i_i_i_fu_596_p2;
reg   [0:0] exitcond2_i_i_i_i_reg_734;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_flag00011001;
reg   [0:0] ap_reg_pp0_iter1_exitcond2_i_i_i_i_reg_734;
wire   [9:0] i_fu_649_p2;
reg   [9:0] i_reg_903;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] tmp_fu_655_p34;
reg   [31:0] tmp_reg_908;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_flag00011001;
reg   [31:0] inputData_load_reg_913;
wire   [31:0] grp_fu_588_p2;
reg   [31:0] tmp_7_i_i_i_reg_918;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_state14_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_flag00011001;
wire   [31:0] grp_fu_583_p2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_flag00011011;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage5_flag00011011;
reg   [9:0] i_0_i_i_i_i_phi_fu_566_p4;
wire    ap_block_pp0_stage0_flag00000000;
wire   [31:0] tmp_5_i_i_i_fu_602_p1;
wire   [31:0] sum_cast_i_i_fu_644_p1;
wire    ap_block_pp0_stage6_flag00000000;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_flag00000000;
wire   [9:0] sum_i_i_fu_638_p2;
wire    ap_block_pp0_stage1_flag00000000;
wire    ap_CS_fsm_state15;
reg   [8:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_flag00011011;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_flag00011011;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_flag00011011;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_flag00011011;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

hn_loop_proc_inpubkb #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_2_address0),
    .ce0(inputToHiddenWeights_2_ce0),
    .q0(inputToHiddenWeights_2_q0)
);

hn_loop_proc_inpucud #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_1_address0),
    .ce0(inputToHiddenWeights_1_ce0),
    .q0(inputToHiddenWeights_1_q0)
);

hn_loop_proc_inpudEe #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_34_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_34_address0),
    .ce0(inputToHiddenWeights_34_ce0),
    .q0(inputToHiddenWeights_34_q0)
);

hn_loop_proc_inpueOg #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_3_address0),
    .ce0(inputToHiddenWeights_3_ce0),
    .q0(inputToHiddenWeights_3_q0)
);

hn_loop_proc_inpufYi #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_55_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_55_address0),
    .ce0(inputToHiddenWeights_55_ce0),
    .q0(inputToHiddenWeights_55_q0)
);

hn_loop_proc_inpug8j #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_5_address0),
    .ce0(inputToHiddenWeights_5_ce0),
    .q0(inputToHiddenWeights_5_q0)
);

hn_loop_proc_inpuhbi #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_58_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_58_address0),
    .ce0(inputToHiddenWeights_58_ce0),
    .q0(inputToHiddenWeights_58_q0)
);

hn_loop_proc_inpuibs #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_7_address0),
    .ce0(inputToHiddenWeights_7_ce0),
    .q0(inputToHiddenWeights_7_q0)
);

hn_loop_proc_inpujbC #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_61_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_61_address0),
    .ce0(inputToHiddenWeights_61_ce0),
    .q0(inputToHiddenWeights_61_q0)
);

hn_loop_proc_inpukbM #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_9_address0),
    .ce0(inputToHiddenWeights_9_ce0),
    .q0(inputToHiddenWeights_9_q0)
);

hn_loop_proc_inpulbW #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_6_address0),
    .ce0(inputToHiddenWeights_6_ce0),
    .q0(inputToHiddenWeights_6_q0)
);

hn_loop_proc_inpumb6 #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_11_address0),
    .ce0(inputToHiddenWeights_11_ce0),
    .q0(inputToHiddenWeights_11_q0)
);

hn_loop_proc_inpuncg #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_12_address0),
    .ce0(inputToHiddenWeights_12_ce0),
    .q0(inputToHiddenWeights_12_q0)
);

hn_loop_proc_inpuocq #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_13_address0),
    .ce0(inputToHiddenWeights_13_ce0),
    .q0(inputToHiddenWeights_13_q0)
);

hn_loop_proc_inpupcA #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_18_address0),
    .ce0(inputToHiddenWeights_18_ce0),
    .q0(inputToHiddenWeights_18_q0)
);

hn_loop_proc_inpuqcK #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_15_address0),
    .ce0(inputToHiddenWeights_15_ce0),
    .q0(inputToHiddenWeights_15_q0)
);

hn_loop_proc_inpurcU #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_25_address0),
    .ce0(inputToHiddenWeights_25_ce0),
    .q0(inputToHiddenWeights_25_q0)
);

hn_loop_proc_inpusc4 #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_17_address0),
    .ce0(inputToHiddenWeights_17_ce0),
    .q0(inputToHiddenWeights_17_q0)
);

hn_loop_proc_inputde #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_30_address0),
    .ce0(inputToHiddenWeights_30_ce0),
    .q0(inputToHiddenWeights_30_q0)
);

hn_loop_proc_inpuudo #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_19_address0),
    .ce0(inputToHiddenWeights_19_ce0),
    .q0(inputToHiddenWeights_19_q0)
);

hn_loop_proc_inpuvdy #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_20_address0),
    .ce0(inputToHiddenWeights_20_ce0),
    .q0(inputToHiddenWeights_20_q0)
);

hn_loop_proc_inpuwdI #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_37_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_37_address0),
    .ce0(inputToHiddenWeights_37_ce0),
    .q0(inputToHiddenWeights_37_q0)
);

hn_loop_proc_inpuxdS #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_22_address0),
    .ce0(inputToHiddenWeights_22_ce0),
    .q0(inputToHiddenWeights_22_q0)
);

hn_loop_proc_inpuyd2 #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_40_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_40_address0),
    .ce0(inputToHiddenWeights_40_ce0),
    .q0(inputToHiddenWeights_40_q0)
);

hn_loop_proc_inpuzec #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_24_address0),
    .ce0(inputToHiddenWeights_24_ce0),
    .q0(inputToHiddenWeights_24_q0)
);

hn_loop_proc_inpuAem #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_43_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_43_address0),
    .ce0(inputToHiddenWeights_43_ce0),
    .q0(inputToHiddenWeights_43_q0)
);

hn_loop_proc_inpuBew #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_26_address0),
    .ce0(inputToHiddenWeights_26_ce0),
    .q0(inputToHiddenWeights_26_q0)
);

hn_loop_proc_inpuCeG #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_46_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_46_address0),
    .ce0(inputToHiddenWeights_46_ce0),
    .q0(inputToHiddenWeights_46_q0)
);

hn_loop_proc_inpuDeQ #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_28_address0),
    .ce0(inputToHiddenWeights_28_ce0),
    .q0(inputToHiddenWeights_28_q0)
);

hn_loop_proc_inpuEe0 #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_49_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_49_address0),
    .ce0(inputToHiddenWeights_49_ce0),
    .q0(inputToHiddenWeights_49_q0)
);

hn_loop_proc_inpuFfa #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_52_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_52_address0),
    .ce0(inputToHiddenWeights_52_ce0),
    .q0(inputToHiddenWeights_52_q0)
);

hn_loop_proc_inpuGfk #(
    .DataWidth( 32 ),
    .AddressRange( 785 ),
    .AddressWidth( 10 ))
inputToHiddenWeights_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputToHiddenWeights_31_address0),
    .ce0(inputToHiddenWeights_31_ce0),
    .q0(inputToHiddenWeights_31_q0)
);

digitRecognizer_fHfu #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
digitRecognizer_fHfu_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_0_i_i_loc1_reg_573),
    .din1(tmp_7_i_i_i_reg_918),
    .ce(1'b1),
    .dout(grp_fu_583_p2)
);

digitRecognizer_fIfE #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
digitRecognizer_fIfE_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_908),
    .din1(inputData_load_reg_913),
    .ce(1'b1),
    .dout(grp_fu_588_p2)
);

digitRecognizer_mJfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
digitRecognizer_mJfO_U5(
    .din1(inputToHiddenWeights_2_q0),
    .din2(inputToHiddenWeights_1_q0),
    .din3(inputToHiddenWeights_34_q0),
    .din4(inputToHiddenWeights_3_q0),
    .din5(inputToHiddenWeights_55_q0),
    .din6(inputToHiddenWeights_5_q0),
    .din7(inputToHiddenWeights_58_q0),
    .din8(inputToHiddenWeights_7_q0),
    .din9(inputToHiddenWeights_61_q0),
    .din10(inputToHiddenWeights_9_q0),
    .din11(inputToHiddenWeights_6_q0),
    .din12(inputToHiddenWeights_11_q0),
    .din13(inputToHiddenWeights_12_q0),
    .din14(inputToHiddenWeights_13_q0),
    .din15(inputToHiddenWeights_18_q0),
    .din16(inputToHiddenWeights_15_q0),
    .din17(inputToHiddenWeights_25_q0),
    .din18(inputToHiddenWeights_17_q0),
    .din19(inputToHiddenWeights_30_q0),
    .din20(inputToHiddenWeights_19_q0),
    .din21(inputToHiddenWeights_20_q0),
    .din22(inputToHiddenWeights_37_q0),
    .din23(inputToHiddenWeights_22_q0),
    .din24(inputToHiddenWeights_40_q0),
    .din25(inputToHiddenWeights_24_q0),
    .din26(inputToHiddenWeights_43_q0),
    .din27(inputToHiddenWeights_26_q0),
    .din28(inputToHiddenWeights_46_q0),
    .din29(inputToHiddenWeights_28_q0),
    .din30(inputToHiddenWeights_49_q0),
    .din31(inputToHiddenWeights_52_q0),
    .din32(inputToHiddenWeights_31_q0),
    .din33(tmp_1_reg_729),
    .dout(tmp_fu_655_p34)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == o_0_i_i_empty_n) | (1'b0 == o_0_i_i_out_full_n)))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (((ap_block_pp0_stage6_flag00011011 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_flag00011011 == 1'b0))))) begin
            ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 ^ 1'b1);
        end else if ((((ap_block_pp0_stage6_flag00011011 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_flag00011011 == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == o_0_i_i_empty_n) | (1'b0 == o_0_i_i_out_full_n)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond2_i_i_i_i_reg_734 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_0_i_i_i_i_reg_562 <= i_reg_903;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == o_0_i_i_empty_n) | (1'b0 == o_0_i_i_out_full_n)))) begin
        i_0_i_i_i_i_reg_562 <= 10'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_reg_pp0_iter1_exitcond2_i_i_i_i_reg_734 == 1'd0))) begin
        sum_0_i_i_loc1_reg_573 <= grp_fu_583_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == o_0_i_i_empty_n) | (1'b0 == o_0_i_i_out_full_n)))) begin
        sum_0_i_i_loc1_reg_573 <= empty;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond2_i_i_i_i_reg_734 <= exitcond2_i_i_i_i_reg_734;
        exitcond2_i_i_i_i_reg_734 <= exitcond2_i_i_i_i_fu_596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (exitcond2_i_i_i_i_fu_596_p2 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        i_reg_903 <= i_fu_649_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_flag00011001 == 1'b0) & (exitcond2_i_i_i_i_reg_734 == 1'd0))) begin
        inputData_load_reg_913 <= inputData_q0;
        tmp_reg_908 <= tmp_fu_655_p34;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == o_0_i_i_empty_n) | (1'b0 == o_0_i_i_out_full_n)))) begin
        tmp_1_reg_729 <= tmp_1_fu_592_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_i_i_i_i_reg_734 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_flag00011001 == 1'b0))) begin
        tmp_7_i_i_i_reg_918 <= grp_fu_588_p2;
    end
end

always @ (*) begin
    if ((exitcond2_i_i_i_i_fu_596_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_i_i_i_i_reg_734 == 1'd0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0))) begin
        i_0_i_i_i_i_phi_fu_566_p4 = i_reg_903;
    end else begin
        i_0_i_i_i_i_phi_fu_566_p4 = i_0_i_i_i_i_reg_562;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputData_ce0 = 1'b1;
    end else begin
        inputData_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_11_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_12_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_13_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_15_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_17_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_18_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_19_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_1_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_20_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_22_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_24_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_25_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_26_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_28_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_2_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_30_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_31_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_34_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_37_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_3_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_40_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_43_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_46_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_49_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_52_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_55_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_58_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_5_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_61_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_6_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_7_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        inputToHiddenWeights_9_ce0 = 1'b1;
    end else begin
        inputToHiddenWeights_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        o_0_i_i_blk_n = o_0_i_i_empty_n;
    end else begin
        o_0_i_i_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        o_0_i_i_out_blk_n = o_0_i_i_out_full_n;
    end else begin
        o_0_i_i_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == o_0_i_i_empty_n) | (1'b0 == o_0_i_i_out_full_n)))) begin
        o_0_i_i_out_write = 1'b1;
    end else begin
        o_0_i_i_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == o_0_i_i_empty_n) | (1'b0 == o_0_i_i_out_full_n)))) begin
        o_0_i_i_read = 1'b1;
    end else begin
        o_0_i_i_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == o_0_i_i_empty_n) | (1'b0 == o_0_i_i_out_full_n)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_block_pp0_stage0_flag00011011 == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond2_i_i_i_i_fu_596_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond2_i_i_i_i_fu_596_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((ap_block_pp0_stage1_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((ap_block_pp0_stage2_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((ap_block_pp0_stage3_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((ap_block_pp0_stage4_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if (((ap_block_pp0_stage5_flag00011011 == 1'b0) & ~((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage5_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage5_flag00011011 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((ap_block_pp0_stage6_flag00011011 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_flag00011001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_flag00011011 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_flag00000000 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_flag00011011 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == o_0_i_i_empty_n) | (1'b0 == o_0_i_i_out_full_n));
end

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return = sum_0_i_i_loc1_reg_573;

assign exitcond2_i_i_i_i_fu_596_p2 = ((i_0_i_i_i_i_phi_fu_566_p4 == 10'd785) ? 1'b1 : 1'b0);

assign i_fu_649_p2 = (i_0_i_i_i_i_phi_fu_566_p4 + 10'd1);

assign inputData_address0 = sum_cast_i_i_fu_644_p1;

assign inputToHiddenWeights_11_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_12_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_13_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_15_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_17_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_18_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_19_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_1_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_20_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_22_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_24_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_25_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_26_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_28_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_2_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_30_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_31_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_34_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_37_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_3_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_40_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_43_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_46_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_49_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_52_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_55_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_58_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_5_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_61_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_6_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_7_address0 = tmp_5_i_i_i_fu_602_p1;

assign inputToHiddenWeights_9_address0 = tmp_5_i_i_i_fu_602_p1;

assign o_0_i_i_out_din = o_0_i_i_dout;

assign sum_cast_i_i_fu_644_p1 = sum_i_i_fu_638_p2;

assign sum_i_i_fu_638_p2 = ($signed(i_0_i_i_i_i_phi_fu_566_p4) + $signed(10'd1023));

assign tmp_1_fu_592_p1 = o_0_i_i_dout[4:0];

assign tmp_5_i_i_i_fu_602_p1 = i_0_i_i_i_i_phi_fu_566_p4;

endmodule //hn_loop_proc
