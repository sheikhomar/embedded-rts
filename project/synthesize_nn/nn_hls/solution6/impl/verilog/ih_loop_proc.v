// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ih_loop_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        hiddenOut_address0,
        hiddenOut_ce0,
        hiddenOut_we0,
        hiddenOut_d0,
        inputData_address0,
        inputData_ce0,
        inputData_q0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [4:0] hiddenOut_address0;
output   hiddenOut_ce0;
output   hiddenOut_we0;
output  [31:0] hiddenOut_d0;
output  [9:0] inputData_address0;
output   inputData_ce0;
input  [31:0] inputData_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] o_fu_184_p2;
reg   [5:0] o_reg_193;
wire    ap_CS_fsm_state2;
wire   [9:0] grp_dataflow_in_loop_ih_s_fu_104_inputData_address0;
wire    grp_dataflow_in_loop_ih_s_fu_104_inputData_ce0;
wire   [31:0] grp_dataflow_in_loop_ih_s_fu_104_inputData_d0;
wire    grp_dataflow_in_loop_ih_s_fu_104_inputData_we0;
wire   [4:0] grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_address0;
wire    grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_ce0;
wire   [31:0] grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_d0;
wire    grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_we0;
wire   [4:0] grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_address1;
wire    grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_ce1;
wire   [31:0] grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_d1;
wire    grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_we1;
wire    grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_write;
wire    grp_dataflow_in_loop_ih_s_fu_104_ap_done;
wire    grp_dataflow_in_loop_ih_s_fu_104_ap_start;
wire    grp_dataflow_in_loop_ih_s_fu_104_ap_ready;
wire    grp_dataflow_in_loop_ih_s_fu_104_ap_idle;
reg    grp_dataflow_in_loop_ih_s_fu_104_ap_continue;
reg   [5:0] o_0_i_i_reg_92;
reg    ap_block_state1;
wire    ap_CS_fsm_state3;
reg    ap_reg_grp_dataflow_in_loop_ih_s_fu_104_ap_start;
wire   [0:0] exitcond3_i_i_fu_178_p2;
reg    ap_sync_reg_grp_dataflow_in_loop_ih_s_fu_104_ap_ready;
reg    ap_sync_grp_dataflow_in_loop_ih_s_fu_104_ap_ready;
reg   [2:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_reg_grp_dataflow_in_loop_ih_s_fu_104_ap_start = 1'b0;
#0 ap_sync_reg_grp_dataflow_in_loop_ih_s_fu_104_ap_ready = 1'b0;
end

dataflow_in_loop_ih_s grp_dataflow_in_loop_ih_s_fu_104(
    .o_0_i_i(o_0_i_i_reg_92),
    .inputData_address0(grp_dataflow_in_loop_ih_s_fu_104_inputData_address0),
    .inputData_ce0(grp_dataflow_in_loop_ih_s_fu_104_inputData_ce0),
    .inputData_d0(grp_dataflow_in_loop_ih_s_fu_104_inputData_d0),
    .inputData_q0(inputData_q0),
    .inputData_we0(grp_dataflow_in_loop_ih_s_fu_104_inputData_we0),
    .hiddenOut_address0(grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_address0),
    .hiddenOut_ce0(grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_ce0),
    .hiddenOut_d0(grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_d0),
    .hiddenOut_q0(32'd0),
    .hiddenOut_we0(grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_we0),
    .hiddenOut_address1(grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_address1),
    .hiddenOut_ce1(grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_ce1),
    .hiddenOut_d1(grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_d1),
    .hiddenOut_q1(32'd0),
    .hiddenOut_we1(grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_we1),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .o_0_i_i_ap_vld(1'b1),
    .hiddenOut_full_n(1'b0),
    .hiddenOut_write(grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_write),
    .ap_done(grp_dataflow_in_loop_ih_s_fu_104_ap_done),
    .ap_start(grp_dataflow_in_loop_ih_s_fu_104_ap_start),
    .ap_ready(grp_dataflow_in_loop_ih_s_fu_104_ap_ready),
    .ap_idle(grp_dataflow_in_loop_ih_s_fu_104_ap_idle),
    .ap_continue(grp_dataflow_in_loop_ih_s_fu_104_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_i_i_fu_178_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dataflow_in_loop_ih_s_fu_104_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state2) & (exitcond3_i_i_fu_178_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_sync_grp_dataflow_in_loop_ih_s_fu_104_ap_ready)))) begin
            ap_reg_grp_dataflow_in_loop_ih_s_fu_104_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dataflow_in_loop_ih_s_fu_104_ap_ready)) begin
            ap_reg_grp_dataflow_in_loop_ih_s_fu_104_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_dataflow_in_loop_ih_s_fu_104_ap_ready <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            if ((grp_dataflow_in_loop_ih_s_fu_104_ap_done == 1'b1)) begin
                ap_sync_reg_grp_dataflow_in_loop_ih_s_fu_104_ap_ready <= 1'b0;
            end else if ((1'b1 == grp_dataflow_in_loop_ih_s_fu_104_ap_ready)) begin
                ap_sync_reg_grp_dataflow_in_loop_ih_s_fu_104_ap_ready <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_dataflow_in_loop_ih_s_fu_104_ap_done == 1'b1))) begin
        o_0_i_i_reg_92 <= o_reg_193;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        o_0_i_i_reg_92 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        o_reg_193 <= o_fu_184_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_i_i_fu_178_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_i_i_fu_178_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_sync_reg_grp_dataflow_in_loop_ih_s_fu_104_ap_ready)) begin
        ap_sync_grp_dataflow_in_loop_ih_s_fu_104_ap_ready = grp_dataflow_in_loop_ih_s_fu_104_ap_ready;
    end else begin
        ap_sync_grp_dataflow_in_loop_ih_s_fu_104_ap_ready = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_dataflow_in_loop_ih_s_fu_104_ap_done == 1'b1))) begin
        grp_dataflow_in_loop_ih_s_fu_104_ap_continue = 1'b1;
    end else begin
        grp_dataflow_in_loop_ih_s_fu_104_ap_continue = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_i_i_fu_178_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_dataflow_in_loop_ih_s_fu_104_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((1'b0 == ap_start) | (ap_done_reg == 1'b1));
end

assign exitcond3_i_i_fu_178_p2 = ((o_0_i_i_reg_92 == 6'd32) ? 1'b1 : 1'b0);

assign grp_dataflow_in_loop_ih_s_fu_104_ap_start = ap_reg_grp_dataflow_in_loop_ih_s_fu_104_ap_start;

assign hiddenOut_address0 = grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_address0;

assign hiddenOut_ce0 = grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_ce0;

assign hiddenOut_d0 = grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_d0;

assign hiddenOut_we0 = grp_dataflow_in_loop_ih_s_fu_104_hiddenOut_we0;

assign inputData_address0 = grp_dataflow_in_loop_ih_s_fu_104_inputData_address0;

assign inputData_ce0 = grp_dataflow_in_loop_ih_s_fu_104_inputData_ce0;

assign o_fu_184_p2 = (o_0_i_i_reg_92 + 6'd1);

endmodule //ih_loop_proc
